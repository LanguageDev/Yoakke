### YamlMime:XRefMap
sorted: true
references:
- uid: System.Collections.Generic.Polyfill
  name: System.Collections.Generic.Polyfill
  href: api/System.Collections.Generic.Polyfill.html
  commentId: N:System.Collections.Generic.Polyfill
  fullName: System.Collections.Generic.Polyfill
  nameWithType: System.Collections.Generic.Polyfill
- uid: System.Collections.Generic.Polyfill.DictionaryExtensions
  name: DictionaryExtensions
  href: api/System.Collections.Generic.Polyfill.DictionaryExtensions.html
  commentId: T:System.Collections.Generic.Polyfill.DictionaryExtensions
  fullName: System.Collections.Generic.Polyfill.DictionaryExtensions
  nameWithType: DictionaryExtensions
- uid: System.Collections.Generic.Polyfill.DictionaryExtensions.Remove*
  name: Remove
  href: api/System.Collections.Generic.Polyfill.DictionaryExtensions.html#System_Collections_Generic_Polyfill_DictionaryExtensions_Remove_
  commentId: Overload:System.Collections.Generic.Polyfill.DictionaryExtensions.Remove
  isSpec: "True"
  fullName: System.Collections.Generic.Polyfill.DictionaryExtensions.Remove
  nameWithType: DictionaryExtensions.Remove
- uid: System.Collections.Generic.Polyfill.DictionaryExtensions.Remove``2(Dictionary{``0,``1},``0,``1@)
  name: Remove<TKey, TValue>(Dictionary<TKey, TValue>, TKey, out TValue)
  href: api/System.Collections.Generic.Polyfill.DictionaryExtensions.html#System_Collections_Generic_Polyfill_DictionaryExtensions_Remove__2_Dictionary___0___1____0___1__
  commentId: M:System.Collections.Generic.Polyfill.DictionaryExtensions.Remove``2(Dictionary{``0,``1},``0,``1@)
  name.vb: Remove(Of TKey, TValue)(Dictionary(Of TKey, TValue), TKey, ByRef TValue)
  fullName: System.Collections.Generic.Polyfill.DictionaryExtensions.Remove<TKey, TValue>(Dictionary<TKey, TValue>, TKey, out TValue)
  fullName.vb: System.Collections.Generic.Polyfill.DictionaryExtensions.Remove(Of TKey, TValue)(Dictionary(Of TKey, TValue), TKey, ByRef TValue)
  nameWithType: DictionaryExtensions.Remove<TKey, TValue>(Dictionary<TKey, TValue>, TKey, out TValue)
  nameWithType.vb: DictionaryExtensions.Remove(Of TKey, TValue)(Dictionary(Of TKey, TValue), TKey, ByRef TValue)
- uid: System.Collections.Generic.Polyfill.EnumerableExtensions
  name: EnumerableExtensions
  href: api/System.Collections.Generic.Polyfill.EnumerableExtensions.html
  commentId: T:System.Collections.Generic.Polyfill.EnumerableExtensions
  fullName: System.Collections.Generic.Polyfill.EnumerableExtensions
  nameWithType: EnumerableExtensions
- uid: System.Collections.Generic.Polyfill.EnumerableExtensions.SkipLast*
  name: SkipLast
  href: api/System.Collections.Generic.Polyfill.EnumerableExtensions.html#System_Collections_Generic_Polyfill_EnumerableExtensions_SkipLast_
  commentId: Overload:System.Collections.Generic.Polyfill.EnumerableExtensions.SkipLast
  isSpec: "True"
  fullName: System.Collections.Generic.Polyfill.EnumerableExtensions.SkipLast
  nameWithType: EnumerableExtensions.SkipLast
- uid: System.Collections.Generic.Polyfill.EnumerableExtensions.SkipLast``1(IEnumerable{``0},System.Int32)
  name: SkipLast<TSource>(IEnumerable<TSource>, Int32)
  href: api/System.Collections.Generic.Polyfill.EnumerableExtensions.html#System_Collections_Generic_Polyfill_EnumerableExtensions_SkipLast__1_IEnumerable___0__System_Int32_
  commentId: M:System.Collections.Generic.Polyfill.EnumerableExtensions.SkipLast``1(IEnumerable{``0},System.Int32)
  name.vb: SkipLast(Of TSource)(IEnumerable(Of TSource), Int32)
  fullName: System.Collections.Generic.Polyfill.EnumerableExtensions.SkipLast<TSource>(IEnumerable<TSource>, System.Int32)
  fullName.vb: System.Collections.Generic.Polyfill.EnumerableExtensions.SkipLast(Of TSource)(IEnumerable(Of TSource), System.Int32)
  nameWithType: EnumerableExtensions.SkipLast<TSource>(IEnumerable<TSource>, Int32)
  nameWithType.vb: EnumerableExtensions.SkipLast(Of TSource)(IEnumerable(Of TSource), Int32)
- uid: System.Collections.Generic.Polyfill.EnumerableExtensions.ToHashSet*
  name: ToHashSet
  href: api/System.Collections.Generic.Polyfill.EnumerableExtensions.html#System_Collections_Generic_Polyfill_EnumerableExtensions_ToHashSet_
  commentId: Overload:System.Collections.Generic.Polyfill.EnumerableExtensions.ToHashSet
  isSpec: "True"
  fullName: System.Collections.Generic.Polyfill.EnumerableExtensions.ToHashSet
  nameWithType: EnumerableExtensions.ToHashSet
- uid: System.Collections.Generic.Polyfill.EnumerableExtensions.ToHashSet``1(IEnumerable{``0})
  name: ToHashSet<TSource>(IEnumerable<TSource>)
  href: api/System.Collections.Generic.Polyfill.EnumerableExtensions.html#System_Collections_Generic_Polyfill_EnumerableExtensions_ToHashSet__1_IEnumerable___0__
  commentId: M:System.Collections.Generic.Polyfill.EnumerableExtensions.ToHashSet``1(IEnumerable{``0})
  name.vb: ToHashSet(Of TSource)(IEnumerable(Of TSource))
  fullName: System.Collections.Generic.Polyfill.EnumerableExtensions.ToHashSet<TSource>(IEnumerable<TSource>)
  fullName.vb: System.Collections.Generic.Polyfill.EnumerableExtensions.ToHashSet(Of TSource)(IEnumerable(Of TSource))
  nameWithType: EnumerableExtensions.ToHashSet<TSource>(IEnumerable<TSource>)
  nameWithType.vb: EnumerableExtensions.ToHashSet(Of TSource)(IEnumerable(Of TSource))
- uid: System.Collections.Generic.Polyfill.EnumerableExtensions.ToHashSet``1(IEnumerable{``0},System.Nullable{IEqualityComparer{``0}})
  name: ToHashSet<TSource>(IEnumerable<TSource>, Nullable<IEqualityComparer<TSource>>)
  href: api/System.Collections.Generic.Polyfill.EnumerableExtensions.html#System_Collections_Generic_Polyfill_EnumerableExtensions_ToHashSet__1_IEnumerable___0__System_Nullable_IEqualityComparer___0___
  commentId: M:System.Collections.Generic.Polyfill.EnumerableExtensions.ToHashSet``1(IEnumerable{``0},System.Nullable{IEqualityComparer{``0}})
  name.vb: ToHashSet(Of TSource)(IEnumerable(Of TSource), Nullable(Of IEqualityComparer(Of TSource)))
  fullName: System.Collections.Generic.Polyfill.EnumerableExtensions.ToHashSet<TSource>(IEnumerable<TSource>, System.Nullable<IEqualityComparer<TSource>>)
  fullName.vb: System.Collections.Generic.Polyfill.EnumerableExtensions.ToHashSet(Of TSource)(IEnumerable(Of TSource), System.Nullable(Of IEqualityComparer(Of TSource)))
  nameWithType: EnumerableExtensions.ToHashSet<TSource>(IEnumerable<TSource>, Nullable<IEqualityComparer<TSource>>)
  nameWithType.vb: EnumerableExtensions.ToHashSet(Of TSource)(IEnumerable(Of TSource), Nullable(Of IEqualityComparer(Of TSource)))
- uid: System.Collections.Generic.Polyfill.IReadOnlySet`1
  name: IReadOnlySet<T>
  href: api/System.Collections.Generic.Polyfill.IReadOnlySet-1.html
  commentId: T:System.Collections.Generic.Polyfill.IReadOnlySet`1
  name.vb: IReadOnlySet(Of T)
  fullName: System.Collections.Generic.Polyfill.IReadOnlySet<T>
  fullName.vb: System.Collections.Generic.Polyfill.IReadOnlySet(Of T)
  nameWithType: IReadOnlySet<T>
  nameWithType.vb: IReadOnlySet(Of T)
- uid: System.Collections.Generic.Polyfill.IReadOnlySet`1.Contains(`0)
  name: Contains(T)
  href: api/System.Collections.Generic.Polyfill.IReadOnlySet-1.html#System_Collections_Generic_Polyfill_IReadOnlySet_1_Contains__0_
  commentId: M:System.Collections.Generic.Polyfill.IReadOnlySet`1.Contains(`0)
  fullName: System.Collections.Generic.Polyfill.IReadOnlySet<T>.Contains(T)
  fullName.vb: System.Collections.Generic.Polyfill.IReadOnlySet(Of T).Contains(T)
  nameWithType: IReadOnlySet<T>.Contains(T)
  nameWithType.vb: IReadOnlySet(Of T).Contains(T)
- uid: System.Collections.Generic.Polyfill.IReadOnlySet`1.Contains*
  name: Contains
  href: api/System.Collections.Generic.Polyfill.IReadOnlySet-1.html#System_Collections_Generic_Polyfill_IReadOnlySet_1_Contains_
  commentId: Overload:System.Collections.Generic.Polyfill.IReadOnlySet`1.Contains
  isSpec: "True"
  fullName: System.Collections.Generic.Polyfill.IReadOnlySet<T>.Contains
  fullName.vb: System.Collections.Generic.Polyfill.IReadOnlySet(Of T).Contains
  nameWithType: IReadOnlySet<T>.Contains
  nameWithType.vb: IReadOnlySet(Of T).Contains
- uid: System.Collections.Generic.Polyfill.IReadOnlySet`1.IsProperSubsetOf(IEnumerable{`0})
  name: IsProperSubsetOf(IEnumerable<T>)
  href: api/System.Collections.Generic.Polyfill.IReadOnlySet-1.html#System_Collections_Generic_Polyfill_IReadOnlySet_1_IsProperSubsetOf_IEnumerable__0__
  commentId: M:System.Collections.Generic.Polyfill.IReadOnlySet`1.IsProperSubsetOf(IEnumerable{`0})
  name.vb: IsProperSubsetOf(IEnumerable(Of T))
  fullName: System.Collections.Generic.Polyfill.IReadOnlySet<T>.IsProperSubsetOf(IEnumerable<T>)
  fullName.vb: System.Collections.Generic.Polyfill.IReadOnlySet(Of T).IsProperSubsetOf(IEnumerable(Of T))
  nameWithType: IReadOnlySet<T>.IsProperSubsetOf(IEnumerable<T>)
  nameWithType.vb: IReadOnlySet(Of T).IsProperSubsetOf(IEnumerable(Of T))
- uid: System.Collections.Generic.Polyfill.IReadOnlySet`1.IsProperSubsetOf*
  name: IsProperSubsetOf
  href: api/System.Collections.Generic.Polyfill.IReadOnlySet-1.html#System_Collections_Generic_Polyfill_IReadOnlySet_1_IsProperSubsetOf_
  commentId: Overload:System.Collections.Generic.Polyfill.IReadOnlySet`1.IsProperSubsetOf
  isSpec: "True"
  fullName: System.Collections.Generic.Polyfill.IReadOnlySet<T>.IsProperSubsetOf
  fullName.vb: System.Collections.Generic.Polyfill.IReadOnlySet(Of T).IsProperSubsetOf
  nameWithType: IReadOnlySet<T>.IsProperSubsetOf
  nameWithType.vb: IReadOnlySet(Of T).IsProperSubsetOf
- uid: System.Collections.Generic.Polyfill.IReadOnlySet`1.IsProperSupersetOf(IEnumerable{`0})
  name: IsProperSupersetOf(IEnumerable<T>)
  href: api/System.Collections.Generic.Polyfill.IReadOnlySet-1.html#System_Collections_Generic_Polyfill_IReadOnlySet_1_IsProperSupersetOf_IEnumerable__0__
  commentId: M:System.Collections.Generic.Polyfill.IReadOnlySet`1.IsProperSupersetOf(IEnumerable{`0})
  name.vb: IsProperSupersetOf(IEnumerable(Of T))
  fullName: System.Collections.Generic.Polyfill.IReadOnlySet<T>.IsProperSupersetOf(IEnumerable<T>)
  fullName.vb: System.Collections.Generic.Polyfill.IReadOnlySet(Of T).IsProperSupersetOf(IEnumerable(Of T))
  nameWithType: IReadOnlySet<T>.IsProperSupersetOf(IEnumerable<T>)
  nameWithType.vb: IReadOnlySet(Of T).IsProperSupersetOf(IEnumerable(Of T))
- uid: System.Collections.Generic.Polyfill.IReadOnlySet`1.IsProperSupersetOf*
  name: IsProperSupersetOf
  href: api/System.Collections.Generic.Polyfill.IReadOnlySet-1.html#System_Collections_Generic_Polyfill_IReadOnlySet_1_IsProperSupersetOf_
  commentId: Overload:System.Collections.Generic.Polyfill.IReadOnlySet`1.IsProperSupersetOf
  isSpec: "True"
  fullName: System.Collections.Generic.Polyfill.IReadOnlySet<T>.IsProperSupersetOf
  fullName.vb: System.Collections.Generic.Polyfill.IReadOnlySet(Of T).IsProperSupersetOf
  nameWithType: IReadOnlySet<T>.IsProperSupersetOf
  nameWithType.vb: IReadOnlySet(Of T).IsProperSupersetOf
- uid: System.Collections.Generic.Polyfill.IReadOnlySet`1.IsSubsetOf(IEnumerable{`0})
  name: IsSubsetOf(IEnumerable<T>)
  href: api/System.Collections.Generic.Polyfill.IReadOnlySet-1.html#System_Collections_Generic_Polyfill_IReadOnlySet_1_IsSubsetOf_IEnumerable__0__
  commentId: M:System.Collections.Generic.Polyfill.IReadOnlySet`1.IsSubsetOf(IEnumerable{`0})
  name.vb: IsSubsetOf(IEnumerable(Of T))
  fullName: System.Collections.Generic.Polyfill.IReadOnlySet<T>.IsSubsetOf(IEnumerable<T>)
  fullName.vb: System.Collections.Generic.Polyfill.IReadOnlySet(Of T).IsSubsetOf(IEnumerable(Of T))
  nameWithType: IReadOnlySet<T>.IsSubsetOf(IEnumerable<T>)
  nameWithType.vb: IReadOnlySet(Of T).IsSubsetOf(IEnumerable(Of T))
- uid: System.Collections.Generic.Polyfill.IReadOnlySet`1.IsSubsetOf*
  name: IsSubsetOf
  href: api/System.Collections.Generic.Polyfill.IReadOnlySet-1.html#System_Collections_Generic_Polyfill_IReadOnlySet_1_IsSubsetOf_
  commentId: Overload:System.Collections.Generic.Polyfill.IReadOnlySet`1.IsSubsetOf
  isSpec: "True"
  fullName: System.Collections.Generic.Polyfill.IReadOnlySet<T>.IsSubsetOf
  fullName.vb: System.Collections.Generic.Polyfill.IReadOnlySet(Of T).IsSubsetOf
  nameWithType: IReadOnlySet<T>.IsSubsetOf
  nameWithType.vb: IReadOnlySet(Of T).IsSubsetOf
- uid: System.Collections.Generic.Polyfill.IReadOnlySet`1.IsSupersetOf(IEnumerable{`0})
  name: IsSupersetOf(IEnumerable<T>)
  href: api/System.Collections.Generic.Polyfill.IReadOnlySet-1.html#System_Collections_Generic_Polyfill_IReadOnlySet_1_IsSupersetOf_IEnumerable__0__
  commentId: M:System.Collections.Generic.Polyfill.IReadOnlySet`1.IsSupersetOf(IEnumerable{`0})
  name.vb: IsSupersetOf(IEnumerable(Of T))
  fullName: System.Collections.Generic.Polyfill.IReadOnlySet<T>.IsSupersetOf(IEnumerable<T>)
  fullName.vb: System.Collections.Generic.Polyfill.IReadOnlySet(Of T).IsSupersetOf(IEnumerable(Of T))
  nameWithType: IReadOnlySet<T>.IsSupersetOf(IEnumerable<T>)
  nameWithType.vb: IReadOnlySet(Of T).IsSupersetOf(IEnumerable(Of T))
- uid: System.Collections.Generic.Polyfill.IReadOnlySet`1.IsSupersetOf*
  name: IsSupersetOf
  href: api/System.Collections.Generic.Polyfill.IReadOnlySet-1.html#System_Collections_Generic_Polyfill_IReadOnlySet_1_IsSupersetOf_
  commentId: Overload:System.Collections.Generic.Polyfill.IReadOnlySet`1.IsSupersetOf
  isSpec: "True"
  fullName: System.Collections.Generic.Polyfill.IReadOnlySet<T>.IsSupersetOf
  fullName.vb: System.Collections.Generic.Polyfill.IReadOnlySet(Of T).IsSupersetOf
  nameWithType: IReadOnlySet<T>.IsSupersetOf
  nameWithType.vb: IReadOnlySet(Of T).IsSupersetOf
- uid: System.Collections.Generic.Polyfill.IReadOnlySet`1.Overlaps(IEnumerable{`0})
  name: Overlaps(IEnumerable<T>)
  href: api/System.Collections.Generic.Polyfill.IReadOnlySet-1.html#System_Collections_Generic_Polyfill_IReadOnlySet_1_Overlaps_IEnumerable__0__
  commentId: M:System.Collections.Generic.Polyfill.IReadOnlySet`1.Overlaps(IEnumerable{`0})
  name.vb: Overlaps(IEnumerable(Of T))
  fullName: System.Collections.Generic.Polyfill.IReadOnlySet<T>.Overlaps(IEnumerable<T>)
  fullName.vb: System.Collections.Generic.Polyfill.IReadOnlySet(Of T).Overlaps(IEnumerable(Of T))
  nameWithType: IReadOnlySet<T>.Overlaps(IEnumerable<T>)
  nameWithType.vb: IReadOnlySet(Of T).Overlaps(IEnumerable(Of T))
- uid: System.Collections.Generic.Polyfill.IReadOnlySet`1.Overlaps*
  name: Overlaps
  href: api/System.Collections.Generic.Polyfill.IReadOnlySet-1.html#System_Collections_Generic_Polyfill_IReadOnlySet_1_Overlaps_
  commentId: Overload:System.Collections.Generic.Polyfill.IReadOnlySet`1.Overlaps
  isSpec: "True"
  fullName: System.Collections.Generic.Polyfill.IReadOnlySet<T>.Overlaps
  fullName.vb: System.Collections.Generic.Polyfill.IReadOnlySet(Of T).Overlaps
  nameWithType: IReadOnlySet<T>.Overlaps
  nameWithType.vb: IReadOnlySet(Of T).Overlaps
- uid: System.Collections.Generic.Polyfill.IReadOnlySet`1.SetEquals(IEnumerable{`0})
  name: SetEquals(IEnumerable<T>)
  href: api/System.Collections.Generic.Polyfill.IReadOnlySet-1.html#System_Collections_Generic_Polyfill_IReadOnlySet_1_SetEquals_IEnumerable__0__
  commentId: M:System.Collections.Generic.Polyfill.IReadOnlySet`1.SetEquals(IEnumerable{`0})
  name.vb: SetEquals(IEnumerable(Of T))
  fullName: System.Collections.Generic.Polyfill.IReadOnlySet<T>.SetEquals(IEnumerable<T>)
  fullName.vb: System.Collections.Generic.Polyfill.IReadOnlySet(Of T).SetEquals(IEnumerable(Of T))
  nameWithType: IReadOnlySet<T>.SetEquals(IEnumerable<T>)
  nameWithType.vb: IReadOnlySet(Of T).SetEquals(IEnumerable(Of T))
- uid: System.Collections.Generic.Polyfill.IReadOnlySet`1.SetEquals*
  name: SetEquals
  href: api/System.Collections.Generic.Polyfill.IReadOnlySet-1.html#System_Collections_Generic_Polyfill_IReadOnlySet_1_SetEquals_
  commentId: Overload:System.Collections.Generic.Polyfill.IReadOnlySet`1.SetEquals
  isSpec: "True"
  fullName: System.Collections.Generic.Polyfill.IReadOnlySet<T>.SetEquals
  fullName.vb: System.Collections.Generic.Polyfill.IReadOnlySet(Of T).SetEquals
  nameWithType: IReadOnlySet<T>.SetEquals
  nameWithType.vb: IReadOnlySet(Of T).SetEquals
- uid: System.Collections.Generic.Polyfill.KeyValuePairExtensions
  name: KeyValuePairExtensions
  href: api/System.Collections.Generic.Polyfill.KeyValuePairExtensions.html
  commentId: T:System.Collections.Generic.Polyfill.KeyValuePairExtensions
  fullName: System.Collections.Generic.Polyfill.KeyValuePairExtensions
  nameWithType: KeyValuePairExtensions
- uid: System.Collections.Generic.Polyfill.KeyValuePairExtensions.Deconstruct*
  name: Deconstruct
  href: api/System.Collections.Generic.Polyfill.KeyValuePairExtensions.html#System_Collections_Generic_Polyfill_KeyValuePairExtensions_Deconstruct_
  commentId: Overload:System.Collections.Generic.Polyfill.KeyValuePairExtensions.Deconstruct
  isSpec: "True"
  fullName: System.Collections.Generic.Polyfill.KeyValuePairExtensions.Deconstruct
  nameWithType: KeyValuePairExtensions.Deconstruct
- uid: System.Collections.Generic.Polyfill.KeyValuePairExtensions.Deconstruct``2(KeyValuePair{``0,``1},``0@,``1@)
  name: Deconstruct<TKey, TValue>(KeyValuePair<TKey, TValue>, out TKey, out TValue)
  href: api/System.Collections.Generic.Polyfill.KeyValuePairExtensions.html#System_Collections_Generic_Polyfill_KeyValuePairExtensions_Deconstruct__2_KeyValuePair___0___1____0____1__
  commentId: M:System.Collections.Generic.Polyfill.KeyValuePairExtensions.Deconstruct``2(KeyValuePair{``0,``1},``0@,``1@)
  name.vb: Deconstruct(Of TKey, TValue)(KeyValuePair(Of TKey, TValue), ByRef TKey, ByRef TValue)
  fullName: System.Collections.Generic.Polyfill.KeyValuePairExtensions.Deconstruct<TKey, TValue>(KeyValuePair<TKey, TValue>, out TKey, out TValue)
  fullName.vb: System.Collections.Generic.Polyfill.KeyValuePairExtensions.Deconstruct(Of TKey, TValue)(KeyValuePair(Of TKey, TValue), ByRef TKey, ByRef TValue)
  nameWithType: KeyValuePairExtensions.Deconstruct<TKey, TValue>(KeyValuePair<TKey, TValue>, out TKey, out TValue)
  nameWithType.vb: KeyValuePairExtensions.Deconstruct(Of TKey, TValue)(KeyValuePair(Of TKey, TValue), ByRef TKey, ByRef TValue)
- uid: System.Collections.Generic.Polyfill.QueueExtensions
  name: QueueExtensions
  href: api/System.Collections.Generic.Polyfill.QueueExtensions.html
  commentId: T:System.Collections.Generic.Polyfill.QueueExtensions
  fullName: System.Collections.Generic.Polyfill.QueueExtensions
  nameWithType: QueueExtensions
- uid: System.Collections.Generic.Polyfill.QueueExtensions.TryDequeue*
  name: TryDequeue
  href: api/System.Collections.Generic.Polyfill.QueueExtensions.html#System_Collections_Generic_Polyfill_QueueExtensions_TryDequeue_
  commentId: Overload:System.Collections.Generic.Polyfill.QueueExtensions.TryDequeue
  isSpec: "True"
  fullName: System.Collections.Generic.Polyfill.QueueExtensions.TryDequeue
  nameWithType: QueueExtensions.TryDequeue
- uid: System.Collections.Generic.Polyfill.QueueExtensions.TryDequeue``1(Queue{``0},``0@)
  name: TryDequeue<T>(Queue<T>, out T)
  href: api/System.Collections.Generic.Polyfill.QueueExtensions.html#System_Collections_Generic_Polyfill_QueueExtensions_TryDequeue__1_Queue___0____0__
  commentId: M:System.Collections.Generic.Polyfill.QueueExtensions.TryDequeue``1(Queue{``0},``0@)
  name.vb: TryDequeue(Of T)(Queue(Of T), ByRef T)
  fullName: System.Collections.Generic.Polyfill.QueueExtensions.TryDequeue<T>(Queue<T>, out T)
  fullName.vb: System.Collections.Generic.Polyfill.QueueExtensions.TryDequeue(Of T)(Queue(Of T), ByRef T)
  nameWithType: QueueExtensions.TryDequeue<T>(Queue<T>, out T)
  nameWithType.vb: QueueExtensions.TryDequeue(Of T)(Queue(Of T), ByRef T)
- uid: System.Collections.Generic.Polyfill.ReferenceEqualityComparer
  name: ReferenceEqualityComparer
  href: api/System.Collections.Generic.Polyfill.ReferenceEqualityComparer.html
  commentId: T:System.Collections.Generic.Polyfill.ReferenceEqualityComparer
  fullName: System.Collections.Generic.Polyfill.ReferenceEqualityComparer
  nameWithType: ReferenceEqualityComparer
- uid: System.Collections.Generic.Polyfill.ReferenceEqualityComparer.Equals(System.Nullable{System.Object},System.Nullable{System.Object})
  name: Equals(Nullable<Object>, Nullable<Object>)
  href: api/System.Collections.Generic.Polyfill.ReferenceEqualityComparer.html#System_Collections_Generic_Polyfill_ReferenceEqualityComparer_Equals_System_Nullable_System_Object__System_Nullable_System_Object__
  commentId: M:System.Collections.Generic.Polyfill.ReferenceEqualityComparer.Equals(System.Nullable{System.Object},System.Nullable{System.Object})
  name.vb: Equals(Nullable(Of Object), Nullable(Of Object))
  fullName: System.Collections.Generic.Polyfill.ReferenceEqualityComparer.Equals(System.Nullable<System.Object>, System.Nullable<System.Object>)
  fullName.vb: System.Collections.Generic.Polyfill.ReferenceEqualityComparer.Equals(System.Nullable(Of System.Object), System.Nullable(Of System.Object))
  nameWithType: ReferenceEqualityComparer.Equals(Nullable<Object>, Nullable<Object>)
  nameWithType.vb: ReferenceEqualityComparer.Equals(Nullable(Of Object), Nullable(Of Object))
- uid: System.Collections.Generic.Polyfill.ReferenceEqualityComparer.Equals*
  name: Equals
  href: api/System.Collections.Generic.Polyfill.ReferenceEqualityComparer.html#System_Collections_Generic_Polyfill_ReferenceEqualityComparer_Equals_
  commentId: Overload:System.Collections.Generic.Polyfill.ReferenceEqualityComparer.Equals
  isSpec: "True"
  fullName: System.Collections.Generic.Polyfill.ReferenceEqualityComparer.Equals
  nameWithType: ReferenceEqualityComparer.Equals
- uid: System.Collections.Generic.Polyfill.ReferenceEqualityComparer.GetHashCode(System.Nullable{System.Object})
  name: GetHashCode(Nullable<Object>)
  href: api/System.Collections.Generic.Polyfill.ReferenceEqualityComparer.html#System_Collections_Generic_Polyfill_ReferenceEqualityComparer_GetHashCode_System_Nullable_System_Object__
  commentId: M:System.Collections.Generic.Polyfill.ReferenceEqualityComparer.GetHashCode(System.Nullable{System.Object})
  name.vb: GetHashCode(Nullable(Of Object))
  fullName: System.Collections.Generic.Polyfill.ReferenceEqualityComparer.GetHashCode(System.Nullable<System.Object>)
  fullName.vb: System.Collections.Generic.Polyfill.ReferenceEqualityComparer.GetHashCode(System.Nullable(Of System.Object))
  nameWithType: ReferenceEqualityComparer.GetHashCode(Nullable<Object>)
  nameWithType.vb: ReferenceEqualityComparer.GetHashCode(Nullable(Of Object))
- uid: System.Collections.Generic.Polyfill.ReferenceEqualityComparer.GetHashCode*
  name: GetHashCode
  href: api/System.Collections.Generic.Polyfill.ReferenceEqualityComparer.html#System_Collections_Generic_Polyfill_ReferenceEqualityComparer_GetHashCode_
  commentId: Overload:System.Collections.Generic.Polyfill.ReferenceEqualityComparer.GetHashCode
  isSpec: "True"
  fullName: System.Collections.Generic.Polyfill.ReferenceEqualityComparer.GetHashCode
  nameWithType: ReferenceEqualityComparer.GetHashCode
- uid: System.Collections.Generic.Polyfill.ReferenceEqualityComparer.Instance
  name: Instance
  href: api/System.Collections.Generic.Polyfill.ReferenceEqualityComparer.html#System_Collections_Generic_Polyfill_ReferenceEqualityComparer_Instance
  commentId: P:System.Collections.Generic.Polyfill.ReferenceEqualityComparer.Instance
  fullName: System.Collections.Generic.Polyfill.ReferenceEqualityComparer.Instance
  nameWithType: ReferenceEqualityComparer.Instance
- uid: System.Collections.Generic.Polyfill.ReferenceEqualityComparer.Instance*
  name: Instance
  href: api/System.Collections.Generic.Polyfill.ReferenceEqualityComparer.html#System_Collections_Generic_Polyfill_ReferenceEqualityComparer_Instance_
  commentId: Overload:System.Collections.Generic.Polyfill.ReferenceEqualityComparer.Instance
  isSpec: "True"
  fullName: System.Collections.Generic.Polyfill.ReferenceEqualityComparer.Instance
  nameWithType: ReferenceEqualityComparer.Instance
- uid: System.Collections.Generic.Polyfill.StackExtensions
  name: StackExtensions
  href: api/System.Collections.Generic.Polyfill.StackExtensions.html
  commentId: T:System.Collections.Generic.Polyfill.StackExtensions
  fullName: System.Collections.Generic.Polyfill.StackExtensions
  nameWithType: StackExtensions
- uid: System.Collections.Generic.Polyfill.StackExtensions.TryPeek*
  name: TryPeek
  href: api/System.Collections.Generic.Polyfill.StackExtensions.html#System_Collections_Generic_Polyfill_StackExtensions_TryPeek_
  commentId: Overload:System.Collections.Generic.Polyfill.StackExtensions.TryPeek
  isSpec: "True"
  fullName: System.Collections.Generic.Polyfill.StackExtensions.TryPeek
  nameWithType: StackExtensions.TryPeek
- uid: System.Collections.Generic.Polyfill.StackExtensions.TryPeek``1(Stack{``0},``0@)
  name: TryPeek<T>(Stack<T>, out T)
  href: api/System.Collections.Generic.Polyfill.StackExtensions.html#System_Collections_Generic_Polyfill_StackExtensions_TryPeek__1_Stack___0____0__
  commentId: M:System.Collections.Generic.Polyfill.StackExtensions.TryPeek``1(Stack{``0},``0@)
  name.vb: TryPeek(Of T)(Stack(Of T), ByRef T)
  fullName: System.Collections.Generic.Polyfill.StackExtensions.TryPeek<T>(Stack<T>, out T)
  fullName.vb: System.Collections.Generic.Polyfill.StackExtensions.TryPeek(Of T)(Stack(Of T), ByRef T)
  nameWithType: StackExtensions.TryPeek<T>(Stack<T>, out T)
  nameWithType.vb: StackExtensions.TryPeek(Of T)(Stack(Of T), ByRef T)
- uid: System.Collections.Generic.Polyfill.StackExtensions.TryPop*
  name: TryPop
  href: api/System.Collections.Generic.Polyfill.StackExtensions.html#System_Collections_Generic_Polyfill_StackExtensions_TryPop_
  commentId: Overload:System.Collections.Generic.Polyfill.StackExtensions.TryPop
  isSpec: "True"
  fullName: System.Collections.Generic.Polyfill.StackExtensions.TryPop
  nameWithType: StackExtensions.TryPop
- uid: System.Collections.Generic.Polyfill.StackExtensions.TryPop``1(Stack{``0},``0@)
  name: TryPop<T>(Stack<T>, out T)
  href: api/System.Collections.Generic.Polyfill.StackExtensions.html#System_Collections_Generic_Polyfill_StackExtensions_TryPop__1_Stack___0____0__
  commentId: M:System.Collections.Generic.Polyfill.StackExtensions.TryPop``1(Stack{``0},``0@)
  name.vb: TryPop(Of T)(Stack(Of T), ByRef T)
  fullName: System.Collections.Generic.Polyfill.StackExtensions.TryPop<T>(Stack<T>, out T)
  fullName.vb: System.Collections.Generic.Polyfill.StackExtensions.TryPop(Of T)(Stack(Of T), ByRef T)
  nameWithType: StackExtensions.TryPop<T>(Stack<T>, out T)
  nameWithType.vb: StackExtensions.TryPop(Of T)(Stack(Of T), ByRef T)
- uid: System.Polyfill
  name: System.Polyfill
  href: api/System.Polyfill.html
  commentId: N:System.Polyfill
  fullName: System.Polyfill
  nameWithType: System.Polyfill
- uid: System.Polyfill.StringExtensions
  name: StringExtensions
  href: api/System.Polyfill.StringExtensions.html
  commentId: T:System.Polyfill.StringExtensions
  fullName: System.Polyfill.StringExtensions
  nameWithType: StringExtensions
- uid: System.Polyfill.StringExtensions.Contains(System.String,System.Char)
  name: Contains(String, Char)
  href: api/System.Polyfill.StringExtensions.html#System_Polyfill_StringExtensions_Contains_System_String_System_Char_
  commentId: M:System.Polyfill.StringExtensions.Contains(System.String,System.Char)
  fullName: System.Polyfill.StringExtensions.Contains(System.String, System.Char)
  nameWithType: StringExtensions.Contains(String, Char)
- uid: System.Polyfill.StringExtensions.Contains*
  name: Contains
  href: api/System.Polyfill.StringExtensions.html#System_Polyfill_StringExtensions_Contains_
  commentId: Overload:System.Polyfill.StringExtensions.Contains
  isSpec: "True"
  fullName: System.Polyfill.StringExtensions.Contains
  nameWithType: StringExtensions.Contains
- uid: System.Polyfill.TypeExtensions
  name: TypeExtensions
  href: api/System.Polyfill.TypeExtensions.html
  commentId: T:System.Polyfill.TypeExtensions
  fullName: System.Polyfill.TypeExtensions
  nameWithType: TypeExtensions
- uid: System.Polyfill.TypeExtensions.IsAssignableTo(Type,System.Nullable{Type})
  name: IsAssignableTo(Type, Nullable<Type>)
  href: api/System.Polyfill.TypeExtensions.html#System_Polyfill_TypeExtensions_IsAssignableTo_Type_System_Nullable_Type__
  commentId: M:System.Polyfill.TypeExtensions.IsAssignableTo(Type,System.Nullable{Type})
  name.vb: IsAssignableTo(Type, Nullable(Of Type))
  fullName: System.Polyfill.TypeExtensions.IsAssignableTo(Type, System.Nullable<Type>)
  fullName.vb: System.Polyfill.TypeExtensions.IsAssignableTo(Type, System.Nullable(Of Type))
  nameWithType: TypeExtensions.IsAssignableTo(Type, Nullable<Type>)
  nameWithType.vb: TypeExtensions.IsAssignableTo(Type, Nullable(Of Type))
- uid: System.Polyfill.TypeExtensions.IsAssignableTo*
  name: IsAssignableTo
  href: api/System.Polyfill.TypeExtensions.html#System_Polyfill_TypeExtensions_IsAssignableTo_
  commentId: Overload:System.Polyfill.TypeExtensions.IsAssignableTo
  isSpec: "True"
  fullName: System.Polyfill.TypeExtensions.IsAssignableTo
  nameWithType: TypeExtensions.IsAssignableTo
- uid: Yoakke.Collections
  name: Yoakke.Collections
  href: api/Yoakke.Collections.html
  commentId: N:Yoakke.Collections
  fullName: Yoakke.Collections
  nameWithType: Yoakke.Collections
- uid: Yoakke.Collections.Dense
  name: Yoakke.Collections.Dense
  href: api/Yoakke.Collections.Dense.html
  commentId: N:Yoakke.Collections.Dense
  fullName: Yoakke.Collections.Dense
  nameWithType: Yoakke.Collections.Dense
- uid: Yoakke.Collections.Dense.Combiner`1
  name: Combiner<T>
  href: api/Yoakke.Collections.Dense.Combiner-1.html
  commentId: T:Yoakke.Collections.Dense.Combiner`1
  name.vb: Combiner(Of T)
  fullName: Yoakke.Collections.Dense.Combiner<T>
  fullName.vb: Yoakke.Collections.Dense.Combiner(Of T)
  nameWithType: Combiner<T>
  nameWithType.vb: Combiner(Of T)
- uid: Yoakke.Collections.Dense.Combiner`1.Combine
  name: Combiner<T>.Combine
  href: api/Yoakke.Collections.Dense.Combiner-1.Combine.html
  commentId: T:Yoakke.Collections.Dense.Combiner`1.Combine
  name.vb: Combiner(Of T).Combine
  fullName: Yoakke.Collections.Dense.Combiner<T>.Combine
  fullName.vb: Yoakke.Collections.Dense.Combiner(Of T).Combine
  nameWithType: Combiner<T>.Combine
  nameWithType.vb: Combiner(Of T).Combine
- uid: Yoakke.Collections.Dense.Combiner`1.Create(Yoakke.Collections.Dense.Combiner{`0}.Combine)
  name: Create(Combiner<T>.Combine)
  href: api/Yoakke.Collections.Dense.Combiner-1.html#Yoakke_Collections_Dense_Combiner_1_Create_Yoakke_Collections_Dense_Combiner__0__Combine_
  commentId: M:Yoakke.Collections.Dense.Combiner`1.Create(Yoakke.Collections.Dense.Combiner{`0}.Combine)
  name.vb: Create(Combiner(Of T).Combine)
  fullName: Yoakke.Collections.Dense.Combiner<T>.Create(Yoakke.Collections.Dense.Combiner<T>.Combine)
  fullName.vb: Yoakke.Collections.Dense.Combiner(Of T).Create(Yoakke.Collections.Dense.Combiner(Of T).Combine)
  nameWithType: Combiner<T>.Create(Combiner<T>.Combine)
  nameWithType.vb: Combiner(Of T).Create(Combiner(Of T).Combine)
- uid: Yoakke.Collections.Dense.Combiner`1.Create*
  name: Create
  href: api/Yoakke.Collections.Dense.Combiner-1.html#Yoakke_Collections_Dense_Combiner_1_Create_
  commentId: Overload:Yoakke.Collections.Dense.Combiner`1.Create
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.Combiner<T>.Create
  fullName.vb: Yoakke.Collections.Dense.Combiner(Of T).Create
  nameWithType: Combiner<T>.Create
  nameWithType.vb: Combiner(Of T).Create
- uid: Yoakke.Collections.Dense.Combiner`1.Default
  name: Default
  href: api/Yoakke.Collections.Dense.Combiner-1.html#Yoakke_Collections_Dense_Combiner_1_Default
  commentId: P:Yoakke.Collections.Dense.Combiner`1.Default
  fullName: Yoakke.Collections.Dense.Combiner<T>.Default
  fullName.vb: Yoakke.Collections.Dense.Combiner(Of T).Default
  nameWithType: Combiner<T>.Default
  nameWithType.vb: Combiner(Of T).Default
- uid: Yoakke.Collections.Dense.Combiner`1.Default*
  name: Default
  href: api/Yoakke.Collections.Dense.Combiner-1.html#Yoakke_Collections_Dense_Combiner_1_Default_
  commentId: Overload:Yoakke.Collections.Dense.Combiner`1.Default
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.Combiner<T>.Default
  fullName.vb: Yoakke.Collections.Dense.Combiner(Of T).Default
  nameWithType: Combiner<T>.Default
  nameWithType.vb: Combiner(Of T).Default
- uid: Yoakke.Collections.Dense.DenseMap`2
  name: DenseMap<TKey, TValue>
  href: api/Yoakke.Collections.Dense.DenseMap-2.html
  commentId: T:Yoakke.Collections.Dense.DenseMap`2
  name.vb: DenseMap(Of TKey, TValue)
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue)
  nameWithType: DenseMap<TKey, TValue>
  nameWithType.vb: DenseMap(Of TKey, TValue)
- uid: Yoakke.Collections.Dense.DenseMap`2.#ctor
  name: DenseMap()
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2__ctor
  commentId: M:Yoakke.Collections.Dense.DenseMap`2.#ctor
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.DenseMap()
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).DenseMap()
  nameWithType: DenseMap<TKey, TValue>.DenseMap()
  nameWithType.vb: DenseMap(Of TKey, TValue).DenseMap()
- uid: Yoakke.Collections.Dense.DenseMap`2.#ctor(Yoakke.Collections.Dense.ICombiner{`1})
  name: DenseMap(ICombiner<TValue>)
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2__ctor_Yoakke_Collections_Dense_ICombiner__1__
  commentId: M:Yoakke.Collections.Dense.DenseMap`2.#ctor(Yoakke.Collections.Dense.ICombiner{`1})
  name.vb: DenseMap(ICombiner(Of TValue))
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.DenseMap(Yoakke.Collections.Dense.ICombiner<TValue>)
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).DenseMap(Yoakke.Collections.Dense.ICombiner(Of TValue))
  nameWithType: DenseMap<TKey, TValue>.DenseMap(ICombiner<TValue>)
  nameWithType.vb: DenseMap(Of TKey, TValue).DenseMap(ICombiner(Of TValue))
- uid: Yoakke.Collections.Dense.DenseMap`2.#ctor(Yoakke.Collections.Intervals.IntervalComparer{`0})
  name: DenseMap(IntervalComparer<TKey>)
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2__ctor_Yoakke_Collections_Intervals_IntervalComparer__0__
  commentId: M:Yoakke.Collections.Dense.DenseMap`2.#ctor(Yoakke.Collections.Intervals.IntervalComparer{`0})
  name.vb: DenseMap(IntervalComparer(Of TKey))
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.DenseMap(Yoakke.Collections.Intervals.IntervalComparer<TKey>)
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).DenseMap(Yoakke.Collections.Intervals.IntervalComparer(Of TKey))
  nameWithType: DenseMap<TKey, TValue>.DenseMap(IntervalComparer<TKey>)
  nameWithType.vb: DenseMap(Of TKey, TValue).DenseMap(IntervalComparer(Of TKey))
- uid: Yoakke.Collections.Dense.DenseMap`2.#ctor(Yoakke.Collections.Intervals.IntervalComparer{`0},Yoakke.Collections.Dense.ICombiner{`1})
  name: DenseMap(IntervalComparer<TKey>, ICombiner<TValue>)
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2__ctor_Yoakke_Collections_Intervals_IntervalComparer__0__Yoakke_Collections_Dense_ICombiner__1__
  commentId: M:Yoakke.Collections.Dense.DenseMap`2.#ctor(Yoakke.Collections.Intervals.IntervalComparer{`0},Yoakke.Collections.Dense.ICombiner{`1})
  name.vb: DenseMap(IntervalComparer(Of TKey), ICombiner(Of TValue))
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.DenseMap(Yoakke.Collections.Intervals.IntervalComparer<TKey>, Yoakke.Collections.Dense.ICombiner<TValue>)
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).DenseMap(Yoakke.Collections.Intervals.IntervalComparer(Of TKey), Yoakke.Collections.Dense.ICombiner(Of TValue))
  nameWithType: DenseMap<TKey, TValue>.DenseMap(IntervalComparer<TKey>, ICombiner<TValue>)
  nameWithType.vb: DenseMap(Of TKey, TValue).DenseMap(IntervalComparer(Of TKey), ICombiner(Of TValue))
- uid: Yoakke.Collections.Dense.DenseMap`2.#ctor*
  name: DenseMap
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2__ctor_
  commentId: Overload:Yoakke.Collections.Dense.DenseMap`2.#ctor
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.DenseMap
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).DenseMap
  nameWithType: DenseMap<TKey, TValue>.DenseMap
  nameWithType.vb: DenseMap(Of TKey, TValue).DenseMap
- uid: Yoakke.Collections.Dense.DenseMap`2.Add(KeyValuePair{Yoakke.Collections.Intervals.Interval{`0},`1})
  name: Add(KeyValuePair<Interval<TKey>, TValue>)
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_Add_KeyValuePair_Yoakke_Collections_Intervals_Interval__0___1__
  commentId: M:Yoakke.Collections.Dense.DenseMap`2.Add(KeyValuePair{Yoakke.Collections.Intervals.Interval{`0},`1})
  name.vb: Add(KeyValuePair(Of Interval(Of TKey), TValue))
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.Add(KeyValuePair<Yoakke.Collections.Intervals.Interval<TKey>, TValue>)
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).Add(KeyValuePair(Of Yoakke.Collections.Intervals.Interval(Of TKey), TValue))
  nameWithType: DenseMap<TKey, TValue>.Add(KeyValuePair<Interval<TKey>, TValue>)
  nameWithType.vb: DenseMap(Of TKey, TValue).Add(KeyValuePair(Of Interval(Of TKey), TValue))
- uid: Yoakke.Collections.Dense.DenseMap`2.Add(Yoakke.Collections.Intervals.Interval{`0},`1)
  name: Add(Interval<TKey>, TValue)
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_Add_Yoakke_Collections_Intervals_Interval__0___1_
  commentId: M:Yoakke.Collections.Dense.DenseMap`2.Add(Yoakke.Collections.Intervals.Interval{`0},`1)
  name.vb: Add(Interval(Of TKey), TValue)
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.Add(Yoakke.Collections.Intervals.Interval<TKey>, TValue)
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).Add(Yoakke.Collections.Intervals.Interval(Of TKey), TValue)
  nameWithType: DenseMap<TKey, TValue>.Add(Interval<TKey>, TValue)
  nameWithType.vb: DenseMap(Of TKey, TValue).Add(Interval(Of TKey), TValue)
- uid: Yoakke.Collections.Dense.DenseMap`2.Add*
  name: Add
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_Add_
  commentId: Overload:Yoakke.Collections.Dense.DenseMap`2.Add
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.Add
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).Add
  nameWithType: DenseMap<TKey, TValue>.Add
  nameWithType.vb: DenseMap(Of TKey, TValue).Add
- uid: Yoakke.Collections.Dense.DenseMap`2.Clear
  name: Clear()
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_Clear
  commentId: M:Yoakke.Collections.Dense.DenseMap`2.Clear
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.Clear()
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).Clear()
  nameWithType: DenseMap<TKey, TValue>.Clear()
  nameWithType.vb: DenseMap(Of TKey, TValue).Clear()
- uid: Yoakke.Collections.Dense.DenseMap`2.Clear*
  name: Clear
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_Clear_
  commentId: Overload:Yoakke.Collections.Dense.DenseMap`2.Clear
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.Clear
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).Clear
  nameWithType: DenseMap<TKey, TValue>.Clear
  nameWithType.vb: DenseMap(Of TKey, TValue).Clear
- uid: Yoakke.Collections.Dense.DenseMap`2.Combiner
  name: Combiner
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_Combiner
  commentId: P:Yoakke.Collections.Dense.DenseMap`2.Combiner
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.Combiner
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).Combiner
  nameWithType: DenseMap<TKey, TValue>.Combiner
  nameWithType.vb: DenseMap(Of TKey, TValue).Combiner
- uid: Yoakke.Collections.Dense.DenseMap`2.Combiner*
  name: Combiner
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_Combiner_
  commentId: Overload:Yoakke.Collections.Dense.DenseMap`2.Combiner
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.Combiner
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).Combiner
  nameWithType: DenseMap<TKey, TValue>.Combiner
  nameWithType.vb: DenseMap(Of TKey, TValue).Combiner
- uid: Yoakke.Collections.Dense.DenseMap`2.Comparer
  name: Comparer
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_Comparer
  commentId: P:Yoakke.Collections.Dense.DenseMap`2.Comparer
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.Comparer
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).Comparer
  nameWithType: DenseMap<TKey, TValue>.Comparer
  nameWithType.vb: DenseMap(Of TKey, TValue).Comparer
- uid: Yoakke.Collections.Dense.DenseMap`2.Comparer*
  name: Comparer
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_Comparer_
  commentId: Overload:Yoakke.Collections.Dense.DenseMap`2.Comparer
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.Comparer
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).Comparer
  nameWithType: DenseMap<TKey, TValue>.Comparer
  nameWithType.vb: DenseMap(Of TKey, TValue).Comparer
- uid: Yoakke.Collections.Dense.DenseMap`2.ContainsKeys(Yoakke.Collections.Intervals.Interval{`0})
  name: ContainsKeys(Interval<TKey>)
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_ContainsKeys_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Dense.DenseMap`2.ContainsKeys(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: ContainsKeys(Interval(Of TKey))
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.ContainsKeys(Yoakke.Collections.Intervals.Interval<TKey>)
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).ContainsKeys(Yoakke.Collections.Intervals.Interval(Of TKey))
  nameWithType: DenseMap<TKey, TValue>.ContainsKeys(Interval<TKey>)
  nameWithType.vb: DenseMap(Of TKey, TValue).ContainsKeys(Interval(Of TKey))
- uid: Yoakke.Collections.Dense.DenseMap`2.ContainsKeys*
  name: ContainsKeys
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_ContainsKeys_
  commentId: Overload:Yoakke.Collections.Dense.DenseMap`2.ContainsKeys
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.ContainsKeys
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).ContainsKeys
  nameWithType: DenseMap<TKey, TValue>.ContainsKeys
  nameWithType.vb: DenseMap(Of TKey, TValue).ContainsKeys
- uid: Yoakke.Collections.Dense.DenseMap`2.CopyTo(KeyValuePair{Yoakke.Collections.Intervals.Interval{`0},`1}[],System.Int32)
  name: CopyTo(KeyValuePair<Interval<TKey>, TValue>[], Int32)
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_CopyTo_KeyValuePair_Yoakke_Collections_Intervals_Interval__0___1____System_Int32_
  commentId: M:Yoakke.Collections.Dense.DenseMap`2.CopyTo(KeyValuePair{Yoakke.Collections.Intervals.Interval{`0},`1}[],System.Int32)
  name.vb: CopyTo(KeyValuePair(Of Interval(Of TKey), TValue)(), Int32)
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.CopyTo(KeyValuePair<Yoakke.Collections.Intervals.Interval<TKey>, TValue>[], System.Int32)
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).CopyTo(KeyValuePair(Of Yoakke.Collections.Intervals.Interval(Of TKey), TValue)(), System.Int32)
  nameWithType: DenseMap<TKey, TValue>.CopyTo(KeyValuePair<Interval<TKey>, TValue>[], Int32)
  nameWithType.vb: DenseMap(Of TKey, TValue).CopyTo(KeyValuePair(Of Interval(Of TKey), TValue)(), Int32)
- uid: Yoakke.Collections.Dense.DenseMap`2.CopyTo*
  name: CopyTo
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_CopyTo_
  commentId: Overload:Yoakke.Collections.Dense.DenseMap`2.CopyTo
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.CopyTo
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).CopyTo
  nameWithType: DenseMap<TKey, TValue>.CopyTo
  nameWithType.vb: DenseMap(Of TKey, TValue).CopyTo
- uid: Yoakke.Collections.Dense.DenseMap`2.Count
  name: Count
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_Count
  commentId: P:Yoakke.Collections.Dense.DenseMap`2.Count
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.Count
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).Count
  nameWithType: DenseMap<TKey, TValue>.Count
  nameWithType.vb: DenseMap(Of TKey, TValue).Count
- uid: Yoakke.Collections.Dense.DenseMap`2.Count*
  name: Count
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_Count_
  commentId: Overload:Yoakke.Collections.Dense.DenseMap`2.Count
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.Count
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).Count
  nameWithType: DenseMap<TKey, TValue>.Count
  nameWithType.vb: DenseMap(Of TKey, TValue).Count
- uid: Yoakke.Collections.Dense.DenseMap`2.GetEnumerator
  name: GetEnumerator()
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_GetEnumerator
  commentId: M:Yoakke.Collections.Dense.DenseMap`2.GetEnumerator
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.GetEnumerator()
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).GetEnumerator()
  nameWithType: DenseMap<TKey, TValue>.GetEnumerator()
  nameWithType.vb: DenseMap(Of TKey, TValue).GetEnumerator()
- uid: Yoakke.Collections.Dense.DenseMap`2.GetEnumerator*
  name: GetEnumerator
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_GetEnumerator_
  commentId: Overload:Yoakke.Collections.Dense.DenseMap`2.GetEnumerator
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.GetEnumerator
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).GetEnumerator
  nameWithType: DenseMap<TKey, TValue>.GetEnumerator
  nameWithType.vb: DenseMap(Of TKey, TValue).GetEnumerator
- uid: Yoakke.Collections.Dense.DenseMap`2.GetIntervalsAndValues(Yoakke.Collections.Intervals.Interval{`0})
  name: GetIntervalsAndValues(Interval<TKey>)
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_GetIntervalsAndValues_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Dense.DenseMap`2.GetIntervalsAndValues(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: GetIntervalsAndValues(Interval(Of TKey))
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.GetIntervalsAndValues(Yoakke.Collections.Intervals.Interval<TKey>)
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).GetIntervalsAndValues(Yoakke.Collections.Intervals.Interval(Of TKey))
  nameWithType: DenseMap<TKey, TValue>.GetIntervalsAndValues(Interval<TKey>)
  nameWithType.vb: DenseMap(Of TKey, TValue).GetIntervalsAndValues(Interval(Of TKey))
- uid: Yoakke.Collections.Dense.DenseMap`2.GetIntervalsAndValues*
  name: GetIntervalsAndValues
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_GetIntervalsAndValues_
  commentId: Overload:Yoakke.Collections.Dense.DenseMap`2.GetIntervalsAndValues
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.GetIntervalsAndValues
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).GetIntervalsAndValues
  nameWithType: DenseMap<TKey, TValue>.GetIntervalsAndValues
  nameWithType.vb: DenseMap(Of TKey, TValue).GetIntervalsAndValues
- uid: Yoakke.Collections.Dense.DenseMap`2.GetValues(Yoakke.Collections.Intervals.Interval{`0})
  name: GetValues(Interval<TKey>)
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_GetValues_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Dense.DenseMap`2.GetValues(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: GetValues(Interval(Of TKey))
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.GetValues(Yoakke.Collections.Intervals.Interval<TKey>)
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).GetValues(Yoakke.Collections.Intervals.Interval(Of TKey))
  nameWithType: DenseMap<TKey, TValue>.GetValues(Interval<TKey>)
  nameWithType.vb: DenseMap(Of TKey, TValue).GetValues(Interval(Of TKey))
- uid: Yoakke.Collections.Dense.DenseMap`2.GetValues*
  name: GetValues
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_GetValues_
  commentId: Overload:Yoakke.Collections.Dense.DenseMap`2.GetValues
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.GetValues
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).GetValues
  nameWithType: DenseMap<TKey, TValue>.GetValues
  nameWithType.vb: DenseMap(Of TKey, TValue).GetValues
- uid: Yoakke.Collections.Dense.DenseMap`2.IsReadOnly
  name: IsReadOnly
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_IsReadOnly
  commentId: P:Yoakke.Collections.Dense.DenseMap`2.IsReadOnly
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.IsReadOnly
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).IsReadOnly
  nameWithType: DenseMap<TKey, TValue>.IsReadOnly
  nameWithType.vb: DenseMap(Of TKey, TValue).IsReadOnly
- uid: Yoakke.Collections.Dense.DenseMap`2.IsReadOnly*
  name: IsReadOnly
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_IsReadOnly_
  commentId: Overload:Yoakke.Collections.Dense.DenseMap`2.IsReadOnly
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.IsReadOnly
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).IsReadOnly
  nameWithType: DenseMap<TKey, TValue>.IsReadOnly
  nameWithType.vb: DenseMap(Of TKey, TValue).IsReadOnly
- uid: Yoakke.Collections.Dense.DenseMap`2.Keys
  name: Keys
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_Keys
  commentId: P:Yoakke.Collections.Dense.DenseMap`2.Keys
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.Keys
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).Keys
  nameWithType: DenseMap<TKey, TValue>.Keys
  nameWithType.vb: DenseMap(Of TKey, TValue).Keys
- uid: Yoakke.Collections.Dense.DenseMap`2.Keys*
  name: Keys
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_Keys_
  commentId: Overload:Yoakke.Collections.Dense.DenseMap`2.Keys
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.Keys
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).Keys
  nameWithType: DenseMap<TKey, TValue>.Keys
  nameWithType.vb: DenseMap(Of TKey, TValue).Keys
- uid: Yoakke.Collections.Dense.DenseMap`2.Remove(KeyValuePair{Yoakke.Collections.Intervals.Interval{`0},`1})
  name: Remove(KeyValuePair<Interval<TKey>, TValue>)
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_Remove_KeyValuePair_Yoakke_Collections_Intervals_Interval__0___1__
  commentId: M:Yoakke.Collections.Dense.DenseMap`2.Remove(KeyValuePair{Yoakke.Collections.Intervals.Interval{`0},`1})
  name.vb: Remove(KeyValuePair(Of Interval(Of TKey), TValue))
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.Remove(KeyValuePair<Yoakke.Collections.Intervals.Interval<TKey>, TValue>)
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).Remove(KeyValuePair(Of Yoakke.Collections.Intervals.Interval(Of TKey), TValue))
  nameWithType: DenseMap<TKey, TValue>.Remove(KeyValuePair<Interval<TKey>, TValue>)
  nameWithType.vb: DenseMap(Of TKey, TValue).Remove(KeyValuePair(Of Interval(Of TKey), TValue))
- uid: Yoakke.Collections.Dense.DenseMap`2.Remove(Yoakke.Collections.Intervals.Interval{`0})
  name: Remove(Interval<TKey>)
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_Remove_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Dense.DenseMap`2.Remove(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: Remove(Interval(Of TKey))
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.Remove(Yoakke.Collections.Intervals.Interval<TKey>)
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).Remove(Yoakke.Collections.Intervals.Interval(Of TKey))
  nameWithType: DenseMap<TKey, TValue>.Remove(Interval<TKey>)
  nameWithType.vb: DenseMap(Of TKey, TValue).Remove(Interval(Of TKey))
- uid: Yoakke.Collections.Dense.DenseMap`2.Remove*
  name: Remove
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_Remove_
  commentId: Overload:Yoakke.Collections.Dense.DenseMap`2.Remove
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.Remove
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).Remove
  nameWithType: DenseMap<TKey, TValue>.Remove
  nameWithType.vb: DenseMap(Of TKey, TValue).Remove
- uid: Yoakke.Collections.Dense.DenseMap`2.Values
  name: Values
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_Values
  commentId: P:Yoakke.Collections.Dense.DenseMap`2.Values
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.Values
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).Values
  nameWithType: DenseMap<TKey, TValue>.Values
  nameWithType.vb: DenseMap(Of TKey, TValue).Values
- uid: Yoakke.Collections.Dense.DenseMap`2.Values*
  name: Values
  href: api/Yoakke.Collections.Dense.DenseMap-2.html#Yoakke_Collections_Dense_DenseMap_2_Values_
  commentId: Overload:Yoakke.Collections.Dense.DenseMap`2.Values
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseMap<TKey, TValue>.Values
  fullName.vb: Yoakke.Collections.Dense.DenseMap(Of TKey, TValue).Values
  nameWithType: DenseMap<TKey, TValue>.Values
  nameWithType.vb: DenseMap(Of TKey, TValue).Values
- uid: Yoakke.Collections.Dense.DenseSet`1
  name: DenseSet<T>
  href: api/Yoakke.Collections.Dense.DenseSet-1.html
  commentId: T:Yoakke.Collections.Dense.DenseSet`1
  name.vb: DenseSet(Of T)
  fullName: Yoakke.Collections.Dense.DenseSet<T>
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T)
  nameWithType: DenseSet<T>
  nameWithType.vb: DenseSet(Of T)
- uid: Yoakke.Collections.Dense.DenseSet`1.#ctor
  name: DenseSet()
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1__ctor
  commentId: M:Yoakke.Collections.Dense.DenseSet`1.#ctor
  fullName: Yoakke.Collections.Dense.DenseSet<T>.DenseSet()
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).DenseSet()
  nameWithType: DenseSet<T>.DenseSet()
  nameWithType.vb: DenseSet(Of T).DenseSet()
- uid: Yoakke.Collections.Dense.DenseSet`1.#ctor(Yoakke.Collections.Intervals.IntervalComparer{`0})
  name: DenseSet(IntervalComparer<T>)
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1__ctor_Yoakke_Collections_Intervals_IntervalComparer__0__
  commentId: M:Yoakke.Collections.Dense.DenseSet`1.#ctor(Yoakke.Collections.Intervals.IntervalComparer{`0})
  name.vb: DenseSet(IntervalComparer(Of T))
  fullName: Yoakke.Collections.Dense.DenseSet<T>.DenseSet(Yoakke.Collections.Intervals.IntervalComparer<T>)
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).DenseSet(Yoakke.Collections.Intervals.IntervalComparer(Of T))
  nameWithType: DenseSet<T>.DenseSet(IntervalComparer<T>)
  nameWithType.vb: DenseSet(Of T).DenseSet(IntervalComparer(Of T))
- uid: Yoakke.Collections.Dense.DenseSet`1.#ctor*
  name: DenseSet
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1__ctor_
  commentId: Overload:Yoakke.Collections.Dense.DenseSet`1.#ctor
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseSet<T>.DenseSet
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).DenseSet
  nameWithType: DenseSet<T>.DenseSet
  nameWithType.vb: DenseSet(Of T).DenseSet
- uid: Yoakke.Collections.Dense.DenseSet`1.Add(Yoakke.Collections.Intervals.Interval{`0})
  name: Add(Interval<T>)
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_Add_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Dense.DenseSet`1.Add(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: Add(Interval(Of T))
  fullName: Yoakke.Collections.Dense.DenseSet<T>.Add(Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).Add(Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: DenseSet<T>.Add(Interval<T>)
  nameWithType.vb: DenseSet(Of T).Add(Interval(Of T))
- uid: Yoakke.Collections.Dense.DenseSet`1.Add*
  name: Add
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_Add_
  commentId: Overload:Yoakke.Collections.Dense.DenseSet`1.Add
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseSet<T>.Add
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).Add
  nameWithType: DenseSet<T>.Add
  nameWithType.vb: DenseSet(Of T).Add
- uid: Yoakke.Collections.Dense.DenseSet`1.Clear
  name: Clear()
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_Clear
  commentId: M:Yoakke.Collections.Dense.DenseSet`1.Clear
  fullName: Yoakke.Collections.Dense.DenseSet<T>.Clear()
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).Clear()
  nameWithType: DenseSet<T>.Clear()
  nameWithType.vb: DenseSet(Of T).Clear()
- uid: Yoakke.Collections.Dense.DenseSet`1.Clear*
  name: Clear
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_Clear_
  commentId: Overload:Yoakke.Collections.Dense.DenseSet`1.Clear
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseSet<T>.Clear
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).Clear
  nameWithType: DenseSet<T>.Clear
  nameWithType.vb: DenseSet(Of T).Clear
- uid: Yoakke.Collections.Dense.DenseSet`1.Comparer
  name: Comparer
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_Comparer
  commentId: P:Yoakke.Collections.Dense.DenseSet`1.Comparer
  fullName: Yoakke.Collections.Dense.DenseSet<T>.Comparer
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).Comparer
  nameWithType: DenseSet<T>.Comparer
  nameWithType.vb: DenseSet(Of T).Comparer
- uid: Yoakke.Collections.Dense.DenseSet`1.Comparer*
  name: Comparer
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_Comparer_
  commentId: Overload:Yoakke.Collections.Dense.DenseSet`1.Comparer
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseSet<T>.Comparer
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).Comparer
  nameWithType: DenseSet<T>.Comparer
  nameWithType.vb: DenseSet(Of T).Comparer
- uid: Yoakke.Collections.Dense.DenseSet`1.Complement
  name: Complement()
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_Complement
  commentId: M:Yoakke.Collections.Dense.DenseSet`1.Complement
  fullName: Yoakke.Collections.Dense.DenseSet<T>.Complement()
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).Complement()
  nameWithType: DenseSet<T>.Complement()
  nameWithType.vb: DenseSet(Of T).Complement()
- uid: Yoakke.Collections.Dense.DenseSet`1.Complement*
  name: Complement
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_Complement_
  commentId: Overload:Yoakke.Collections.Dense.DenseSet`1.Complement
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseSet<T>.Complement
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).Complement
  nameWithType: DenseSet<T>.Complement
  nameWithType.vb: DenseSet(Of T).Complement
- uid: Yoakke.Collections.Dense.DenseSet`1.Contains(Yoakke.Collections.Intervals.Interval{`0})
  name: Contains(Interval<T>)
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_Contains_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Dense.DenseSet`1.Contains(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: Contains(Interval(Of T))
  fullName: Yoakke.Collections.Dense.DenseSet<T>.Contains(Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).Contains(Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: DenseSet<T>.Contains(Interval<T>)
  nameWithType.vb: DenseSet(Of T).Contains(Interval(Of T))
- uid: Yoakke.Collections.Dense.DenseSet`1.Contains*
  name: Contains
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_Contains_
  commentId: Overload:Yoakke.Collections.Dense.DenseSet`1.Contains
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseSet<T>.Contains
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).Contains
  nameWithType: DenseSet<T>.Contains
  nameWithType.vb: DenseSet(Of T).Contains
- uid: Yoakke.Collections.Dense.DenseSet`1.CopyTo(Yoakke.Collections.Intervals.Interval{`0}[],System.Int32)
  name: CopyTo(Interval<T>[], Int32)
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_CopyTo_Yoakke_Collections_Intervals_Interval__0____System_Int32_
  commentId: M:Yoakke.Collections.Dense.DenseSet`1.CopyTo(Yoakke.Collections.Intervals.Interval{`0}[],System.Int32)
  name.vb: CopyTo(Interval(Of T)(), Int32)
  fullName: Yoakke.Collections.Dense.DenseSet<T>.CopyTo(Yoakke.Collections.Intervals.Interval<T>[], System.Int32)
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).CopyTo(Yoakke.Collections.Intervals.Interval(Of T)(), System.Int32)
  nameWithType: DenseSet<T>.CopyTo(Interval<T>[], Int32)
  nameWithType.vb: DenseSet(Of T).CopyTo(Interval(Of T)(), Int32)
- uid: Yoakke.Collections.Dense.DenseSet`1.CopyTo*
  name: CopyTo
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_CopyTo_
  commentId: Overload:Yoakke.Collections.Dense.DenseSet`1.CopyTo
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseSet<T>.CopyTo
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).CopyTo
  nameWithType: DenseSet<T>.CopyTo
  nameWithType.vb: DenseSet(Of T).CopyTo
- uid: Yoakke.Collections.Dense.DenseSet`1.Count
  name: Count
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_Count
  commentId: P:Yoakke.Collections.Dense.DenseSet`1.Count
  fullName: Yoakke.Collections.Dense.DenseSet<T>.Count
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).Count
  nameWithType: DenseSet<T>.Count
  nameWithType.vb: DenseSet(Of T).Count
- uid: Yoakke.Collections.Dense.DenseSet`1.Count*
  name: Count
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_Count_
  commentId: Overload:Yoakke.Collections.Dense.DenseSet`1.Count
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseSet<T>.Count
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).Count
  nameWithType: DenseSet<T>.Count
  nameWithType.vb: DenseSet(Of T).Count
- uid: Yoakke.Collections.Dense.DenseSet`1.ExceptWith(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name: ExceptWith(IEnumerable<Interval<T>>)
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_ExceptWith_IEnumerable_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Dense.DenseSet`1.ExceptWith(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name.vb: ExceptWith(IEnumerable(Of Interval(Of T)))
  fullName: Yoakke.Collections.Dense.DenseSet<T>.ExceptWith(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>)
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).ExceptWith(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)))
  nameWithType: DenseSet<T>.ExceptWith(IEnumerable<Interval<T>>)
  nameWithType.vb: DenseSet(Of T).ExceptWith(IEnumerable(Of Interval(Of T)))
- uid: Yoakke.Collections.Dense.DenseSet`1.ExceptWith*
  name: ExceptWith
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_ExceptWith_
  commentId: Overload:Yoakke.Collections.Dense.DenseSet`1.ExceptWith
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseSet<T>.ExceptWith
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).ExceptWith
  nameWithType: DenseSet<T>.ExceptWith
  nameWithType.vb: DenseSet(Of T).ExceptWith
- uid: Yoakke.Collections.Dense.DenseSet`1.GetEnumerator
  name: GetEnumerator()
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_GetEnumerator
  commentId: M:Yoakke.Collections.Dense.DenseSet`1.GetEnumerator
  fullName: Yoakke.Collections.Dense.DenseSet<T>.GetEnumerator()
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).GetEnumerator()
  nameWithType: DenseSet<T>.GetEnumerator()
  nameWithType.vb: DenseSet(Of T).GetEnumerator()
- uid: Yoakke.Collections.Dense.DenseSet`1.GetEnumerator*
  name: GetEnumerator
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_GetEnumerator_
  commentId: Overload:Yoakke.Collections.Dense.DenseSet`1.GetEnumerator
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseSet<T>.GetEnumerator
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).GetEnumerator
  nameWithType: DenseSet<T>.GetEnumerator
  nameWithType.vb: DenseSet(Of T).GetEnumerator
- uid: Yoakke.Collections.Dense.DenseSet`1.IntersectWith(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name: IntersectWith(IEnumerable<Interval<T>>)
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_IntersectWith_IEnumerable_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Dense.DenseSet`1.IntersectWith(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name.vb: IntersectWith(IEnumerable(Of Interval(Of T)))
  fullName: Yoakke.Collections.Dense.DenseSet<T>.IntersectWith(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>)
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).IntersectWith(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)))
  nameWithType: DenseSet<T>.IntersectWith(IEnumerable<Interval<T>>)
  nameWithType.vb: DenseSet(Of T).IntersectWith(IEnumerable(Of Interval(Of T)))
- uid: Yoakke.Collections.Dense.DenseSet`1.IntersectWith*
  name: IntersectWith
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_IntersectWith_
  commentId: Overload:Yoakke.Collections.Dense.DenseSet`1.IntersectWith
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseSet<T>.IntersectWith
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).IntersectWith
  nameWithType: DenseSet<T>.IntersectWith
  nameWithType.vb: DenseSet(Of T).IntersectWith
- uid: Yoakke.Collections.Dense.DenseSet`1.IsProperSubsetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name: IsProperSubsetOf(IEnumerable<Interval<T>>)
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_IsProperSubsetOf_IEnumerable_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Dense.DenseSet`1.IsProperSubsetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name.vb: IsProperSubsetOf(IEnumerable(Of Interval(Of T)))
  fullName: Yoakke.Collections.Dense.DenseSet<T>.IsProperSubsetOf(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>)
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).IsProperSubsetOf(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)))
  nameWithType: DenseSet<T>.IsProperSubsetOf(IEnumerable<Interval<T>>)
  nameWithType.vb: DenseSet(Of T).IsProperSubsetOf(IEnumerable(Of Interval(Of T)))
- uid: Yoakke.Collections.Dense.DenseSet`1.IsProperSubsetOf*
  name: IsProperSubsetOf
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_IsProperSubsetOf_
  commentId: Overload:Yoakke.Collections.Dense.DenseSet`1.IsProperSubsetOf
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseSet<T>.IsProperSubsetOf
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).IsProperSubsetOf
  nameWithType: DenseSet<T>.IsProperSubsetOf
  nameWithType.vb: DenseSet(Of T).IsProperSubsetOf
- uid: Yoakke.Collections.Dense.DenseSet`1.IsProperSupersetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name: IsProperSupersetOf(IEnumerable<Interval<T>>)
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_IsProperSupersetOf_IEnumerable_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Dense.DenseSet`1.IsProperSupersetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name.vb: IsProperSupersetOf(IEnumerable(Of Interval(Of T)))
  fullName: Yoakke.Collections.Dense.DenseSet<T>.IsProperSupersetOf(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>)
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).IsProperSupersetOf(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)))
  nameWithType: DenseSet<T>.IsProperSupersetOf(IEnumerable<Interval<T>>)
  nameWithType.vb: DenseSet(Of T).IsProperSupersetOf(IEnumerable(Of Interval(Of T)))
- uid: Yoakke.Collections.Dense.DenseSet`1.IsProperSupersetOf*
  name: IsProperSupersetOf
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_IsProperSupersetOf_
  commentId: Overload:Yoakke.Collections.Dense.DenseSet`1.IsProperSupersetOf
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseSet<T>.IsProperSupersetOf
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).IsProperSupersetOf
  nameWithType: DenseSet<T>.IsProperSupersetOf
  nameWithType.vb: DenseSet(Of T).IsProperSupersetOf
- uid: Yoakke.Collections.Dense.DenseSet`1.IsReadOnly
  name: IsReadOnly
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_IsReadOnly
  commentId: P:Yoakke.Collections.Dense.DenseSet`1.IsReadOnly
  fullName: Yoakke.Collections.Dense.DenseSet<T>.IsReadOnly
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).IsReadOnly
  nameWithType: DenseSet<T>.IsReadOnly
  nameWithType.vb: DenseSet(Of T).IsReadOnly
- uid: Yoakke.Collections.Dense.DenseSet`1.IsReadOnly*
  name: IsReadOnly
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_IsReadOnly_
  commentId: Overload:Yoakke.Collections.Dense.DenseSet`1.IsReadOnly
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseSet<T>.IsReadOnly
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).IsReadOnly
  nameWithType: DenseSet<T>.IsReadOnly
  nameWithType.vb: DenseSet(Of T).IsReadOnly
- uid: Yoakke.Collections.Dense.DenseSet`1.IsSubsetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name: IsSubsetOf(IEnumerable<Interval<T>>)
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_IsSubsetOf_IEnumerable_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Dense.DenseSet`1.IsSubsetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name.vb: IsSubsetOf(IEnumerable(Of Interval(Of T)))
  fullName: Yoakke.Collections.Dense.DenseSet<T>.IsSubsetOf(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>)
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).IsSubsetOf(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)))
  nameWithType: DenseSet<T>.IsSubsetOf(IEnumerable<Interval<T>>)
  nameWithType.vb: DenseSet(Of T).IsSubsetOf(IEnumerable(Of Interval(Of T)))
- uid: Yoakke.Collections.Dense.DenseSet`1.IsSubsetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}},System.Boolean@)
  name: IsSubsetOf(IEnumerable<Interval<T>>, out Boolean)
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_IsSubsetOf_IEnumerable_Yoakke_Collections_Intervals_Interval__0___System_Boolean__
  commentId: M:Yoakke.Collections.Dense.DenseSet`1.IsSubsetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}},System.Boolean@)
  name.vb: IsSubsetOf(IEnumerable(Of Interval(Of T)), ByRef Boolean)
  fullName: Yoakke.Collections.Dense.DenseSet<T>.IsSubsetOf(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>, out System.Boolean)
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).IsSubsetOf(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)), ByRef System.Boolean)
  nameWithType: DenseSet<T>.IsSubsetOf(IEnumerable<Interval<T>>, out Boolean)
  nameWithType.vb: DenseSet(Of T).IsSubsetOf(IEnumerable(Of Interval(Of T)), ByRef Boolean)
- uid: Yoakke.Collections.Dense.DenseSet`1.IsSubsetOf*
  name: IsSubsetOf
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_IsSubsetOf_
  commentId: Overload:Yoakke.Collections.Dense.DenseSet`1.IsSubsetOf
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseSet<T>.IsSubsetOf
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).IsSubsetOf
  nameWithType: DenseSet<T>.IsSubsetOf
  nameWithType.vb: DenseSet(Of T).IsSubsetOf
- uid: Yoakke.Collections.Dense.DenseSet`1.IsSupersetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name: IsSupersetOf(IEnumerable<Interval<T>>)
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_IsSupersetOf_IEnumerable_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Dense.DenseSet`1.IsSupersetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name.vb: IsSupersetOf(IEnumerable(Of Interval(Of T)))
  fullName: Yoakke.Collections.Dense.DenseSet<T>.IsSupersetOf(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>)
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).IsSupersetOf(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)))
  nameWithType: DenseSet<T>.IsSupersetOf(IEnumerable<Interval<T>>)
  nameWithType.vb: DenseSet(Of T).IsSupersetOf(IEnumerable(Of Interval(Of T)))
- uid: Yoakke.Collections.Dense.DenseSet`1.IsSupersetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}},System.Boolean@)
  name: IsSupersetOf(IEnumerable<Interval<T>>, out Boolean)
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_IsSupersetOf_IEnumerable_Yoakke_Collections_Intervals_Interval__0___System_Boolean__
  commentId: M:Yoakke.Collections.Dense.DenseSet`1.IsSupersetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}},System.Boolean@)
  name.vb: IsSupersetOf(IEnumerable(Of Interval(Of T)), ByRef Boolean)
  fullName: Yoakke.Collections.Dense.DenseSet<T>.IsSupersetOf(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>, out System.Boolean)
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).IsSupersetOf(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)), ByRef System.Boolean)
  nameWithType: DenseSet<T>.IsSupersetOf(IEnumerable<Interval<T>>, out Boolean)
  nameWithType.vb: DenseSet(Of T).IsSupersetOf(IEnumerable(Of Interval(Of T)), ByRef Boolean)
- uid: Yoakke.Collections.Dense.DenseSet`1.IsSupersetOf*
  name: IsSupersetOf
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_IsSupersetOf_
  commentId: Overload:Yoakke.Collections.Dense.DenseSet`1.IsSupersetOf
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseSet<T>.IsSupersetOf
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).IsSupersetOf
  nameWithType: DenseSet<T>.IsSupersetOf
  nameWithType.vb: DenseSet(Of T).IsSupersetOf
- uid: Yoakke.Collections.Dense.DenseSet`1.Overlaps(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name: Overlaps(IEnumerable<Interval<T>>)
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_Overlaps_IEnumerable_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Dense.DenseSet`1.Overlaps(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name.vb: Overlaps(IEnumerable(Of Interval(Of T)))
  fullName: Yoakke.Collections.Dense.DenseSet<T>.Overlaps(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>)
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).Overlaps(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)))
  nameWithType: DenseSet<T>.Overlaps(IEnumerable<Interval<T>>)
  nameWithType.vb: DenseSet(Of T).Overlaps(IEnumerable(Of Interval(Of T)))
- uid: Yoakke.Collections.Dense.DenseSet`1.Overlaps(Yoakke.Collections.Intervals.Interval{`0})
  name: Overlaps(Interval<T>)
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_Overlaps_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Dense.DenseSet`1.Overlaps(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: Overlaps(Interval(Of T))
  fullName: Yoakke.Collections.Dense.DenseSet<T>.Overlaps(Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).Overlaps(Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: DenseSet<T>.Overlaps(Interval<T>)
  nameWithType.vb: DenseSet(Of T).Overlaps(Interval(Of T))
- uid: Yoakke.Collections.Dense.DenseSet`1.Overlaps*
  name: Overlaps
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_Overlaps_
  commentId: Overload:Yoakke.Collections.Dense.DenseSet`1.Overlaps
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseSet<T>.Overlaps
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).Overlaps
  nameWithType: DenseSet<T>.Overlaps
  nameWithType.vb: DenseSet(Of T).Overlaps
- uid: Yoakke.Collections.Dense.DenseSet`1.Remove(Yoakke.Collections.Intervals.Interval{`0})
  name: Remove(Interval<T>)
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_Remove_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Dense.DenseSet`1.Remove(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: Remove(Interval(Of T))
  fullName: Yoakke.Collections.Dense.DenseSet<T>.Remove(Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).Remove(Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: DenseSet<T>.Remove(Interval<T>)
  nameWithType.vb: DenseSet(Of T).Remove(Interval(Of T))
- uid: Yoakke.Collections.Dense.DenseSet`1.Remove*
  name: Remove
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_Remove_
  commentId: Overload:Yoakke.Collections.Dense.DenseSet`1.Remove
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseSet<T>.Remove
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).Remove
  nameWithType: DenseSet<T>.Remove
  nameWithType.vb: DenseSet(Of T).Remove
- uid: Yoakke.Collections.Dense.DenseSet`1.SetEquals(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name: SetEquals(IEnumerable<Interval<T>>)
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_SetEquals_IEnumerable_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Dense.DenseSet`1.SetEquals(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name.vb: SetEquals(IEnumerable(Of Interval(Of T)))
  fullName: Yoakke.Collections.Dense.DenseSet<T>.SetEquals(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>)
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).SetEquals(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)))
  nameWithType: DenseSet<T>.SetEquals(IEnumerable<Interval<T>>)
  nameWithType.vb: DenseSet(Of T).SetEquals(IEnumerable(Of Interval(Of T)))
- uid: Yoakke.Collections.Dense.DenseSet`1.SetEquals*
  name: SetEquals
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_SetEquals_
  commentId: Overload:Yoakke.Collections.Dense.DenseSet`1.SetEquals
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseSet<T>.SetEquals
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).SetEquals
  nameWithType: DenseSet<T>.SetEquals
  nameWithType.vb: DenseSet(Of T).SetEquals
- uid: Yoakke.Collections.Dense.DenseSet`1.SymmetricExceptWith(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name: SymmetricExceptWith(IEnumerable<Interval<T>>)
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_SymmetricExceptWith_IEnumerable_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Dense.DenseSet`1.SymmetricExceptWith(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name.vb: SymmetricExceptWith(IEnumerable(Of Interval(Of T)))
  fullName: Yoakke.Collections.Dense.DenseSet<T>.SymmetricExceptWith(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>)
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).SymmetricExceptWith(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)))
  nameWithType: DenseSet<T>.SymmetricExceptWith(IEnumerable<Interval<T>>)
  nameWithType.vb: DenseSet(Of T).SymmetricExceptWith(IEnumerable(Of Interval(Of T)))
- uid: Yoakke.Collections.Dense.DenseSet`1.SymmetricExceptWith*
  name: SymmetricExceptWith
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_SymmetricExceptWith_
  commentId: Overload:Yoakke.Collections.Dense.DenseSet`1.SymmetricExceptWith
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseSet<T>.SymmetricExceptWith
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).SymmetricExceptWith
  nameWithType: DenseSet<T>.SymmetricExceptWith
  nameWithType.vb: DenseSet(Of T).SymmetricExceptWith
- uid: Yoakke.Collections.Dense.DenseSet`1.UnionWith(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name: UnionWith(IEnumerable<Interval<T>>)
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_UnionWith_IEnumerable_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Dense.DenseSet`1.UnionWith(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name.vb: UnionWith(IEnumerable(Of Interval(Of T)))
  fullName: Yoakke.Collections.Dense.DenseSet<T>.UnionWith(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>)
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).UnionWith(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)))
  nameWithType: DenseSet<T>.UnionWith(IEnumerable<Interval<T>>)
  nameWithType.vb: DenseSet(Of T).UnionWith(IEnumerable(Of Interval(Of T)))
- uid: Yoakke.Collections.Dense.DenseSet`1.UnionWith*
  name: UnionWith
  href: api/Yoakke.Collections.Dense.DenseSet-1.html#Yoakke_Collections_Dense_DenseSet_1_UnionWith_
  commentId: Overload:Yoakke.Collections.Dense.DenseSet`1.UnionWith
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.DenseSet<T>.UnionWith
  fullName.vb: Yoakke.Collections.Dense.DenseSet(Of T).UnionWith
  nameWithType: DenseSet<T>.UnionWith
  nameWithType.vb: DenseSet(Of T).UnionWith
- uid: Yoakke.Collections.Dense.ICombiner`1
  name: ICombiner<T>
  href: api/Yoakke.Collections.Dense.ICombiner-1.html
  commentId: T:Yoakke.Collections.Dense.ICombiner`1
  name.vb: ICombiner(Of T)
  fullName: Yoakke.Collections.Dense.ICombiner<T>
  fullName.vb: Yoakke.Collections.Dense.ICombiner(Of T)
  nameWithType: ICombiner<T>
  nameWithType.vb: ICombiner(Of T)
- uid: Yoakke.Collections.Dense.ICombiner`1.Combine(`0,`0)
  name: Combine(T, T)
  href: api/Yoakke.Collections.Dense.ICombiner-1.html#Yoakke_Collections_Dense_ICombiner_1_Combine__0__0_
  commentId: M:Yoakke.Collections.Dense.ICombiner`1.Combine(`0,`0)
  fullName: Yoakke.Collections.Dense.ICombiner<T>.Combine(T, T)
  fullName.vb: Yoakke.Collections.Dense.ICombiner(Of T).Combine(T, T)
  nameWithType: ICombiner<T>.Combine(T, T)
  nameWithType.vb: ICombiner(Of T).Combine(T, T)
- uid: Yoakke.Collections.Dense.ICombiner`1.Combine*
  name: Combine
  href: api/Yoakke.Collections.Dense.ICombiner-1.html#Yoakke_Collections_Dense_ICombiner_1_Combine_
  commentId: Overload:Yoakke.Collections.Dense.ICombiner`1.Combine
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.ICombiner<T>.Combine
  fullName.vb: Yoakke.Collections.Dense.ICombiner(Of T).Combine
  nameWithType: ICombiner<T>.Combine
  nameWithType.vb: ICombiner(Of T).Combine
- uid: Yoakke.Collections.Dense.IDenseMap`2
  name: IDenseMap<TKey, TValue>
  href: api/Yoakke.Collections.Dense.IDenseMap-2.html
  commentId: T:Yoakke.Collections.Dense.IDenseMap`2
  name.vb: IDenseMap(Of TKey, TValue)
  fullName: Yoakke.Collections.Dense.IDenseMap<TKey, TValue>
  fullName.vb: Yoakke.Collections.Dense.IDenseMap(Of TKey, TValue)
  nameWithType: IDenseMap<TKey, TValue>
  nameWithType.vb: IDenseMap(Of TKey, TValue)
- uid: Yoakke.Collections.Dense.IDenseMap`2.Add(Yoakke.Collections.Intervals.Interval{`0},`1)
  name: Add(Interval<TKey>, TValue)
  href: api/Yoakke.Collections.Dense.IDenseMap-2.html#Yoakke_Collections_Dense_IDenseMap_2_Add_Yoakke_Collections_Intervals_Interval__0___1_
  commentId: M:Yoakke.Collections.Dense.IDenseMap`2.Add(Yoakke.Collections.Intervals.Interval{`0},`1)
  name.vb: Add(Interval(Of TKey), TValue)
  fullName: Yoakke.Collections.Dense.IDenseMap<TKey, TValue>.Add(Yoakke.Collections.Intervals.Interval<TKey>, TValue)
  fullName.vb: Yoakke.Collections.Dense.IDenseMap(Of TKey, TValue).Add(Yoakke.Collections.Intervals.Interval(Of TKey), TValue)
  nameWithType: IDenseMap<TKey, TValue>.Add(Interval<TKey>, TValue)
  nameWithType.vb: IDenseMap(Of TKey, TValue).Add(Interval(Of TKey), TValue)
- uid: Yoakke.Collections.Dense.IDenseMap`2.Add*
  name: Add
  href: api/Yoakke.Collections.Dense.IDenseMap-2.html#Yoakke_Collections_Dense_IDenseMap_2_Add_
  commentId: Overload:Yoakke.Collections.Dense.IDenseMap`2.Add
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.IDenseMap<TKey, TValue>.Add
  fullName.vb: Yoakke.Collections.Dense.IDenseMap(Of TKey, TValue).Add
  nameWithType: IDenseMap<TKey, TValue>.Add
  nameWithType.vb: IDenseMap(Of TKey, TValue).Add
- uid: Yoakke.Collections.Dense.IDenseMap`2.Remove(Yoakke.Collections.Intervals.Interval{`0})
  name: Remove(Interval<TKey>)
  href: api/Yoakke.Collections.Dense.IDenseMap-2.html#Yoakke_Collections_Dense_IDenseMap_2_Remove_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Dense.IDenseMap`2.Remove(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: Remove(Interval(Of TKey))
  fullName: Yoakke.Collections.Dense.IDenseMap<TKey, TValue>.Remove(Yoakke.Collections.Intervals.Interval<TKey>)
  fullName.vb: Yoakke.Collections.Dense.IDenseMap(Of TKey, TValue).Remove(Yoakke.Collections.Intervals.Interval(Of TKey))
  nameWithType: IDenseMap<TKey, TValue>.Remove(Interval<TKey>)
  nameWithType.vb: IDenseMap(Of TKey, TValue).Remove(Interval(Of TKey))
- uid: Yoakke.Collections.Dense.IDenseMap`2.Remove*
  name: Remove
  href: api/Yoakke.Collections.Dense.IDenseMap-2.html#Yoakke_Collections_Dense_IDenseMap_2_Remove_
  commentId: Overload:Yoakke.Collections.Dense.IDenseMap`2.Remove
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.IDenseMap<TKey, TValue>.Remove
  fullName.vb: Yoakke.Collections.Dense.IDenseMap(Of TKey, TValue).Remove
  nameWithType: IDenseMap<TKey, TValue>.Remove
  nameWithType.vb: IDenseMap(Of TKey, TValue).Remove
- uid: Yoakke.Collections.Dense.IDenseSet`1
  name: IDenseSet<T>
  href: api/Yoakke.Collections.Dense.IDenseSet-1.html
  commentId: T:Yoakke.Collections.Dense.IDenseSet`1
  name.vb: IDenseSet(Of T)
  fullName: Yoakke.Collections.Dense.IDenseSet<T>
  fullName.vb: Yoakke.Collections.Dense.IDenseSet(Of T)
  nameWithType: IDenseSet<T>
  nameWithType.vb: IDenseSet(Of T)
- uid: Yoakke.Collections.Dense.IDenseSet`1.Add(Yoakke.Collections.Intervals.Interval{`0})
  name: Add(Interval<T>)
  href: api/Yoakke.Collections.Dense.IDenseSet-1.html#Yoakke_Collections_Dense_IDenseSet_1_Add_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Dense.IDenseSet`1.Add(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: Add(Interval(Of T))
  fullName: Yoakke.Collections.Dense.IDenseSet<T>.Add(Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Dense.IDenseSet(Of T).Add(Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: IDenseSet<T>.Add(Interval<T>)
  nameWithType.vb: IDenseSet(Of T).Add(Interval(Of T))
- uid: Yoakke.Collections.Dense.IDenseSet`1.Add*
  name: Add
  href: api/Yoakke.Collections.Dense.IDenseSet-1.html#Yoakke_Collections_Dense_IDenseSet_1_Add_
  commentId: Overload:Yoakke.Collections.Dense.IDenseSet`1.Add
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.IDenseSet<T>.Add
  fullName.vb: Yoakke.Collections.Dense.IDenseSet(Of T).Add
  nameWithType: IDenseSet<T>.Add
  nameWithType.vb: IDenseSet(Of T).Add
- uid: Yoakke.Collections.Dense.IDenseSet`1.Complement
  name: Complement()
  href: api/Yoakke.Collections.Dense.IDenseSet-1.html#Yoakke_Collections_Dense_IDenseSet_1_Complement
  commentId: M:Yoakke.Collections.Dense.IDenseSet`1.Complement
  fullName: Yoakke.Collections.Dense.IDenseSet<T>.Complement()
  fullName.vb: Yoakke.Collections.Dense.IDenseSet(Of T).Complement()
  nameWithType: IDenseSet<T>.Complement()
  nameWithType.vb: IDenseSet(Of T).Complement()
- uid: Yoakke.Collections.Dense.IDenseSet`1.Complement*
  name: Complement
  href: api/Yoakke.Collections.Dense.IDenseSet-1.html#Yoakke_Collections_Dense_IDenseSet_1_Complement_
  commentId: Overload:Yoakke.Collections.Dense.IDenseSet`1.Complement
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.IDenseSet<T>.Complement
  fullName.vb: Yoakke.Collections.Dense.IDenseSet(Of T).Complement
  nameWithType: IDenseSet<T>.Complement
  nameWithType.vb: IDenseSet(Of T).Complement
- uid: Yoakke.Collections.Dense.IDenseSet`1.Contains(Yoakke.Collections.Intervals.Interval{`0})
  name: Contains(Interval<T>)
  href: api/Yoakke.Collections.Dense.IDenseSet-1.html#Yoakke_Collections_Dense_IDenseSet_1_Contains_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Dense.IDenseSet`1.Contains(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: Contains(Interval(Of T))
  fullName: Yoakke.Collections.Dense.IDenseSet<T>.Contains(Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Dense.IDenseSet(Of T).Contains(Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: IDenseSet<T>.Contains(Interval<T>)
  nameWithType.vb: IDenseSet(Of T).Contains(Interval(Of T))
- uid: Yoakke.Collections.Dense.IDenseSet`1.Contains*
  name: Contains
  href: api/Yoakke.Collections.Dense.IDenseSet-1.html#Yoakke_Collections_Dense_IDenseSet_1_Contains_
  commentId: Overload:Yoakke.Collections.Dense.IDenseSet`1.Contains
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.IDenseSet<T>.Contains
  fullName.vb: Yoakke.Collections.Dense.IDenseSet(Of T).Contains
  nameWithType: IDenseSet<T>.Contains
  nameWithType.vb: IDenseSet(Of T).Contains
- uid: Yoakke.Collections.Dense.IDenseSet`1.ExceptWith(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name: ExceptWith(IEnumerable<Interval<T>>)
  href: api/Yoakke.Collections.Dense.IDenseSet-1.html#Yoakke_Collections_Dense_IDenseSet_1_ExceptWith_IEnumerable_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Dense.IDenseSet`1.ExceptWith(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name.vb: ExceptWith(IEnumerable(Of Interval(Of T)))
  fullName: Yoakke.Collections.Dense.IDenseSet<T>.ExceptWith(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>)
  fullName.vb: Yoakke.Collections.Dense.IDenseSet(Of T).ExceptWith(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)))
  nameWithType: IDenseSet<T>.ExceptWith(IEnumerable<Interval<T>>)
  nameWithType.vb: IDenseSet(Of T).ExceptWith(IEnumerable(Of Interval(Of T)))
- uid: Yoakke.Collections.Dense.IDenseSet`1.ExceptWith*
  name: ExceptWith
  href: api/Yoakke.Collections.Dense.IDenseSet-1.html#Yoakke_Collections_Dense_IDenseSet_1_ExceptWith_
  commentId: Overload:Yoakke.Collections.Dense.IDenseSet`1.ExceptWith
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.IDenseSet<T>.ExceptWith
  fullName.vb: Yoakke.Collections.Dense.IDenseSet(Of T).ExceptWith
  nameWithType: IDenseSet<T>.ExceptWith
  nameWithType.vb: IDenseSet(Of T).ExceptWith
- uid: Yoakke.Collections.Dense.IDenseSet`1.IntersectWith(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name: IntersectWith(IEnumerable<Interval<T>>)
  href: api/Yoakke.Collections.Dense.IDenseSet-1.html#Yoakke_Collections_Dense_IDenseSet_1_IntersectWith_IEnumerable_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Dense.IDenseSet`1.IntersectWith(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name.vb: IntersectWith(IEnumerable(Of Interval(Of T)))
  fullName: Yoakke.Collections.Dense.IDenseSet<T>.IntersectWith(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>)
  fullName.vb: Yoakke.Collections.Dense.IDenseSet(Of T).IntersectWith(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)))
  nameWithType: IDenseSet<T>.IntersectWith(IEnumerable<Interval<T>>)
  nameWithType.vb: IDenseSet(Of T).IntersectWith(IEnumerable(Of Interval(Of T)))
- uid: Yoakke.Collections.Dense.IDenseSet`1.IntersectWith*
  name: IntersectWith
  href: api/Yoakke.Collections.Dense.IDenseSet-1.html#Yoakke_Collections_Dense_IDenseSet_1_IntersectWith_
  commentId: Overload:Yoakke.Collections.Dense.IDenseSet`1.IntersectWith
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.IDenseSet<T>.IntersectWith
  fullName.vb: Yoakke.Collections.Dense.IDenseSet(Of T).IntersectWith
  nameWithType: IDenseSet<T>.IntersectWith
  nameWithType.vb: IDenseSet(Of T).IntersectWith
- uid: Yoakke.Collections.Dense.IDenseSet`1.SymmetricExceptWith(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name: SymmetricExceptWith(IEnumerable<Interval<T>>)
  href: api/Yoakke.Collections.Dense.IDenseSet-1.html#Yoakke_Collections_Dense_IDenseSet_1_SymmetricExceptWith_IEnumerable_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Dense.IDenseSet`1.SymmetricExceptWith(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name.vb: SymmetricExceptWith(IEnumerable(Of Interval(Of T)))
  fullName: Yoakke.Collections.Dense.IDenseSet<T>.SymmetricExceptWith(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>)
  fullName.vb: Yoakke.Collections.Dense.IDenseSet(Of T).SymmetricExceptWith(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)))
  nameWithType: IDenseSet<T>.SymmetricExceptWith(IEnumerable<Interval<T>>)
  nameWithType.vb: IDenseSet(Of T).SymmetricExceptWith(IEnumerable(Of Interval(Of T)))
- uid: Yoakke.Collections.Dense.IDenseSet`1.SymmetricExceptWith*
  name: SymmetricExceptWith
  href: api/Yoakke.Collections.Dense.IDenseSet-1.html#Yoakke_Collections_Dense_IDenseSet_1_SymmetricExceptWith_
  commentId: Overload:Yoakke.Collections.Dense.IDenseSet`1.SymmetricExceptWith
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.IDenseSet<T>.SymmetricExceptWith
  fullName.vb: Yoakke.Collections.Dense.IDenseSet(Of T).SymmetricExceptWith
  nameWithType: IDenseSet<T>.SymmetricExceptWith
  nameWithType.vb: IDenseSet(Of T).SymmetricExceptWith
- uid: Yoakke.Collections.Dense.IDenseSet`1.UnionWith(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name: UnionWith(IEnumerable<Interval<T>>)
  href: api/Yoakke.Collections.Dense.IDenseSet-1.html#Yoakke_Collections_Dense_IDenseSet_1_UnionWith_IEnumerable_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Dense.IDenseSet`1.UnionWith(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name.vb: UnionWith(IEnumerable(Of Interval(Of T)))
  fullName: Yoakke.Collections.Dense.IDenseSet<T>.UnionWith(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>)
  fullName.vb: Yoakke.Collections.Dense.IDenseSet(Of T).UnionWith(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)))
  nameWithType: IDenseSet<T>.UnionWith(IEnumerable<Interval<T>>)
  nameWithType.vb: IDenseSet(Of T).UnionWith(IEnumerable(Of Interval(Of T)))
- uid: Yoakke.Collections.Dense.IDenseSet`1.UnionWith*
  name: UnionWith
  href: api/Yoakke.Collections.Dense.IDenseSet-1.html#Yoakke_Collections_Dense_IDenseSet_1_UnionWith_
  commentId: Overload:Yoakke.Collections.Dense.IDenseSet`1.UnionWith
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.IDenseSet<T>.UnionWith
  fullName.vb: Yoakke.Collections.Dense.IDenseSet(Of T).UnionWith
  nameWithType: IDenseSet<T>.UnionWith
  nameWithType.vb: IDenseSet(Of T).UnionWith
- uid: Yoakke.Collections.Dense.IReadOnlyDenseMap`2
  name: IReadOnlyDenseMap<TKey, TValue>
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseMap-2.html
  commentId: T:Yoakke.Collections.Dense.IReadOnlyDenseMap`2
  name.vb: IReadOnlyDenseMap(Of TKey, TValue)
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseMap<TKey, TValue>
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseMap(Of TKey, TValue)
  nameWithType: IReadOnlyDenseMap<TKey, TValue>
  nameWithType.vb: IReadOnlyDenseMap(Of TKey, TValue)
- uid: Yoakke.Collections.Dense.IReadOnlyDenseMap`2.ContainsKeys(Yoakke.Collections.Intervals.Interval{`0})
  name: ContainsKeys(Interval<TKey>)
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseMap-2.html#Yoakke_Collections_Dense_IReadOnlyDenseMap_2_ContainsKeys_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Dense.IReadOnlyDenseMap`2.ContainsKeys(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: ContainsKeys(Interval(Of TKey))
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseMap<TKey, TValue>.ContainsKeys(Yoakke.Collections.Intervals.Interval<TKey>)
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseMap(Of TKey, TValue).ContainsKeys(Yoakke.Collections.Intervals.Interval(Of TKey))
  nameWithType: IReadOnlyDenseMap<TKey, TValue>.ContainsKeys(Interval<TKey>)
  nameWithType.vb: IReadOnlyDenseMap(Of TKey, TValue).ContainsKeys(Interval(Of TKey))
- uid: Yoakke.Collections.Dense.IReadOnlyDenseMap`2.ContainsKeys*
  name: ContainsKeys
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseMap-2.html#Yoakke_Collections_Dense_IReadOnlyDenseMap_2_ContainsKeys_
  commentId: Overload:Yoakke.Collections.Dense.IReadOnlyDenseMap`2.ContainsKeys
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseMap<TKey, TValue>.ContainsKeys
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseMap(Of TKey, TValue).ContainsKeys
  nameWithType: IReadOnlyDenseMap<TKey, TValue>.ContainsKeys
  nameWithType.vb: IReadOnlyDenseMap(Of TKey, TValue).ContainsKeys
- uid: Yoakke.Collections.Dense.IReadOnlyDenseMap`2.GetIntervalsAndValues(Yoakke.Collections.Intervals.Interval{`0})
  name: GetIntervalsAndValues(Interval<TKey>)
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseMap-2.html#Yoakke_Collections_Dense_IReadOnlyDenseMap_2_GetIntervalsAndValues_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Dense.IReadOnlyDenseMap`2.GetIntervalsAndValues(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: GetIntervalsAndValues(Interval(Of TKey))
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseMap<TKey, TValue>.GetIntervalsAndValues(Yoakke.Collections.Intervals.Interval<TKey>)
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseMap(Of TKey, TValue).GetIntervalsAndValues(Yoakke.Collections.Intervals.Interval(Of TKey))
  nameWithType: IReadOnlyDenseMap<TKey, TValue>.GetIntervalsAndValues(Interval<TKey>)
  nameWithType.vb: IReadOnlyDenseMap(Of TKey, TValue).GetIntervalsAndValues(Interval(Of TKey))
- uid: Yoakke.Collections.Dense.IReadOnlyDenseMap`2.GetIntervalsAndValues*
  name: GetIntervalsAndValues
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseMap-2.html#Yoakke_Collections_Dense_IReadOnlyDenseMap_2_GetIntervalsAndValues_
  commentId: Overload:Yoakke.Collections.Dense.IReadOnlyDenseMap`2.GetIntervalsAndValues
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseMap<TKey, TValue>.GetIntervalsAndValues
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseMap(Of TKey, TValue).GetIntervalsAndValues
  nameWithType: IReadOnlyDenseMap<TKey, TValue>.GetIntervalsAndValues
  nameWithType.vb: IReadOnlyDenseMap(Of TKey, TValue).GetIntervalsAndValues
- uid: Yoakke.Collections.Dense.IReadOnlyDenseMap`2.GetValues(Yoakke.Collections.Intervals.Interval{`0})
  name: GetValues(Interval<TKey>)
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseMap-2.html#Yoakke_Collections_Dense_IReadOnlyDenseMap_2_GetValues_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Dense.IReadOnlyDenseMap`2.GetValues(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: GetValues(Interval(Of TKey))
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseMap<TKey, TValue>.GetValues(Yoakke.Collections.Intervals.Interval<TKey>)
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseMap(Of TKey, TValue).GetValues(Yoakke.Collections.Intervals.Interval(Of TKey))
  nameWithType: IReadOnlyDenseMap<TKey, TValue>.GetValues(Interval<TKey>)
  nameWithType.vb: IReadOnlyDenseMap(Of TKey, TValue).GetValues(Interval(Of TKey))
- uid: Yoakke.Collections.Dense.IReadOnlyDenseMap`2.GetValues*
  name: GetValues
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseMap-2.html#Yoakke_Collections_Dense_IReadOnlyDenseMap_2_GetValues_
  commentId: Overload:Yoakke.Collections.Dense.IReadOnlyDenseMap`2.GetValues
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseMap<TKey, TValue>.GetValues
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseMap(Of TKey, TValue).GetValues
  nameWithType: IReadOnlyDenseMap<TKey, TValue>.GetValues
  nameWithType.vb: IReadOnlyDenseMap(Of TKey, TValue).GetValues
- uid: Yoakke.Collections.Dense.IReadOnlyDenseMap`2.Keys
  name: Keys
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseMap-2.html#Yoakke_Collections_Dense_IReadOnlyDenseMap_2_Keys
  commentId: P:Yoakke.Collections.Dense.IReadOnlyDenseMap`2.Keys
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseMap<TKey, TValue>.Keys
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseMap(Of TKey, TValue).Keys
  nameWithType: IReadOnlyDenseMap<TKey, TValue>.Keys
  nameWithType.vb: IReadOnlyDenseMap(Of TKey, TValue).Keys
- uid: Yoakke.Collections.Dense.IReadOnlyDenseMap`2.Keys*
  name: Keys
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseMap-2.html#Yoakke_Collections_Dense_IReadOnlyDenseMap_2_Keys_
  commentId: Overload:Yoakke.Collections.Dense.IReadOnlyDenseMap`2.Keys
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseMap<TKey, TValue>.Keys
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseMap(Of TKey, TValue).Keys
  nameWithType: IReadOnlyDenseMap<TKey, TValue>.Keys
  nameWithType.vb: IReadOnlyDenseMap(Of TKey, TValue).Keys
- uid: Yoakke.Collections.Dense.IReadOnlyDenseMap`2.Values
  name: Values
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseMap-2.html#Yoakke_Collections_Dense_IReadOnlyDenseMap_2_Values
  commentId: P:Yoakke.Collections.Dense.IReadOnlyDenseMap`2.Values
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseMap<TKey, TValue>.Values
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseMap(Of TKey, TValue).Values
  nameWithType: IReadOnlyDenseMap<TKey, TValue>.Values
  nameWithType.vb: IReadOnlyDenseMap(Of TKey, TValue).Values
- uid: Yoakke.Collections.Dense.IReadOnlyDenseMap`2.Values*
  name: Values
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseMap-2.html#Yoakke_Collections_Dense_IReadOnlyDenseMap_2_Values_
  commentId: Overload:Yoakke.Collections.Dense.IReadOnlyDenseMap`2.Values
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseMap<TKey, TValue>.Values
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseMap(Of TKey, TValue).Values
  nameWithType: IReadOnlyDenseMap<TKey, TValue>.Values
  nameWithType.vb: IReadOnlyDenseMap(Of TKey, TValue).Values
- uid: Yoakke.Collections.Dense.IReadOnlyDenseSet`1
  name: IReadOnlyDenseSet<T>
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseSet-1.html
  commentId: T:Yoakke.Collections.Dense.IReadOnlyDenseSet`1
  name.vb: IReadOnlyDenseSet(Of T)
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseSet<T>
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseSet(Of T)
  nameWithType: IReadOnlyDenseSet<T>
  nameWithType.vb: IReadOnlyDenseSet(Of T)
- uid: Yoakke.Collections.Dense.IReadOnlyDenseSet`1.Contains(Yoakke.Collections.Intervals.Interval{`0})
  name: Contains(Interval<T>)
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseSet-1.html#Yoakke_Collections_Dense_IReadOnlyDenseSet_1_Contains_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Dense.IReadOnlyDenseSet`1.Contains(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: Contains(Interval(Of T))
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseSet<T>.Contains(Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseSet(Of T).Contains(Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: IReadOnlyDenseSet<T>.Contains(Interval<T>)
  nameWithType.vb: IReadOnlyDenseSet(Of T).Contains(Interval(Of T))
- uid: Yoakke.Collections.Dense.IReadOnlyDenseSet`1.Contains*
  name: Contains
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseSet-1.html#Yoakke_Collections_Dense_IReadOnlyDenseSet_1_Contains_
  commentId: Overload:Yoakke.Collections.Dense.IReadOnlyDenseSet`1.Contains
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseSet<T>.Contains
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseSet(Of T).Contains
  nameWithType: IReadOnlyDenseSet<T>.Contains
  nameWithType.vb: IReadOnlyDenseSet(Of T).Contains
- uid: Yoakke.Collections.Dense.IReadOnlyDenseSet`1.IsProperSubsetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name: IsProperSubsetOf(IEnumerable<Interval<T>>)
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseSet-1.html#Yoakke_Collections_Dense_IReadOnlyDenseSet_1_IsProperSubsetOf_IEnumerable_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Dense.IReadOnlyDenseSet`1.IsProperSubsetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name.vb: IsProperSubsetOf(IEnumerable(Of Interval(Of T)))
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseSet<T>.IsProperSubsetOf(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>)
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseSet(Of T).IsProperSubsetOf(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)))
  nameWithType: IReadOnlyDenseSet<T>.IsProperSubsetOf(IEnumerable<Interval<T>>)
  nameWithType.vb: IReadOnlyDenseSet(Of T).IsProperSubsetOf(IEnumerable(Of Interval(Of T)))
- uid: Yoakke.Collections.Dense.IReadOnlyDenseSet`1.IsProperSubsetOf*
  name: IsProperSubsetOf
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseSet-1.html#Yoakke_Collections_Dense_IReadOnlyDenseSet_1_IsProperSubsetOf_
  commentId: Overload:Yoakke.Collections.Dense.IReadOnlyDenseSet`1.IsProperSubsetOf
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseSet<T>.IsProperSubsetOf
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseSet(Of T).IsProperSubsetOf
  nameWithType: IReadOnlyDenseSet<T>.IsProperSubsetOf
  nameWithType.vb: IReadOnlyDenseSet(Of T).IsProperSubsetOf
- uid: Yoakke.Collections.Dense.IReadOnlyDenseSet`1.IsProperSupersetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name: IsProperSupersetOf(IEnumerable<Interval<T>>)
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseSet-1.html#Yoakke_Collections_Dense_IReadOnlyDenseSet_1_IsProperSupersetOf_IEnumerable_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Dense.IReadOnlyDenseSet`1.IsProperSupersetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name.vb: IsProperSupersetOf(IEnumerable(Of Interval(Of T)))
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseSet<T>.IsProperSupersetOf(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>)
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseSet(Of T).IsProperSupersetOf(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)))
  nameWithType: IReadOnlyDenseSet<T>.IsProperSupersetOf(IEnumerable<Interval<T>>)
  nameWithType.vb: IReadOnlyDenseSet(Of T).IsProperSupersetOf(IEnumerable(Of Interval(Of T)))
- uid: Yoakke.Collections.Dense.IReadOnlyDenseSet`1.IsProperSupersetOf*
  name: IsProperSupersetOf
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseSet-1.html#Yoakke_Collections_Dense_IReadOnlyDenseSet_1_IsProperSupersetOf_
  commentId: Overload:Yoakke.Collections.Dense.IReadOnlyDenseSet`1.IsProperSupersetOf
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseSet<T>.IsProperSupersetOf
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseSet(Of T).IsProperSupersetOf
  nameWithType: IReadOnlyDenseSet<T>.IsProperSupersetOf
  nameWithType.vb: IReadOnlyDenseSet(Of T).IsProperSupersetOf
- uid: Yoakke.Collections.Dense.IReadOnlyDenseSet`1.IsSubsetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name: IsSubsetOf(IEnumerable<Interval<T>>)
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseSet-1.html#Yoakke_Collections_Dense_IReadOnlyDenseSet_1_IsSubsetOf_IEnumerable_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Dense.IReadOnlyDenseSet`1.IsSubsetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name.vb: IsSubsetOf(IEnumerable(Of Interval(Of T)))
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseSet<T>.IsSubsetOf(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>)
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseSet(Of T).IsSubsetOf(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)))
  nameWithType: IReadOnlyDenseSet<T>.IsSubsetOf(IEnumerable<Interval<T>>)
  nameWithType.vb: IReadOnlyDenseSet(Of T).IsSubsetOf(IEnumerable(Of Interval(Of T)))
- uid: Yoakke.Collections.Dense.IReadOnlyDenseSet`1.IsSubsetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}},System.Boolean@)
  name: IsSubsetOf(IEnumerable<Interval<T>>, out Boolean)
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseSet-1.html#Yoakke_Collections_Dense_IReadOnlyDenseSet_1_IsSubsetOf_IEnumerable_Yoakke_Collections_Intervals_Interval__0___System_Boolean__
  commentId: M:Yoakke.Collections.Dense.IReadOnlyDenseSet`1.IsSubsetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}},System.Boolean@)
  name.vb: IsSubsetOf(IEnumerable(Of Interval(Of T)), ByRef Boolean)
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseSet<T>.IsSubsetOf(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>, out System.Boolean)
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseSet(Of T).IsSubsetOf(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)), ByRef System.Boolean)
  nameWithType: IReadOnlyDenseSet<T>.IsSubsetOf(IEnumerable<Interval<T>>, out Boolean)
  nameWithType.vb: IReadOnlyDenseSet(Of T).IsSubsetOf(IEnumerable(Of Interval(Of T)), ByRef Boolean)
- uid: Yoakke.Collections.Dense.IReadOnlyDenseSet`1.IsSubsetOf*
  name: IsSubsetOf
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseSet-1.html#Yoakke_Collections_Dense_IReadOnlyDenseSet_1_IsSubsetOf_
  commentId: Overload:Yoakke.Collections.Dense.IReadOnlyDenseSet`1.IsSubsetOf
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseSet<T>.IsSubsetOf
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseSet(Of T).IsSubsetOf
  nameWithType: IReadOnlyDenseSet<T>.IsSubsetOf
  nameWithType.vb: IReadOnlyDenseSet(Of T).IsSubsetOf
- uid: Yoakke.Collections.Dense.IReadOnlyDenseSet`1.IsSupersetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name: IsSupersetOf(IEnumerable<Interval<T>>)
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseSet-1.html#Yoakke_Collections_Dense_IReadOnlyDenseSet_1_IsSupersetOf_IEnumerable_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Dense.IReadOnlyDenseSet`1.IsSupersetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name.vb: IsSupersetOf(IEnumerable(Of Interval(Of T)))
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseSet<T>.IsSupersetOf(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>)
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseSet(Of T).IsSupersetOf(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)))
  nameWithType: IReadOnlyDenseSet<T>.IsSupersetOf(IEnumerable<Interval<T>>)
  nameWithType.vb: IReadOnlyDenseSet(Of T).IsSupersetOf(IEnumerable(Of Interval(Of T)))
- uid: Yoakke.Collections.Dense.IReadOnlyDenseSet`1.IsSupersetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}},System.Boolean@)
  name: IsSupersetOf(IEnumerable<Interval<T>>, out Boolean)
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseSet-1.html#Yoakke_Collections_Dense_IReadOnlyDenseSet_1_IsSupersetOf_IEnumerable_Yoakke_Collections_Intervals_Interval__0___System_Boolean__
  commentId: M:Yoakke.Collections.Dense.IReadOnlyDenseSet`1.IsSupersetOf(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}},System.Boolean@)
  name.vb: IsSupersetOf(IEnumerable(Of Interval(Of T)), ByRef Boolean)
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseSet<T>.IsSupersetOf(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>, out System.Boolean)
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseSet(Of T).IsSupersetOf(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)), ByRef System.Boolean)
  nameWithType: IReadOnlyDenseSet<T>.IsSupersetOf(IEnumerable<Interval<T>>, out Boolean)
  nameWithType.vb: IReadOnlyDenseSet(Of T).IsSupersetOf(IEnumerable(Of Interval(Of T)), ByRef Boolean)
- uid: Yoakke.Collections.Dense.IReadOnlyDenseSet`1.IsSupersetOf*
  name: IsSupersetOf
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseSet-1.html#Yoakke_Collections_Dense_IReadOnlyDenseSet_1_IsSupersetOf_
  commentId: Overload:Yoakke.Collections.Dense.IReadOnlyDenseSet`1.IsSupersetOf
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseSet<T>.IsSupersetOf
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseSet(Of T).IsSupersetOf
  nameWithType: IReadOnlyDenseSet<T>.IsSupersetOf
  nameWithType.vb: IReadOnlyDenseSet(Of T).IsSupersetOf
- uid: Yoakke.Collections.Dense.IReadOnlyDenseSet`1.Overlaps(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name: Overlaps(IEnumerable<Interval<T>>)
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseSet-1.html#Yoakke_Collections_Dense_IReadOnlyDenseSet_1_Overlaps_IEnumerable_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Dense.IReadOnlyDenseSet`1.Overlaps(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name.vb: Overlaps(IEnumerable(Of Interval(Of T)))
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseSet<T>.Overlaps(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>)
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseSet(Of T).Overlaps(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)))
  nameWithType: IReadOnlyDenseSet<T>.Overlaps(IEnumerable<Interval<T>>)
  nameWithType.vb: IReadOnlyDenseSet(Of T).Overlaps(IEnumerable(Of Interval(Of T)))
- uid: Yoakke.Collections.Dense.IReadOnlyDenseSet`1.Overlaps(Yoakke.Collections.Intervals.Interval{`0})
  name: Overlaps(Interval<T>)
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseSet-1.html#Yoakke_Collections_Dense_IReadOnlyDenseSet_1_Overlaps_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Dense.IReadOnlyDenseSet`1.Overlaps(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: Overlaps(Interval(Of T))
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseSet<T>.Overlaps(Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseSet(Of T).Overlaps(Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: IReadOnlyDenseSet<T>.Overlaps(Interval<T>)
  nameWithType.vb: IReadOnlyDenseSet(Of T).Overlaps(Interval(Of T))
- uid: Yoakke.Collections.Dense.IReadOnlyDenseSet`1.Overlaps*
  name: Overlaps
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseSet-1.html#Yoakke_Collections_Dense_IReadOnlyDenseSet_1_Overlaps_
  commentId: Overload:Yoakke.Collections.Dense.IReadOnlyDenseSet`1.Overlaps
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseSet<T>.Overlaps
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseSet(Of T).Overlaps
  nameWithType: IReadOnlyDenseSet<T>.Overlaps
  nameWithType.vb: IReadOnlyDenseSet(Of T).Overlaps
- uid: Yoakke.Collections.Dense.IReadOnlyDenseSet`1.SetEquals(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name: SetEquals(IEnumerable<Interval<T>>)
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseSet-1.html#Yoakke_Collections_Dense_IReadOnlyDenseSet_1_SetEquals_IEnumerable_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Dense.IReadOnlyDenseSet`1.SetEquals(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name.vb: SetEquals(IEnumerable(Of Interval(Of T)))
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseSet<T>.SetEquals(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>)
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseSet(Of T).SetEquals(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)))
  nameWithType: IReadOnlyDenseSet<T>.SetEquals(IEnumerable<Interval<T>>)
  nameWithType.vb: IReadOnlyDenseSet(Of T).SetEquals(IEnumerable(Of Interval(Of T)))
- uid: Yoakke.Collections.Dense.IReadOnlyDenseSet`1.SetEquals*
  name: SetEquals
  href: api/Yoakke.Collections.Dense.IReadOnlyDenseSet-1.html#Yoakke_Collections_Dense_IReadOnlyDenseSet_1_SetEquals_
  commentId: Overload:Yoakke.Collections.Dense.IReadOnlyDenseSet`1.SetEquals
  isSpec: "True"
  fullName: Yoakke.Collections.Dense.IReadOnlyDenseSet<T>.SetEquals
  fullName.vb: Yoakke.Collections.Dense.IReadOnlyDenseSet(Of T).SetEquals
  nameWithType: IReadOnlyDenseSet<T>.SetEquals
  nameWithType.vb: IReadOnlyDenseSet(Of T).SetEquals
- uid: Yoakke.Collections.Graphs
  name: Yoakke.Collections.Graphs
  href: api/Yoakke.Collections.Graphs.html
  commentId: N:Yoakke.Collections.Graphs
  fullName: Yoakke.Collections.Graphs
  nameWithType: Yoakke.Collections.Graphs
- uid: Yoakke.Collections.Graphs.BreadthFirst
  name: BreadthFirst
  href: api/Yoakke.Collections.Graphs.BreadthFirst.html
  commentId: T:Yoakke.Collections.Graphs.BreadthFirst
  fullName: Yoakke.Collections.Graphs.BreadthFirst
  nameWithType: BreadthFirst
- uid: Yoakke.Collections.Graphs.BreadthFirst.Search*
  name: Search
  href: api/Yoakke.Collections.Graphs.BreadthFirst.html#Yoakke_Collections_Graphs_BreadthFirst_Search_
  commentId: Overload:Yoakke.Collections.Graphs.BreadthFirst.Search
  isSpec: "True"
  fullName: Yoakke.Collections.Graphs.BreadthFirst.Search
  nameWithType: BreadthFirst.Search
- uid: Yoakke.Collections.Graphs.BreadthFirst.Search``1(``0,Func{``0,IEnumerable{``0}})
  name: Search<TVertex>(TVertex, Func<TVertex, IEnumerable<TVertex>>)
  href: api/Yoakke.Collections.Graphs.BreadthFirst.html#Yoakke_Collections_Graphs_BreadthFirst_Search__1___0_Func___0_IEnumerable___0___
  commentId: M:Yoakke.Collections.Graphs.BreadthFirst.Search``1(``0,Func{``0,IEnumerable{``0}})
  name.vb: Search(Of TVertex)(TVertex, Func(Of TVertex, IEnumerable(Of TVertex)))
  fullName: Yoakke.Collections.Graphs.BreadthFirst.Search<TVertex>(TVertex, Func<TVertex, IEnumerable<TVertex>>)
  fullName.vb: Yoakke.Collections.Graphs.BreadthFirst.Search(Of TVertex)(TVertex, Func(Of TVertex, IEnumerable(Of TVertex)))
  nameWithType: BreadthFirst.Search<TVertex>(TVertex, Func<TVertex, IEnumerable<TVertex>>)
  nameWithType.vb: BreadthFirst.Search(Of TVertex)(TVertex, Func(Of TVertex, IEnumerable(Of TVertex)))
- uid: Yoakke.Collections.Graphs.BreadthFirst.Search``1(``0,Func{``0,IEnumerable{``0}},IEqualityComparer{``0})
  name: Search<TVertex>(TVertex, Func<TVertex, IEnumerable<TVertex>>, IEqualityComparer<TVertex>)
  href: api/Yoakke.Collections.Graphs.BreadthFirst.html#Yoakke_Collections_Graphs_BreadthFirst_Search__1___0_Func___0_IEnumerable___0___IEqualityComparer___0__
  commentId: M:Yoakke.Collections.Graphs.BreadthFirst.Search``1(``0,Func{``0,IEnumerable{``0}},IEqualityComparer{``0})
  name.vb: Search(Of TVertex)(TVertex, Func(Of TVertex, IEnumerable(Of TVertex)), IEqualityComparer(Of TVertex))
  fullName: Yoakke.Collections.Graphs.BreadthFirst.Search<TVertex>(TVertex, Func<TVertex, IEnumerable<TVertex>>, IEqualityComparer<TVertex>)
  fullName.vb: Yoakke.Collections.Graphs.BreadthFirst.Search(Of TVertex)(TVertex, Func(Of TVertex, IEnumerable(Of TVertex)), IEqualityComparer(Of TVertex))
  nameWithType: BreadthFirst.Search<TVertex>(TVertex, Func<TVertex, IEnumerable<TVertex>>, IEqualityComparer<TVertex>)
  nameWithType.vb: BreadthFirst.Search(Of TVertex)(TVertex, Func(Of TVertex, IEnumerable(Of TVertex)), IEqualityComparer(Of TVertex))
- uid: Yoakke.Collections.IDeque`1
  name: IDeque<T>
  href: api/Yoakke.Collections.IDeque-1.html
  commentId: T:Yoakke.Collections.IDeque`1
  name.vb: IDeque(Of T)
  fullName: Yoakke.Collections.IDeque<T>
  fullName.vb: Yoakke.Collections.IDeque(Of T)
  nameWithType: IDeque<T>
  nameWithType.vb: IDeque(Of T)
- uid: Yoakke.Collections.IDeque`1.AddBack(`0)
  name: AddBack(T)
  href: api/Yoakke.Collections.IDeque-1.html#Yoakke_Collections_IDeque_1_AddBack__0_
  commentId: M:Yoakke.Collections.IDeque`1.AddBack(`0)
  fullName: Yoakke.Collections.IDeque<T>.AddBack(T)
  fullName.vb: Yoakke.Collections.IDeque(Of T).AddBack(T)
  nameWithType: IDeque<T>.AddBack(T)
  nameWithType.vb: IDeque(Of T).AddBack(T)
- uid: Yoakke.Collections.IDeque`1.AddBack*
  name: AddBack
  href: api/Yoakke.Collections.IDeque-1.html#Yoakke_Collections_IDeque_1_AddBack_
  commentId: Overload:Yoakke.Collections.IDeque`1.AddBack
  isSpec: "True"
  fullName: Yoakke.Collections.IDeque<T>.AddBack
  fullName.vb: Yoakke.Collections.IDeque(Of T).AddBack
  nameWithType: IDeque<T>.AddBack
  nameWithType.vb: IDeque(Of T).AddBack
- uid: Yoakke.Collections.IDeque`1.AddFront(`0)
  name: AddFront(T)
  href: api/Yoakke.Collections.IDeque-1.html#Yoakke_Collections_IDeque_1_AddFront__0_
  commentId: M:Yoakke.Collections.IDeque`1.AddFront(`0)
  fullName: Yoakke.Collections.IDeque<T>.AddFront(T)
  fullName.vb: Yoakke.Collections.IDeque(Of T).AddFront(T)
  nameWithType: IDeque<T>.AddFront(T)
  nameWithType.vb: IDeque(Of T).AddFront(T)
- uid: Yoakke.Collections.IDeque`1.AddFront*
  name: AddFront
  href: api/Yoakke.Collections.IDeque-1.html#Yoakke_Collections_IDeque_1_AddFront_
  commentId: Overload:Yoakke.Collections.IDeque`1.AddFront
  isSpec: "True"
  fullName: Yoakke.Collections.IDeque<T>.AddFront
  fullName.vb: Yoakke.Collections.IDeque(Of T).AddFront
  nameWithType: IDeque<T>.AddFront
  nameWithType.vb: IDeque(Of T).AddFront
- uid: Yoakke.Collections.IDeque`1.RemoveBack
  name: RemoveBack()
  href: api/Yoakke.Collections.IDeque-1.html#Yoakke_Collections_IDeque_1_RemoveBack
  commentId: M:Yoakke.Collections.IDeque`1.RemoveBack
  fullName: Yoakke.Collections.IDeque<T>.RemoveBack()
  fullName.vb: Yoakke.Collections.IDeque(Of T).RemoveBack()
  nameWithType: IDeque<T>.RemoveBack()
  nameWithType.vb: IDeque(Of T).RemoveBack()
- uid: Yoakke.Collections.IDeque`1.RemoveBack*
  name: RemoveBack
  href: api/Yoakke.Collections.IDeque-1.html#Yoakke_Collections_IDeque_1_RemoveBack_
  commentId: Overload:Yoakke.Collections.IDeque`1.RemoveBack
  isSpec: "True"
  fullName: Yoakke.Collections.IDeque<T>.RemoveBack
  fullName.vb: Yoakke.Collections.IDeque(Of T).RemoveBack
  nameWithType: IDeque<T>.RemoveBack
  nameWithType.vb: IDeque(Of T).RemoveBack
- uid: Yoakke.Collections.IDeque`1.RemoveFront
  name: RemoveFront()
  href: api/Yoakke.Collections.IDeque-1.html#Yoakke_Collections_IDeque_1_RemoveFront
  commentId: M:Yoakke.Collections.IDeque`1.RemoveFront
  fullName: Yoakke.Collections.IDeque<T>.RemoveFront()
  fullName.vb: Yoakke.Collections.IDeque(Of T).RemoveFront()
  nameWithType: IDeque<T>.RemoveFront()
  nameWithType.vb: IDeque(Of T).RemoveFront()
- uid: Yoakke.Collections.IDeque`1.RemoveFront*
  name: RemoveFront
  href: api/Yoakke.Collections.IDeque-1.html#Yoakke_Collections_IDeque_1_RemoveFront_
  commentId: Overload:Yoakke.Collections.IDeque`1.RemoveFront
  isSpec: "True"
  fullName: Yoakke.Collections.IDeque<T>.RemoveFront
  fullName.vb: Yoakke.Collections.IDeque(Of T).RemoveFront
  nameWithType: IDeque<T>.RemoveFront
  nameWithType.vb: IDeque(Of T).RemoveFront
- uid: Yoakke.Collections.Intervals
  name: Yoakke.Collections.Intervals
  href: api/Yoakke.Collections.Intervals.html
  commentId: N:Yoakke.Collections.Intervals
  fullName: Yoakke.Collections.Intervals
  nameWithType: Yoakke.Collections.Intervals
- uid: Yoakke.Collections.Intervals.BoundComparer`1
  name: BoundComparer<T>
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html
  commentId: T:Yoakke.Collections.Intervals.BoundComparer`1
  name.vb: BoundComparer(Of T)
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T)
  nameWithType: BoundComparer<T>
  nameWithType.vb: BoundComparer(Of T)
- uid: Yoakke.Collections.Intervals.BoundComparer`1.#ctor(IEqualityComparer{`0},IComparer{`0})
  name: BoundComparer(IEqualityComparer<T>, IComparer<T>)
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1__ctor_IEqualityComparer__0__IComparer__0__
  commentId: M:Yoakke.Collections.Intervals.BoundComparer`1.#ctor(IEqualityComparer{`0},IComparer{`0})
  name.vb: BoundComparer(IEqualityComparer(Of T), IComparer(Of T))
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.BoundComparer(IEqualityComparer<T>, IComparer<T>)
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).BoundComparer(IEqualityComparer(Of T), IComparer(Of T))
  nameWithType: BoundComparer<T>.BoundComparer(IEqualityComparer<T>, IComparer<T>)
  nameWithType.vb: BoundComparer(Of T).BoundComparer(IEqualityComparer(Of T), IComparer(Of T))
- uid: Yoakke.Collections.Intervals.BoundComparer`1.#ctor*
  name: BoundComparer
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1__ctor_
  commentId: Overload:Yoakke.Collections.Intervals.BoundComparer`1.#ctor
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.BoundComparer
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).BoundComparer
  nameWithType: BoundComparer<T>.BoundComparer
  nameWithType.vb: BoundComparer(Of T).BoundComparer
- uid: Yoakke.Collections.Intervals.BoundComparer`1.Compare(Bound{`0},Bound{`0})
  name: Compare(Bound<T>, Bound<T>)
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_Compare_Bound__0__Bound__0__
  commentId: M:Yoakke.Collections.Intervals.BoundComparer`1.Compare(Bound{`0},Bound{`0})
  name.vb: Compare(Bound(Of T), Bound(Of T))
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.Compare(Bound<T>, Bound<T>)
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).Compare(Bound(Of T), Bound(Of T))
  nameWithType: BoundComparer<T>.Compare(Bound<T>, Bound<T>)
  nameWithType.vb: BoundComparer(Of T).Compare(Bound(Of T), Bound(Of T))
- uid: Yoakke.Collections.Intervals.BoundComparer`1.Compare(LowerBound{`0},LowerBound{`0})
  name: Compare(LowerBound<T>, LowerBound<T>)
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_Compare_LowerBound__0__LowerBound__0__
  commentId: M:Yoakke.Collections.Intervals.BoundComparer`1.Compare(LowerBound{`0},LowerBound{`0})
  name.vb: Compare(LowerBound(Of T), LowerBound(Of T))
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.Compare(LowerBound<T>, LowerBound<T>)
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).Compare(LowerBound(Of T), LowerBound(Of T))
  nameWithType: BoundComparer<T>.Compare(LowerBound<T>, LowerBound<T>)
  nameWithType.vb: BoundComparer(Of T).Compare(LowerBound(Of T), LowerBound(Of T))
- uid: Yoakke.Collections.Intervals.BoundComparer`1.Compare(LowerBound{`0},UpperBound{`0})
  name: Compare(LowerBound<T>, UpperBound<T>)
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_Compare_LowerBound__0__UpperBound__0__
  commentId: M:Yoakke.Collections.Intervals.BoundComparer`1.Compare(LowerBound{`0},UpperBound{`0})
  name.vb: Compare(LowerBound(Of T), UpperBound(Of T))
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.Compare(LowerBound<T>, UpperBound<T>)
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).Compare(LowerBound(Of T), UpperBound(Of T))
  nameWithType: BoundComparer<T>.Compare(LowerBound<T>, UpperBound<T>)
  nameWithType.vb: BoundComparer(Of T).Compare(LowerBound(Of T), UpperBound(Of T))
- uid: Yoakke.Collections.Intervals.BoundComparer`1.Compare(UpperBound{`0},LowerBound{`0})
  name: Compare(UpperBound<T>, LowerBound<T>)
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_Compare_UpperBound__0__LowerBound__0__
  commentId: M:Yoakke.Collections.Intervals.BoundComparer`1.Compare(UpperBound{`0},LowerBound{`0})
  name.vb: Compare(UpperBound(Of T), LowerBound(Of T))
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.Compare(UpperBound<T>, LowerBound<T>)
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).Compare(UpperBound(Of T), LowerBound(Of T))
  nameWithType: BoundComparer<T>.Compare(UpperBound<T>, LowerBound<T>)
  nameWithType.vb: BoundComparer(Of T).Compare(UpperBound(Of T), LowerBound(Of T))
- uid: Yoakke.Collections.Intervals.BoundComparer`1.Compare(UpperBound{`0},UpperBound{`0})
  name: Compare(UpperBound<T>, UpperBound<T>)
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_Compare_UpperBound__0__UpperBound__0__
  commentId: M:Yoakke.Collections.Intervals.BoundComparer`1.Compare(UpperBound{`0},UpperBound{`0})
  name.vb: Compare(UpperBound(Of T), UpperBound(Of T))
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.Compare(UpperBound<T>, UpperBound<T>)
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).Compare(UpperBound(Of T), UpperBound(Of T))
  nameWithType: BoundComparer<T>.Compare(UpperBound<T>, UpperBound<T>)
  nameWithType.vb: BoundComparer(Of T).Compare(UpperBound(Of T), UpperBound(Of T))
- uid: Yoakke.Collections.Intervals.BoundComparer`1.Compare*
  name: Compare
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_Compare_
  commentId: Overload:Yoakke.Collections.Intervals.BoundComparer`1.Compare
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.Compare
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).Compare
  nameWithType: BoundComparer<T>.Compare
  nameWithType.vb: BoundComparer(Of T).Compare
- uid: Yoakke.Collections.Intervals.BoundComparer`1.Default
  name: Default
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_Default
  commentId: P:Yoakke.Collections.Intervals.BoundComparer`1.Default
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.Default
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).Default
  nameWithType: BoundComparer<T>.Default
  nameWithType.vb: BoundComparer(Of T).Default
- uid: Yoakke.Collections.Intervals.BoundComparer`1.Default*
  name: Default
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_Default_
  commentId: Overload:Yoakke.Collections.Intervals.BoundComparer`1.Default
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.Default
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).Default
  nameWithType: BoundComparer<T>.Default
  nameWithType.vb: BoundComparer(Of T).Default
- uid: Yoakke.Collections.Intervals.BoundComparer`1.Equals(Bound{`0},Bound{`0})
  name: Equals(Bound<T>, Bound<T>)
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_Equals_Bound__0__Bound__0__
  commentId: M:Yoakke.Collections.Intervals.BoundComparer`1.Equals(Bound{`0},Bound{`0})
  name.vb: Equals(Bound(Of T), Bound(Of T))
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.Equals(Bound<T>, Bound<T>)
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).Equals(Bound(Of T), Bound(Of T))
  nameWithType: BoundComparer<T>.Equals(Bound<T>, Bound<T>)
  nameWithType.vb: BoundComparer(Of T).Equals(Bound(Of T), Bound(Of T))
- uid: Yoakke.Collections.Intervals.BoundComparer`1.Equals(LowerBound{`0},LowerBound{`0})
  name: Equals(LowerBound<T>, LowerBound<T>)
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_Equals_LowerBound__0__LowerBound__0__
  commentId: M:Yoakke.Collections.Intervals.BoundComparer`1.Equals(LowerBound{`0},LowerBound{`0})
  name.vb: Equals(LowerBound(Of T), LowerBound(Of T))
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.Equals(LowerBound<T>, LowerBound<T>)
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).Equals(LowerBound(Of T), LowerBound(Of T))
  nameWithType: BoundComparer<T>.Equals(LowerBound<T>, LowerBound<T>)
  nameWithType.vb: BoundComparer(Of T).Equals(LowerBound(Of T), LowerBound(Of T))
- uid: Yoakke.Collections.Intervals.BoundComparer`1.Equals(UpperBound{`0},UpperBound{`0})
  name: Equals(UpperBound<T>, UpperBound<T>)
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_Equals_UpperBound__0__UpperBound__0__
  commentId: M:Yoakke.Collections.Intervals.BoundComparer`1.Equals(UpperBound{`0},UpperBound{`0})
  name.vb: Equals(UpperBound(Of T), UpperBound(Of T))
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.Equals(UpperBound<T>, UpperBound<T>)
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).Equals(UpperBound(Of T), UpperBound(Of T))
  nameWithType: BoundComparer<T>.Equals(UpperBound<T>, UpperBound<T>)
  nameWithType.vb: BoundComparer(Of T).Equals(UpperBound(Of T), UpperBound(Of T))
- uid: Yoakke.Collections.Intervals.BoundComparer`1.Equals*
  name: Equals
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_Equals_
  commentId: Overload:Yoakke.Collections.Intervals.BoundComparer`1.Equals
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.Equals
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).Equals
  nameWithType: BoundComparer<T>.Equals
  nameWithType.vb: BoundComparer(Of T).Equals
- uid: Yoakke.Collections.Intervals.BoundComparer`1.GetHashCode(Bound{`0})
  name: GetHashCode(Bound<T>)
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_GetHashCode_Bound__0__
  commentId: M:Yoakke.Collections.Intervals.BoundComparer`1.GetHashCode(Bound{`0})
  name.vb: GetHashCode(Bound(Of T))
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.GetHashCode(Bound<T>)
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).GetHashCode(Bound(Of T))
  nameWithType: BoundComparer<T>.GetHashCode(Bound<T>)
  nameWithType.vb: BoundComparer(Of T).GetHashCode(Bound(Of T))
- uid: Yoakke.Collections.Intervals.BoundComparer`1.GetHashCode(LowerBound{`0})
  name: GetHashCode(LowerBound<T>)
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_GetHashCode_LowerBound__0__
  commentId: M:Yoakke.Collections.Intervals.BoundComparer`1.GetHashCode(LowerBound{`0})
  name.vb: GetHashCode(LowerBound(Of T))
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.GetHashCode(LowerBound<T>)
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).GetHashCode(LowerBound(Of T))
  nameWithType: BoundComparer<T>.GetHashCode(LowerBound<T>)
  nameWithType.vb: BoundComparer(Of T).GetHashCode(LowerBound(Of T))
- uid: Yoakke.Collections.Intervals.BoundComparer`1.GetHashCode(UpperBound{`0})
  name: GetHashCode(UpperBound<T>)
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_GetHashCode_UpperBound__0__
  commentId: M:Yoakke.Collections.Intervals.BoundComparer`1.GetHashCode(UpperBound{`0})
  name.vb: GetHashCode(UpperBound(Of T))
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.GetHashCode(UpperBound<T>)
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).GetHashCode(UpperBound(Of T))
  nameWithType: BoundComparer<T>.GetHashCode(UpperBound<T>)
  nameWithType.vb: BoundComparer(Of T).GetHashCode(UpperBound(Of T))
- uid: Yoakke.Collections.Intervals.BoundComparer`1.GetHashCode*
  name: GetHashCode
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_GetHashCode_
  commentId: Overload:Yoakke.Collections.Intervals.BoundComparer`1.GetHashCode
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.GetHashCode
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).GetHashCode
  nameWithType: BoundComparer<T>.GetHashCode
  nameWithType.vb: BoundComparer(Of T).GetHashCode
- uid: Yoakke.Collections.Intervals.BoundComparer`1.IsTouching(LowerBound{`0},UpperBound{`0})
  name: IsTouching(LowerBound<T>, UpperBound<T>)
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_IsTouching_LowerBound__0__UpperBound__0__
  commentId: M:Yoakke.Collections.Intervals.BoundComparer`1.IsTouching(LowerBound{`0},UpperBound{`0})
  name.vb: IsTouching(LowerBound(Of T), UpperBound(Of T))
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.IsTouching(LowerBound<T>, UpperBound<T>)
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).IsTouching(LowerBound(Of T), UpperBound(Of T))
  nameWithType: BoundComparer<T>.IsTouching(LowerBound<T>, UpperBound<T>)
  nameWithType.vb: BoundComparer(Of T).IsTouching(LowerBound(Of T), UpperBound(Of T))
- uid: Yoakke.Collections.Intervals.BoundComparer`1.IsTouching(UpperBound{`0},LowerBound{`0})
  name: IsTouching(UpperBound<T>, LowerBound<T>)
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_IsTouching_UpperBound__0__LowerBound__0__
  commentId: M:Yoakke.Collections.Intervals.BoundComparer`1.IsTouching(UpperBound{`0},LowerBound{`0})
  name.vb: IsTouching(UpperBound(Of T), LowerBound(Of T))
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.IsTouching(UpperBound<T>, LowerBound<T>)
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).IsTouching(UpperBound(Of T), LowerBound(Of T))
  nameWithType: BoundComparer<T>.IsTouching(UpperBound<T>, LowerBound<T>)
  nameWithType.vb: BoundComparer(Of T).IsTouching(UpperBound(Of T), LowerBound(Of T))
- uid: Yoakke.Collections.Intervals.BoundComparer`1.IsTouching*
  name: IsTouching
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_IsTouching_
  commentId: Overload:Yoakke.Collections.Intervals.BoundComparer`1.IsTouching
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.IsTouching
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).IsTouching
  nameWithType: BoundComparer<T>.IsTouching
  nameWithType.vb: BoundComparer(Of T).IsTouching
- uid: Yoakke.Collections.Intervals.BoundComparer`1.Max(LowerBound{`0},LowerBound{`0})
  name: Max(LowerBound<T>, LowerBound<T>)
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_Max_LowerBound__0__LowerBound__0__
  commentId: M:Yoakke.Collections.Intervals.BoundComparer`1.Max(LowerBound{`0},LowerBound{`0})
  name.vb: Max(LowerBound(Of T), LowerBound(Of T))
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.Max(LowerBound<T>, LowerBound<T>)
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).Max(LowerBound(Of T), LowerBound(Of T))
  nameWithType: BoundComparer<T>.Max(LowerBound<T>, LowerBound<T>)
  nameWithType.vb: BoundComparer(Of T).Max(LowerBound(Of T), LowerBound(Of T))
- uid: Yoakke.Collections.Intervals.BoundComparer`1.Max(UpperBound{`0},UpperBound{`0})
  name: Max(UpperBound<T>, UpperBound<T>)
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_Max_UpperBound__0__UpperBound__0__
  commentId: M:Yoakke.Collections.Intervals.BoundComparer`1.Max(UpperBound{`0},UpperBound{`0})
  name.vb: Max(UpperBound(Of T), UpperBound(Of T))
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.Max(UpperBound<T>, UpperBound<T>)
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).Max(UpperBound(Of T), UpperBound(Of T))
  nameWithType: BoundComparer<T>.Max(UpperBound<T>, UpperBound<T>)
  nameWithType.vb: BoundComparer(Of T).Max(UpperBound(Of T), UpperBound(Of T))
- uid: Yoakke.Collections.Intervals.BoundComparer`1.Max*
  name: Max
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_Max_
  commentId: Overload:Yoakke.Collections.Intervals.BoundComparer`1.Max
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.Max
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).Max
  nameWithType: BoundComparer<T>.Max
  nameWithType.vb: BoundComparer(Of T).Max
- uid: Yoakke.Collections.Intervals.BoundComparer`1.Min(LowerBound{`0},LowerBound{`0})
  name: Min(LowerBound<T>, LowerBound<T>)
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_Min_LowerBound__0__LowerBound__0__
  commentId: M:Yoakke.Collections.Intervals.BoundComparer`1.Min(LowerBound{`0},LowerBound{`0})
  name.vb: Min(LowerBound(Of T), LowerBound(Of T))
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.Min(LowerBound<T>, LowerBound<T>)
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).Min(LowerBound(Of T), LowerBound(Of T))
  nameWithType: BoundComparer<T>.Min(LowerBound<T>, LowerBound<T>)
  nameWithType.vb: BoundComparer(Of T).Min(LowerBound(Of T), LowerBound(Of T))
- uid: Yoakke.Collections.Intervals.BoundComparer`1.Min(UpperBound{`0},UpperBound{`0})
  name: Min(UpperBound<T>, UpperBound<T>)
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_Min_UpperBound__0__UpperBound__0__
  commentId: M:Yoakke.Collections.Intervals.BoundComparer`1.Min(UpperBound{`0},UpperBound{`0})
  name.vb: Min(UpperBound(Of T), UpperBound(Of T))
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.Min(UpperBound<T>, UpperBound<T>)
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).Min(UpperBound(Of T), UpperBound(Of T))
  nameWithType: BoundComparer<T>.Min(UpperBound<T>, UpperBound<T>)
  nameWithType.vb: BoundComparer(Of T).Min(UpperBound(Of T), UpperBound(Of T))
- uid: Yoakke.Collections.Intervals.BoundComparer`1.Min*
  name: Min
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_Min_
  commentId: Overload:Yoakke.Collections.Intervals.BoundComparer`1.Min
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.Min
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).Min
  nameWithType: BoundComparer<T>.Min
  nameWithType.vb: BoundComparer(Of T).Min
- uid: Yoakke.Collections.Intervals.BoundComparer`1.ValueComparer
  name: ValueComparer
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_ValueComparer
  commentId: P:Yoakke.Collections.Intervals.BoundComparer`1.ValueComparer
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.ValueComparer
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).ValueComparer
  nameWithType: BoundComparer<T>.ValueComparer
  nameWithType.vb: BoundComparer(Of T).ValueComparer
- uid: Yoakke.Collections.Intervals.BoundComparer`1.ValueComparer*
  name: ValueComparer
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_ValueComparer_
  commentId: Overload:Yoakke.Collections.Intervals.BoundComparer`1.ValueComparer
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.ValueComparer
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).ValueComparer
  nameWithType: BoundComparer<T>.ValueComparer
  nameWithType.vb: BoundComparer(Of T).ValueComparer
- uid: Yoakke.Collections.Intervals.BoundComparer`1.ValueEqualityComparer
  name: ValueEqualityComparer
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_ValueEqualityComparer
  commentId: P:Yoakke.Collections.Intervals.BoundComparer`1.ValueEqualityComparer
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.ValueEqualityComparer
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).ValueEqualityComparer
  nameWithType: BoundComparer<T>.ValueEqualityComparer
  nameWithType.vb: BoundComparer(Of T).ValueEqualityComparer
- uid: Yoakke.Collections.Intervals.BoundComparer`1.ValueEqualityComparer*
  name: ValueEqualityComparer
  href: api/Yoakke.Collections.Intervals.BoundComparer-1.html#Yoakke_Collections_Intervals_BoundComparer_1_ValueEqualityComparer_
  commentId: Overload:Yoakke.Collections.Intervals.BoundComparer`1.ValueEqualityComparer
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.BoundComparer<T>.ValueEqualityComparer
  fullName.vb: Yoakke.Collections.Intervals.BoundComparer(Of T).ValueEqualityComparer
  nameWithType: BoundComparer<T>.ValueEqualityComparer
  nameWithType.vb: BoundComparer(Of T).ValueEqualityComparer
- uid: Yoakke.Collections.Intervals.Interval`1
  name: Interval<T>
  href: api/Yoakke.Collections.Intervals.Interval-1.html
  commentId: T:Yoakke.Collections.Intervals.Interval`1
  name.vb: Interval(Of T)
  fullName: Yoakke.Collections.Intervals.Interval<T>
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T)
  nameWithType: Interval<T>
  nameWithType.vb: Interval(Of T)
- uid: Yoakke.Collections.Intervals.Interval`1.#ctor(LowerBound{`0},UpperBound{`0})
  name: Interval(LowerBound<T>, UpperBound<T>)
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1__ctor_LowerBound__0__UpperBound__0__
  commentId: M:Yoakke.Collections.Intervals.Interval`1.#ctor(LowerBound{`0},UpperBound{`0})
  name.vb: Interval(LowerBound(Of T), UpperBound(Of T))
  fullName: Yoakke.Collections.Intervals.Interval<T>.Interval(LowerBound<T>, UpperBound<T>)
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Interval(LowerBound(Of T), UpperBound(Of T))
  nameWithType: Interval<T>.Interval(LowerBound<T>, UpperBound<T>)
  nameWithType.vb: Interval(Of T).Interval(LowerBound(Of T), UpperBound(Of T))
- uid: Yoakke.Collections.Intervals.Interval`1.#ctor*
  name: Interval
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1__ctor_
  commentId: Overload:Yoakke.Collections.Intervals.Interval`1.#ctor
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.Interval<T>.Interval
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Interval
  nameWithType: Interval<T>.Interval
  nameWithType.vb: Interval(Of T).Interval
- uid: Yoakke.Collections.Intervals.Interval`1.Contains(`0)
  name: Contains(T)
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_Contains__0_
  commentId: M:Yoakke.Collections.Intervals.Interval`1.Contains(`0)
  fullName: Yoakke.Collections.Intervals.Interval<T>.Contains(T)
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Contains(T)
  nameWithType: Interval<T>.Contains(T)
  nameWithType.vb: Interval(Of T).Contains(T)
- uid: Yoakke.Collections.Intervals.Interval`1.Contains*
  name: Contains
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_Contains_
  commentId: Overload:Yoakke.Collections.Intervals.Interval`1.Contains
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.Interval<T>.Contains
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Contains
  nameWithType: Interval<T>.Contains
  nameWithType.vb: Interval(Of T).Contains
- uid: Yoakke.Collections.Intervals.Interval`1.Empty
  name: Empty
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_Empty
  commentId: P:Yoakke.Collections.Intervals.Interval`1.Empty
  fullName: Yoakke.Collections.Intervals.Interval<T>.Empty
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Empty
  nameWithType: Interval<T>.Empty
  nameWithType.vb: Interval(Of T).Empty
- uid: Yoakke.Collections.Intervals.Interval`1.Empty*
  name: Empty
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_Empty_
  commentId: Overload:Yoakke.Collections.Intervals.Interval`1.Empty
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.Interval<T>.Empty
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Empty
  nameWithType: Interval<T>.Empty
  nameWithType.vb: Interval(Of T).Empty
- uid: Yoakke.Collections.Intervals.Interval`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_Equals_System_Object_
  commentId: M:Yoakke.Collections.Intervals.Interval`1.Equals(System.Object)
  fullName: Yoakke.Collections.Intervals.Interval<T>.Equals(System.Object)
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Equals(System.Object)
  nameWithType: Interval<T>.Equals(Object)
  nameWithType.vb: Interval(Of T).Equals(Object)
- uid: Yoakke.Collections.Intervals.Interval`1.Equals(Yoakke.Collections.Intervals.Interval{`0})
  name: Equals(Interval<T>)
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_Equals_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Intervals.Interval`1.Equals(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: Equals(Interval(Of T))
  fullName: Yoakke.Collections.Intervals.Interval<T>.Equals(Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Equals(Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: Interval<T>.Equals(Interval<T>)
  nameWithType.vb: Interval(Of T).Equals(Interval(Of T))
- uid: Yoakke.Collections.Intervals.Interval`1.Equals*
  name: Equals
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_Equals_
  commentId: Overload:Yoakke.Collections.Intervals.Interval`1.Equals
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.Interval<T>.Equals
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Equals
  nameWithType: Interval<T>.Equals
  nameWithType.vb: Interval(Of T).Equals
- uid: Yoakke.Collections.Intervals.Interval`1.Full
  name: Full
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_Full
  commentId: P:Yoakke.Collections.Intervals.Interval`1.Full
  fullName: Yoakke.Collections.Intervals.Interval<T>.Full
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Full
  nameWithType: Interval<T>.Full
  nameWithType.vb: Interval(Of T).Full
- uid: Yoakke.Collections.Intervals.Interval`1.Full*
  name: Full
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_Full_
  commentId: Overload:Yoakke.Collections.Intervals.Interval`1.Full
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.Interval<T>.Full
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Full
  nameWithType: Interval<T>.Full
  nameWithType.vb: Interval(Of T).Full
- uid: Yoakke.Collections.Intervals.Interval`1.GetHashCode
  name: GetHashCode()
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_GetHashCode
  commentId: M:Yoakke.Collections.Intervals.Interval`1.GetHashCode
  fullName: Yoakke.Collections.Intervals.Interval<T>.GetHashCode()
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).GetHashCode()
  nameWithType: Interval<T>.GetHashCode()
  nameWithType.vb: Interval(Of T).GetHashCode()
- uid: Yoakke.Collections.Intervals.Interval`1.GetHashCode*
  name: GetHashCode
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_GetHashCode_
  commentId: Overload:Yoakke.Collections.Intervals.Interval`1.GetHashCode
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.Interval<T>.GetHashCode
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).GetHashCode
  nameWithType: Interval<T>.GetHashCode
  nameWithType.vb: Interval(Of T).GetHashCode
- uid: Yoakke.Collections.Intervals.Interval`1.Intersection(Yoakke.Collections.Intervals.Interval{`0})
  name: Intersection(Interval<T>)
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_Intersection_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Intervals.Interval`1.Intersection(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: Intersection(Interval(Of T))
  fullName: Yoakke.Collections.Intervals.Interval<T>.Intersection(Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Intersection(Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: Interval<T>.Intersection(Interval<T>)
  nameWithType.vb: Interval(Of T).Intersection(Interval(Of T))
- uid: Yoakke.Collections.Intervals.Interval`1.Intersection*
  name: Intersection
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_Intersection_
  commentId: Overload:Yoakke.Collections.Intervals.Interval`1.Intersection
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.Interval<T>.Intersection
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Intersection
  nameWithType: Interval<T>.Intersection
  nameWithType.vb: Interval(Of T).Intersection
- uid: Yoakke.Collections.Intervals.Interval`1.IsBefore(Yoakke.Collections.Intervals.Interval{`0})
  name: IsBefore(Interval<T>)
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_IsBefore_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Intervals.Interval`1.IsBefore(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: IsBefore(Interval(Of T))
  fullName: Yoakke.Collections.Intervals.Interval<T>.IsBefore(Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).IsBefore(Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: Interval<T>.IsBefore(Interval<T>)
  nameWithType.vb: Interval(Of T).IsBefore(Interval(Of T))
- uid: Yoakke.Collections.Intervals.Interval`1.IsBefore*
  name: IsBefore
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_IsBefore_
  commentId: Overload:Yoakke.Collections.Intervals.Interval`1.IsBefore
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.Interval<T>.IsBefore
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).IsBefore
  nameWithType: Interval<T>.IsBefore
  nameWithType.vb: Interval(Of T).IsBefore
- uid: Yoakke.Collections.Intervals.Interval`1.IsDisjunct(Yoakke.Collections.Intervals.Interval{`0})
  name: IsDisjunct(Interval<T>)
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_IsDisjunct_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Intervals.Interval`1.IsDisjunct(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: IsDisjunct(Interval(Of T))
  fullName: Yoakke.Collections.Intervals.Interval<T>.IsDisjunct(Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).IsDisjunct(Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: Interval<T>.IsDisjunct(Interval<T>)
  nameWithType.vb: Interval(Of T).IsDisjunct(Interval(Of T))
- uid: Yoakke.Collections.Intervals.Interval`1.IsDisjunct*
  name: IsDisjunct
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_IsDisjunct_
  commentId: Overload:Yoakke.Collections.Intervals.Interval`1.IsDisjunct
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.Interval<T>.IsDisjunct
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).IsDisjunct
  nameWithType: Interval<T>.IsDisjunct
  nameWithType.vb: Interval(Of T).IsDisjunct
- uid: Yoakke.Collections.Intervals.Interval`1.IsEmpty
  name: IsEmpty
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_IsEmpty
  commentId: P:Yoakke.Collections.Intervals.Interval`1.IsEmpty
  fullName: Yoakke.Collections.Intervals.Interval<T>.IsEmpty
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).IsEmpty
  nameWithType: Interval<T>.IsEmpty
  nameWithType.vb: Interval(Of T).IsEmpty
- uid: Yoakke.Collections.Intervals.Interval`1.IsEmpty*
  name: IsEmpty
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_IsEmpty_
  commentId: Overload:Yoakke.Collections.Intervals.Interval`1.IsEmpty
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.Interval<T>.IsEmpty
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).IsEmpty
  nameWithType: Interval<T>.IsEmpty
  nameWithType.vb: Interval(Of T).IsEmpty
- uid: Yoakke.Collections.Intervals.Interval`1.IsTouching(Yoakke.Collections.Intervals.Interval{`0})
  name: IsTouching(Interval<T>)
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_IsTouching_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Intervals.Interval`1.IsTouching(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: IsTouching(Interval(Of T))
  fullName: Yoakke.Collections.Intervals.Interval<T>.IsTouching(Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).IsTouching(Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: Interval<T>.IsTouching(Interval<T>)
  nameWithType.vb: Interval(Of T).IsTouching(Interval(Of T))
- uid: Yoakke.Collections.Intervals.Interval`1.IsTouching*
  name: IsTouching
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_IsTouching_
  commentId: Overload:Yoakke.Collections.Intervals.Interval`1.IsTouching
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.Interval<T>.IsTouching
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).IsTouching
  nameWithType: Interval<T>.IsTouching
  nameWithType.vb: Interval(Of T).IsTouching
- uid: Yoakke.Collections.Intervals.Interval`1.Lower
  name: Lower
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_Lower
  commentId: P:Yoakke.Collections.Intervals.Interval`1.Lower
  fullName: Yoakke.Collections.Intervals.Interval<T>.Lower
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Lower
  nameWithType: Interval<T>.Lower
  nameWithType.vb: Interval(Of T).Lower
- uid: Yoakke.Collections.Intervals.Interval`1.Lower*
  name: Lower
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_Lower_
  commentId: Overload:Yoakke.Collections.Intervals.Interval`1.Lower
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.Interval<T>.Lower
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Lower
  nameWithType: Interval<T>.Lower
  nameWithType.vb: Interval(Of T).Lower
- uid: Yoakke.Collections.Intervals.Interval`1.op_Equality(Yoakke.Collections.Intervals.Interval{`0},Yoakke.Collections.Intervals.Interval{`0})
  name: Equality(Interval<T>, Interval<T>)
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_op_Equality_Yoakke_Collections_Intervals_Interval__0__Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Intervals.Interval`1.op_Equality(Yoakke.Collections.Intervals.Interval{`0},Yoakke.Collections.Intervals.Interval{`0})
  name.vb: Equality(Interval(Of T), Interval(Of T))
  fullName: Yoakke.Collections.Intervals.Interval<T>.Equality(Yoakke.Collections.Intervals.Interval<T>, Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Equality(Yoakke.Collections.Intervals.Interval(Of T), Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: Interval<T>.Equality(Interval<T>, Interval<T>)
  nameWithType.vb: Interval(Of T).Equality(Interval(Of T), Interval(Of T))
- uid: Yoakke.Collections.Intervals.Interval`1.op_Equality*
  name: Equality
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_op_Equality_
  commentId: Overload:Yoakke.Collections.Intervals.Interval`1.op_Equality
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.Interval<T>.Equality
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Equality
  nameWithType: Interval<T>.Equality
  nameWithType.vb: Interval(Of T).Equality
- uid: Yoakke.Collections.Intervals.Interval`1.op_Implicit(`0)~Yoakke.Collections.Intervals.Interval{`0}
  name: Implicit(T to Interval<T>)
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_op_Implicit__0__Yoakke_Collections_Intervals_Interval__0_
  commentId: M:Yoakke.Collections.Intervals.Interval`1.op_Implicit(`0)~Yoakke.Collections.Intervals.Interval{`0}
  name.vb: Widening(T to Interval(Of T))
  fullName: Yoakke.Collections.Intervals.Interval<T>.Implicit(T to Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Widening(T to Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: Interval<T>.Implicit(T to Interval<T>)
  nameWithType.vb: Interval(Of T).Widening(T to Interval(Of T))
- uid: Yoakke.Collections.Intervals.Interval`1.op_Implicit*
  name: Implicit
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_op_Implicit_
  commentId: Overload:Yoakke.Collections.Intervals.Interval`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Yoakke.Collections.Intervals.Interval<T>.Implicit
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Widening
  nameWithType: Interval<T>.Implicit
  nameWithType.vb: Interval(Of T).Widening
- uid: Yoakke.Collections.Intervals.Interval`1.op_Inequality(Yoakke.Collections.Intervals.Interval{`0},Yoakke.Collections.Intervals.Interval{`0})
  name: Inequality(Interval<T>, Interval<T>)
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_op_Inequality_Yoakke_Collections_Intervals_Interval__0__Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Intervals.Interval`1.op_Inequality(Yoakke.Collections.Intervals.Interval{`0},Yoakke.Collections.Intervals.Interval{`0})
  name.vb: Inequality(Interval(Of T), Interval(Of T))
  fullName: Yoakke.Collections.Intervals.Interval<T>.Inequality(Yoakke.Collections.Intervals.Interval<T>, Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Inequality(Yoakke.Collections.Intervals.Interval(Of T), Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: Interval<T>.Inequality(Interval<T>, Interval<T>)
  nameWithType.vb: Interval(Of T).Inequality(Interval(Of T), Interval(Of T))
- uid: Yoakke.Collections.Intervals.Interval`1.op_Inequality*
  name: Inequality
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_op_Inequality_
  commentId: Overload:Yoakke.Collections.Intervals.Interval`1.op_Inequality
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.Interval<T>.Inequality
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Inequality
  nameWithType: Interval<T>.Inequality
  nameWithType.vb: Interval(Of T).Inequality
- uid: Yoakke.Collections.Intervals.Interval`1.Parse(ReadOnlySpan{System.Char},Yoakke.Collections.Intervals.Interval{`0}.ParseValueSpan)
  name: Parse(ReadOnlySpan<Char>, Interval<T>.ParseValueSpan)
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_Parse_ReadOnlySpan_System_Char__Yoakke_Collections_Intervals_Interval__0__ParseValueSpan_
  commentId: M:Yoakke.Collections.Intervals.Interval`1.Parse(ReadOnlySpan{System.Char},Yoakke.Collections.Intervals.Interval{`0}.ParseValueSpan)
  name.vb: Parse(ReadOnlySpan(Of Char), Interval(Of T).ParseValueSpan)
  fullName: Yoakke.Collections.Intervals.Interval<T>.Parse(ReadOnlySpan<System.Char>, Yoakke.Collections.Intervals.Interval<T>.ParseValueSpan)
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Parse(ReadOnlySpan(Of System.Char), Yoakke.Collections.Intervals.Interval(Of T).ParseValueSpan)
  nameWithType: Interval<T>.Parse(ReadOnlySpan<Char>, Interval<T>.ParseValueSpan)
  nameWithType.vb: Interval(Of T).Parse(ReadOnlySpan(Of Char), Interval(Of T).ParseValueSpan)
- uid: Yoakke.Collections.Intervals.Interval`1.Parse(System.String,Yoakke.Collections.Intervals.Interval{`0}.ParseValueString)
  name: Parse(String, Interval<T>.ParseValueString)
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_Parse_System_String_Yoakke_Collections_Intervals_Interval__0__ParseValueString_
  commentId: M:Yoakke.Collections.Intervals.Interval`1.Parse(System.String,Yoakke.Collections.Intervals.Interval{`0}.ParseValueString)
  name.vb: Parse(String, Interval(Of T).ParseValueString)
  fullName: Yoakke.Collections.Intervals.Interval<T>.Parse(System.String, Yoakke.Collections.Intervals.Interval<T>.ParseValueString)
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Parse(System.String, Yoakke.Collections.Intervals.Interval(Of T).ParseValueString)
  nameWithType: Interval<T>.Parse(String, Interval<T>.ParseValueString)
  nameWithType.vb: Interval(Of T).Parse(String, Interval(Of T).ParseValueString)
- uid: Yoakke.Collections.Intervals.Interval`1.Parse*
  name: Parse
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_Parse_
  commentId: Overload:Yoakke.Collections.Intervals.Interval`1.Parse
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.Interval<T>.Parse
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Parse
  nameWithType: Interval<T>.Parse
  nameWithType.vb: Interval(Of T).Parse
- uid: Yoakke.Collections.Intervals.Interval`1.ParseValueSpan
  name: Interval<T>.ParseValueSpan
  href: api/Yoakke.Collections.Intervals.Interval-1.ParseValueSpan.html
  commentId: T:Yoakke.Collections.Intervals.Interval`1.ParseValueSpan
  name.vb: Interval(Of T).ParseValueSpan
  fullName: Yoakke.Collections.Intervals.Interval<T>.ParseValueSpan
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).ParseValueSpan
  nameWithType: Interval<T>.ParseValueSpan
  nameWithType.vb: Interval(Of T).ParseValueSpan
- uid: Yoakke.Collections.Intervals.Interval`1.ParseValueString
  name: Interval<T>.ParseValueString
  href: api/Yoakke.Collections.Intervals.Interval-1.ParseValueString.html
  commentId: T:Yoakke.Collections.Intervals.Interval`1.ParseValueString
  name.vb: Interval(Of T).ParseValueString
  fullName: Yoakke.Collections.Intervals.Interval<T>.ParseValueString
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).ParseValueString
  nameWithType: Interval<T>.ParseValueString
  nameWithType.vb: Interval(Of T).ParseValueString
- uid: Yoakke.Collections.Intervals.Interval`1.RelationTo(Yoakke.Collections.Intervals.Interval{`0})
  name: RelationTo(Interval<T>)
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_RelationTo_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Intervals.Interval`1.RelationTo(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: RelationTo(Interval(Of T))
  fullName: Yoakke.Collections.Intervals.Interval<T>.RelationTo(Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).RelationTo(Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: Interval<T>.RelationTo(Interval<T>)
  nameWithType.vb: Interval(Of T).RelationTo(Interval(Of T))
- uid: Yoakke.Collections.Intervals.Interval`1.RelationTo*
  name: RelationTo
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_RelationTo_
  commentId: Overload:Yoakke.Collections.Intervals.Interval`1.RelationTo
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.Interval<T>.RelationTo
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).RelationTo
  nameWithType: Interval<T>.RelationTo
  nameWithType.vb: Interval(Of T).RelationTo
- uid: Yoakke.Collections.Intervals.Interval`1.Singleton(`0)
  name: Singleton(T)
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_Singleton__0_
  commentId: M:Yoakke.Collections.Intervals.Interval`1.Singleton(`0)
  fullName: Yoakke.Collections.Intervals.Interval<T>.Singleton(T)
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Singleton(T)
  nameWithType: Interval<T>.Singleton(T)
  nameWithType.vb: Interval(Of T).Singleton(T)
- uid: Yoakke.Collections.Intervals.Interval`1.Singleton*
  name: Singleton
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_Singleton_
  commentId: Overload:Yoakke.Collections.Intervals.Interval`1.Singleton
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.Interval<T>.Singleton
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Singleton
  nameWithType: Interval<T>.Singleton
  nameWithType.vb: Interval(Of T).Singleton
- uid: Yoakke.Collections.Intervals.Interval`1.ToString
  name: ToString()
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_ToString
  commentId: M:Yoakke.Collections.Intervals.Interval`1.ToString
  fullName: Yoakke.Collections.Intervals.Interval<T>.ToString()
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).ToString()
  nameWithType: Interval<T>.ToString()
  nameWithType.vb: Interval(Of T).ToString()
- uid: Yoakke.Collections.Intervals.Interval`1.ToString*
  name: ToString
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_ToString_
  commentId: Overload:Yoakke.Collections.Intervals.Interval`1.ToString
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.Interval<T>.ToString
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).ToString
  nameWithType: Interval<T>.ToString
  nameWithType.vb: Interval(Of T).ToString
- uid: Yoakke.Collections.Intervals.Interval`1.TryParse(ReadOnlySpan{System.Char},Yoakke.Collections.Intervals.Interval{`0}.TryParseValueSpan,Yoakke.Collections.Intervals.Interval{`0}@)
  name: TryParse(ReadOnlySpan<Char>, Interval<T>.TryParseValueSpan, out Interval<T>)
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_TryParse_ReadOnlySpan_System_Char__Yoakke_Collections_Intervals_Interval__0__TryParseValueSpan_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Intervals.Interval`1.TryParse(ReadOnlySpan{System.Char},Yoakke.Collections.Intervals.Interval{`0}.TryParseValueSpan,Yoakke.Collections.Intervals.Interval{`0}@)
  name.vb: TryParse(ReadOnlySpan(Of Char), Interval(Of T).TryParseValueSpan, ByRef Interval(Of T))
  fullName: Yoakke.Collections.Intervals.Interval<T>.TryParse(ReadOnlySpan<System.Char>, Yoakke.Collections.Intervals.Interval<T>.TryParseValueSpan, out Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).TryParse(ReadOnlySpan(Of System.Char), Yoakke.Collections.Intervals.Interval(Of T).TryParseValueSpan, ByRef Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: Interval<T>.TryParse(ReadOnlySpan<Char>, Interval<T>.TryParseValueSpan, out Interval<T>)
  nameWithType.vb: Interval(Of T).TryParse(ReadOnlySpan(Of Char), Interval(Of T).TryParseValueSpan, ByRef Interval(Of T))
- uid: Yoakke.Collections.Intervals.Interval`1.TryParse(System.String,Yoakke.Collections.Intervals.Interval{`0}.TryParseValueString,Yoakke.Collections.Intervals.Interval{`0}@)
  name: TryParse(String, Interval<T>.TryParseValueString, out Interval<T>)
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_TryParse_System_String_Yoakke_Collections_Intervals_Interval__0__TryParseValueString_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Intervals.Interval`1.TryParse(System.String,Yoakke.Collections.Intervals.Interval{`0}.TryParseValueString,Yoakke.Collections.Intervals.Interval{`0}@)
  name.vb: TryParse(String, Interval(Of T).TryParseValueString, ByRef Interval(Of T))
  fullName: Yoakke.Collections.Intervals.Interval<T>.TryParse(System.String, Yoakke.Collections.Intervals.Interval<T>.TryParseValueString, out Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).TryParse(System.String, Yoakke.Collections.Intervals.Interval(Of T).TryParseValueString, ByRef Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: Interval<T>.TryParse(String, Interval<T>.TryParseValueString, out Interval<T>)
  nameWithType.vb: Interval(Of T).TryParse(String, Interval(Of T).TryParseValueString, ByRef Interval(Of T))
- uid: Yoakke.Collections.Intervals.Interval`1.TryParse*
  name: TryParse
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_TryParse_
  commentId: Overload:Yoakke.Collections.Intervals.Interval`1.TryParse
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.Interval<T>.TryParse
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).TryParse
  nameWithType: Interval<T>.TryParse
  nameWithType.vb: Interval(Of T).TryParse
- uid: Yoakke.Collections.Intervals.Interval`1.TryParseValueSpan
  name: Interval<T>.TryParseValueSpan
  href: api/Yoakke.Collections.Intervals.Interval-1.TryParseValueSpan.html
  commentId: T:Yoakke.Collections.Intervals.Interval`1.TryParseValueSpan
  name.vb: Interval(Of T).TryParseValueSpan
  fullName: Yoakke.Collections.Intervals.Interval<T>.TryParseValueSpan
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).TryParseValueSpan
  nameWithType: Interval<T>.TryParseValueSpan
  nameWithType.vb: Interval(Of T).TryParseValueSpan
- uid: Yoakke.Collections.Intervals.Interval`1.TryParseValueString
  name: Interval<T>.TryParseValueString
  href: api/Yoakke.Collections.Intervals.Interval-1.TryParseValueString.html
  commentId: T:Yoakke.Collections.Intervals.Interval`1.TryParseValueString
  name.vb: Interval(Of T).TryParseValueString
  fullName: Yoakke.Collections.Intervals.Interval<T>.TryParseValueString
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).TryParseValueString
  nameWithType: Interval<T>.TryParseValueString
  nameWithType.vb: Interval(Of T).TryParseValueString
- uid: Yoakke.Collections.Intervals.Interval`1.Upper
  name: Upper
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_Upper
  commentId: P:Yoakke.Collections.Intervals.Interval`1.Upper
  fullName: Yoakke.Collections.Intervals.Interval<T>.Upper
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Upper
  nameWithType: Interval<T>.Upper
  nameWithType.vb: Interval(Of T).Upper
- uid: Yoakke.Collections.Intervals.Interval`1.Upper*
  name: Upper
  href: api/Yoakke.Collections.Intervals.Interval-1.html#Yoakke_Collections_Intervals_Interval_1_Upper_
  commentId: Overload:Yoakke.Collections.Intervals.Interval`1.Upper
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.Interval<T>.Upper
  fullName.vb: Yoakke.Collections.Intervals.Interval(Of T).Upper
  nameWithType: Interval<T>.Upper
  nameWithType.vb: Interval(Of T).Upper
- uid: Yoakke.Collections.Intervals.IntervalComparer`1
  name: IntervalComparer<T>
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html
  commentId: T:Yoakke.Collections.Intervals.IntervalComparer`1
  name.vb: IntervalComparer(Of T)
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T)
  nameWithType: IntervalComparer<T>
  nameWithType.vb: IntervalComparer(Of T)
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.#ctor(IEqualityComparer{`0},IComparer{`0})
  name: IntervalComparer(IEqualityComparer<T>, IComparer<T>)
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1__ctor_IEqualityComparer__0__IComparer__0__
  commentId: M:Yoakke.Collections.Intervals.IntervalComparer`1.#ctor(IEqualityComparer{`0},IComparer{`0})
  name.vb: IntervalComparer(IEqualityComparer(Of T), IComparer(Of T))
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.IntervalComparer(IEqualityComparer<T>, IComparer<T>)
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).IntervalComparer(IEqualityComparer(Of T), IComparer(Of T))
  nameWithType: IntervalComparer<T>.IntervalComparer(IEqualityComparer<T>, IComparer<T>)
  nameWithType.vb: IntervalComparer(Of T).IntervalComparer(IEqualityComparer(Of T), IComparer(Of T))
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.#ctor(Yoakke.Collections.Intervals.BoundComparer{`0})
  name: IntervalComparer(BoundComparer<T>)
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1__ctor_Yoakke_Collections_Intervals_BoundComparer__0__
  commentId: M:Yoakke.Collections.Intervals.IntervalComparer`1.#ctor(Yoakke.Collections.Intervals.BoundComparer{`0})
  name.vb: IntervalComparer(BoundComparer(Of T))
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.IntervalComparer(Yoakke.Collections.Intervals.BoundComparer<T>)
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).IntervalComparer(Yoakke.Collections.Intervals.BoundComparer(Of T))
  nameWithType: IntervalComparer<T>.IntervalComparer(BoundComparer<T>)
  nameWithType.vb: IntervalComparer(Of T).IntervalComparer(BoundComparer(Of T))
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.#ctor*
  name: IntervalComparer
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1__ctor_
  commentId: Overload:Yoakke.Collections.Intervals.IntervalComparer`1.#ctor
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.IntervalComparer
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).IntervalComparer
  nameWithType: IntervalComparer<T>.IntervalComparer
  nameWithType.vb: IntervalComparer(Of T).IntervalComparer
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.AreTouching(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name: AreTouching(IEnumerable<Interval<T>>)
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_AreTouching_IEnumerable_Yoakke_Collections_Intervals_Interval__0___
  commentId: M:Yoakke.Collections.Intervals.IntervalComparer`1.AreTouching(IEnumerable{Yoakke.Collections.Intervals.Interval{`0}})
  name.vb: AreTouching(IEnumerable(Of Interval(Of T)))
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.AreTouching(IEnumerable<Yoakke.Collections.Intervals.Interval<T>>)
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).AreTouching(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of T)))
  nameWithType: IntervalComparer<T>.AreTouching(IEnumerable<Interval<T>>)
  nameWithType.vb: IntervalComparer(Of T).AreTouching(IEnumerable(Of Interval(Of T)))
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.AreTouching*
  name: AreTouching
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_AreTouching_
  commentId: Overload:Yoakke.Collections.Intervals.IntervalComparer`1.AreTouching
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.AreTouching
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).AreTouching
  nameWithType: IntervalComparer<T>.AreTouching
  nameWithType.vb: IntervalComparer(Of T).AreTouching
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.BoundComparer
  name: BoundComparer
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_BoundComparer
  commentId: P:Yoakke.Collections.Intervals.IntervalComparer`1.BoundComparer
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.BoundComparer
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).BoundComparer
  nameWithType: IntervalComparer<T>.BoundComparer
  nameWithType.vb: IntervalComparer(Of T).BoundComparer
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.BoundComparer*
  name: BoundComparer
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_BoundComparer_
  commentId: Overload:Yoakke.Collections.Intervals.IntervalComparer`1.BoundComparer
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.BoundComparer
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).BoundComparer
  nameWithType: IntervalComparer<T>.BoundComparer
  nameWithType.vb: IntervalComparer(Of T).BoundComparer
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.Contains(Yoakke.Collections.Intervals.Interval{`0},`0)
  name: Contains(Interval<T>, T)
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_Contains_Yoakke_Collections_Intervals_Interval__0___0_
  commentId: M:Yoakke.Collections.Intervals.IntervalComparer`1.Contains(Yoakke.Collections.Intervals.Interval{`0},`0)
  name.vb: Contains(Interval(Of T), T)
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.Contains(Yoakke.Collections.Intervals.Interval<T>, T)
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).Contains(Yoakke.Collections.Intervals.Interval(Of T), T)
  nameWithType: IntervalComparer<T>.Contains(Interval<T>, T)
  nameWithType.vb: IntervalComparer(Of T).Contains(Interval(Of T), T)
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.Contains(Yoakke.Collections.Intervals.Interval{`0},Yoakke.Collections.Intervals.Interval{`0})
  name: Contains(Interval<T>, Interval<T>)
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_Contains_Yoakke_Collections_Intervals_Interval__0__Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Intervals.IntervalComparer`1.Contains(Yoakke.Collections.Intervals.Interval{`0},Yoakke.Collections.Intervals.Interval{`0})
  name.vb: Contains(Interval(Of T), Interval(Of T))
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.Contains(Yoakke.Collections.Intervals.Interval<T>, Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).Contains(Yoakke.Collections.Intervals.Interval(Of T), Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: IntervalComparer<T>.Contains(Interval<T>, Interval<T>)
  nameWithType.vb: IntervalComparer(Of T).Contains(Interval(Of T), Interval(Of T))
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.Contains*
  name: Contains
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_Contains_
  commentId: Overload:Yoakke.Collections.Intervals.IntervalComparer`1.Contains
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.Contains
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).Contains
  nameWithType: IntervalComparer<T>.Contains
  nameWithType.vb: IntervalComparer(Of T).Contains
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.Default
  name: Default
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_Default
  commentId: P:Yoakke.Collections.Intervals.IntervalComparer`1.Default
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.Default
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).Default
  nameWithType: IntervalComparer<T>.Default
  nameWithType.vb: IntervalComparer(Of T).Default
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.Default*
  name: Default
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_Default_
  commentId: Overload:Yoakke.Collections.Intervals.IntervalComparer`1.Default
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.Default
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).Default
  nameWithType: IntervalComparer<T>.Default
  nameWithType.vb: IntervalComparer(Of T).Default
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.Equals(Yoakke.Collections.Intervals.Interval{`0},Yoakke.Collections.Intervals.Interval{`0})
  name: Equals(Interval<T>, Interval<T>)
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_Equals_Yoakke_Collections_Intervals_Interval__0__Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Intervals.IntervalComparer`1.Equals(Yoakke.Collections.Intervals.Interval{`0},Yoakke.Collections.Intervals.Interval{`0})
  name.vb: Equals(Interval(Of T), Interval(Of T))
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.Equals(Yoakke.Collections.Intervals.Interval<T>, Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).Equals(Yoakke.Collections.Intervals.Interval(Of T), Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: IntervalComparer<T>.Equals(Interval<T>, Interval<T>)
  nameWithType.vb: IntervalComparer(Of T).Equals(Interval(Of T), Interval(Of T))
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.Equals*
  name: Equals
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_Equals_
  commentId: Overload:Yoakke.Collections.Intervals.IntervalComparer`1.Equals
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.Equals
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).Equals
  nameWithType: IntervalComparer<T>.Equals
  nameWithType.vb: IntervalComparer(Of T).Equals
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.GetHashCode(Yoakke.Collections.Intervals.Interval{`0})
  name: GetHashCode(Interval<T>)
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_GetHashCode_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Intervals.IntervalComparer`1.GetHashCode(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: GetHashCode(Interval(Of T))
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.GetHashCode(Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).GetHashCode(Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: IntervalComparer<T>.GetHashCode(Interval<T>)
  nameWithType.vb: IntervalComparer(Of T).GetHashCode(Interval(Of T))
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.GetHashCode*
  name: GetHashCode
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_GetHashCode_
  commentId: Overload:Yoakke.Collections.Intervals.IntervalComparer`1.GetHashCode
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.GetHashCode
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).GetHashCode
  nameWithType: IntervalComparer<T>.GetHashCode
  nameWithType.vb: IntervalComparer(Of T).GetHashCode
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.Intersection(Yoakke.Collections.Intervals.Interval{`0},Yoakke.Collections.Intervals.Interval{`0})
  name: Intersection(Interval<T>, Interval<T>)
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_Intersection_Yoakke_Collections_Intervals_Interval__0__Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Intervals.IntervalComparer`1.Intersection(Yoakke.Collections.Intervals.Interval{`0},Yoakke.Collections.Intervals.Interval{`0})
  name.vb: Intersection(Interval(Of T), Interval(Of T))
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.Intersection(Yoakke.Collections.Intervals.Interval<T>, Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).Intersection(Yoakke.Collections.Intervals.Interval(Of T), Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: IntervalComparer<T>.Intersection(Interval<T>, Interval<T>)
  nameWithType.vb: IntervalComparer(Of T).Intersection(Interval(Of T), Interval(Of T))
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.Intersection*
  name: Intersection
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_Intersection_
  commentId: Overload:Yoakke.Collections.Intervals.IntervalComparer`1.Intersection
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.Intersection
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).Intersection
  nameWithType: IntervalComparer<T>.Intersection
  nameWithType.vb: IntervalComparer(Of T).Intersection
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.IsBefore(Yoakke.Collections.Intervals.Interval{`0},Yoakke.Collections.Intervals.Interval{`0})
  name: IsBefore(Interval<T>, Interval<T>)
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_IsBefore_Yoakke_Collections_Intervals_Interval__0__Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Intervals.IntervalComparer`1.IsBefore(Yoakke.Collections.Intervals.Interval{`0},Yoakke.Collections.Intervals.Interval{`0})
  name.vb: IsBefore(Interval(Of T), Interval(Of T))
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.IsBefore(Yoakke.Collections.Intervals.Interval<T>, Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).IsBefore(Yoakke.Collections.Intervals.Interval(Of T), Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: IntervalComparer<T>.IsBefore(Interval<T>, Interval<T>)
  nameWithType.vb: IntervalComparer(Of T).IsBefore(Interval(Of T), Interval(Of T))
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.IsBefore*
  name: IsBefore
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_IsBefore_
  commentId: Overload:Yoakke.Collections.Intervals.IntervalComparer`1.IsBefore
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.IsBefore
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).IsBefore
  nameWithType: IntervalComparer<T>.IsBefore
  nameWithType.vb: IntervalComparer(Of T).IsBefore
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.IsDisjunct(Yoakke.Collections.Intervals.Interval{`0},Yoakke.Collections.Intervals.Interval{`0})
  name: IsDisjunct(Interval<T>, Interval<T>)
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_IsDisjunct_Yoakke_Collections_Intervals_Interval__0__Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Intervals.IntervalComparer`1.IsDisjunct(Yoakke.Collections.Intervals.Interval{`0},Yoakke.Collections.Intervals.Interval{`0})
  name.vb: IsDisjunct(Interval(Of T), Interval(Of T))
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.IsDisjunct(Yoakke.Collections.Intervals.Interval<T>, Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).IsDisjunct(Yoakke.Collections.Intervals.Interval(Of T), Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: IntervalComparer<T>.IsDisjunct(Interval<T>, Interval<T>)
  nameWithType.vb: IntervalComparer(Of T).IsDisjunct(Interval(Of T), Interval(Of T))
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.IsDisjunct*
  name: IsDisjunct
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_IsDisjunct_
  commentId: Overload:Yoakke.Collections.Intervals.IntervalComparer`1.IsDisjunct
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.IsDisjunct
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).IsDisjunct
  nameWithType: IntervalComparer<T>.IsDisjunct
  nameWithType.vb: IntervalComparer(Of T).IsDisjunct
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.IsEmpty(Yoakke.Collections.Intervals.Interval{`0})
  name: IsEmpty(Interval<T>)
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_IsEmpty_Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Intervals.IntervalComparer`1.IsEmpty(Yoakke.Collections.Intervals.Interval{`0})
  name.vb: IsEmpty(Interval(Of T))
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.IsEmpty(Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).IsEmpty(Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: IntervalComparer<T>.IsEmpty(Interval<T>)
  nameWithType.vb: IntervalComparer(Of T).IsEmpty(Interval(Of T))
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.IsEmpty*
  name: IsEmpty
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_IsEmpty_
  commentId: Overload:Yoakke.Collections.Intervals.IntervalComparer`1.IsEmpty
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.IsEmpty
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).IsEmpty
  nameWithType: IntervalComparer<T>.IsEmpty
  nameWithType.vb: IntervalComparer(Of T).IsEmpty
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.IsTouching(Yoakke.Collections.Intervals.Interval{`0},Yoakke.Collections.Intervals.Interval{`0})
  name: IsTouching(Interval<T>, Interval<T>)
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_IsTouching_Yoakke_Collections_Intervals_Interval__0__Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Intervals.IntervalComparer`1.IsTouching(Yoakke.Collections.Intervals.Interval{`0},Yoakke.Collections.Intervals.Interval{`0})
  name.vb: IsTouching(Interval(Of T), Interval(Of T))
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.IsTouching(Yoakke.Collections.Intervals.Interval<T>, Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).IsTouching(Yoakke.Collections.Intervals.Interval(Of T), Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: IntervalComparer<T>.IsTouching(Interval<T>, Interval<T>)
  nameWithType.vb: IntervalComparer(Of T).IsTouching(Interval(Of T), Interval(Of T))
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.IsTouching*
  name: IsTouching
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_IsTouching_
  commentId: Overload:Yoakke.Collections.Intervals.IntervalComparer`1.IsTouching
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.IsTouching
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).IsTouching
  nameWithType: IntervalComparer<T>.IsTouching
  nameWithType.vb: IntervalComparer(Of T).IsTouching
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.Relation(Yoakke.Collections.Intervals.Interval{`0},Yoakke.Collections.Intervals.Interval{`0})
  name: Relation(Interval<T>, Interval<T>)
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_Relation_Yoakke_Collections_Intervals_Interval__0__Yoakke_Collections_Intervals_Interval__0__
  commentId: M:Yoakke.Collections.Intervals.IntervalComparer`1.Relation(Yoakke.Collections.Intervals.Interval{`0},Yoakke.Collections.Intervals.Interval{`0})
  name.vb: Relation(Interval(Of T), Interval(Of T))
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.Relation(Yoakke.Collections.Intervals.Interval<T>, Yoakke.Collections.Intervals.Interval<T>)
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).Relation(Yoakke.Collections.Intervals.Interval(Of T), Yoakke.Collections.Intervals.Interval(Of T))
  nameWithType: IntervalComparer<T>.Relation(Interval<T>, Interval<T>)
  nameWithType.vb: IntervalComparer(Of T).Relation(Interval(Of T), Interval(Of T))
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.Relation*
  name: Relation
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_Relation_
  commentId: Overload:Yoakke.Collections.Intervals.IntervalComparer`1.Relation
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.Relation
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).Relation
  nameWithType: IntervalComparer<T>.Relation
  nameWithType.vb: IntervalComparer(Of T).Relation
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.ValueComparer
  name: ValueComparer
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_ValueComparer
  commentId: P:Yoakke.Collections.Intervals.IntervalComparer`1.ValueComparer
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.ValueComparer
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).ValueComparer
  nameWithType: IntervalComparer<T>.ValueComparer
  nameWithType.vb: IntervalComparer(Of T).ValueComparer
- uid: Yoakke.Collections.Intervals.IntervalComparer`1.ValueComparer*
  name: ValueComparer
  href: api/Yoakke.Collections.Intervals.IntervalComparer-1.html#Yoakke_Collections_Intervals_IntervalComparer_1_ValueComparer_
  commentId: Overload:Yoakke.Collections.Intervals.IntervalComparer`1.ValueComparer
  isSpec: "True"
  fullName: Yoakke.Collections.Intervals.IntervalComparer<T>.ValueComparer
  fullName.vb: Yoakke.Collections.Intervals.IntervalComparer(Of T).ValueComparer
  nameWithType: IntervalComparer<T>.ValueComparer
  nameWithType.vb: IntervalComparer(Of T).ValueComparer
- uid: Yoakke.Collections.RingBuffer`1
  name: RingBuffer<T>
  href: api/Yoakke.Collections.RingBuffer-1.html
  commentId: T:Yoakke.Collections.RingBuffer`1
  name.vb: RingBuffer(Of T)
  fullName: Yoakke.Collections.RingBuffer<T>
  fullName.vb: Yoakke.Collections.RingBuffer(Of T)
  nameWithType: RingBuffer<T>
  nameWithType.vb: RingBuffer(Of T)
- uid: Yoakke.Collections.RingBuffer`1.#ctor
  name: RingBuffer()
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1__ctor
  commentId: M:Yoakke.Collections.RingBuffer`1.#ctor
  fullName: Yoakke.Collections.RingBuffer<T>.RingBuffer()
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).RingBuffer()
  nameWithType: RingBuffer<T>.RingBuffer()
  nameWithType.vb: RingBuffer(Of T).RingBuffer()
- uid: Yoakke.Collections.RingBuffer`1.#ctor(System.Int32)
  name: RingBuffer(Int32)
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1__ctor_System_Int32_
  commentId: M:Yoakke.Collections.RingBuffer`1.#ctor(System.Int32)
  fullName: Yoakke.Collections.RingBuffer<T>.RingBuffer(System.Int32)
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).RingBuffer(System.Int32)
  nameWithType: RingBuffer<T>.RingBuffer(Int32)
  nameWithType.vb: RingBuffer(Of T).RingBuffer(Int32)
- uid: Yoakke.Collections.RingBuffer`1.#ctor*
  name: RingBuffer
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1__ctor_
  commentId: Overload:Yoakke.Collections.RingBuffer`1.#ctor
  isSpec: "True"
  fullName: Yoakke.Collections.RingBuffer<T>.RingBuffer
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).RingBuffer
  nameWithType: RingBuffer<T>.RingBuffer
  nameWithType.vb: RingBuffer(Of T).RingBuffer
- uid: Yoakke.Collections.RingBuffer`1.Add(`0)
  name: Add(T)
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_Add__0_
  commentId: M:Yoakke.Collections.RingBuffer`1.Add(`0)
  fullName: Yoakke.Collections.RingBuffer<T>.Add(T)
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).Add(T)
  nameWithType: RingBuffer<T>.Add(T)
  nameWithType.vb: RingBuffer(Of T).Add(T)
- uid: Yoakke.Collections.RingBuffer`1.Add*
  name: Add
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_Add_
  commentId: Overload:Yoakke.Collections.RingBuffer`1.Add
  isSpec: "True"
  fullName: Yoakke.Collections.RingBuffer<T>.Add
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).Add
  nameWithType: RingBuffer<T>.Add
  nameWithType.vb: RingBuffer(Of T).Add
- uid: Yoakke.Collections.RingBuffer`1.AddBack(`0)
  name: AddBack(T)
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_AddBack__0_
  commentId: M:Yoakke.Collections.RingBuffer`1.AddBack(`0)
  fullName: Yoakke.Collections.RingBuffer<T>.AddBack(T)
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).AddBack(T)
  nameWithType: RingBuffer<T>.AddBack(T)
  nameWithType.vb: RingBuffer(Of T).AddBack(T)
- uid: Yoakke.Collections.RingBuffer`1.AddBack*
  name: AddBack
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_AddBack_
  commentId: Overload:Yoakke.Collections.RingBuffer`1.AddBack
  isSpec: "True"
  fullName: Yoakke.Collections.RingBuffer<T>.AddBack
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).AddBack
  nameWithType: RingBuffer<T>.AddBack
  nameWithType.vb: RingBuffer(Of T).AddBack
- uid: Yoakke.Collections.RingBuffer`1.AddFront(`0)
  name: AddFront(T)
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_AddFront__0_
  commentId: M:Yoakke.Collections.RingBuffer`1.AddFront(`0)
  fullName: Yoakke.Collections.RingBuffer<T>.AddFront(T)
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).AddFront(T)
  nameWithType: RingBuffer<T>.AddFront(T)
  nameWithType.vb: RingBuffer(Of T).AddFront(T)
- uid: Yoakke.Collections.RingBuffer`1.AddFront*
  name: AddFront
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_AddFront_
  commentId: Overload:Yoakke.Collections.RingBuffer`1.AddFront
  isSpec: "True"
  fullName: Yoakke.Collections.RingBuffer<T>.AddFront
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).AddFront
  nameWithType: RingBuffer<T>.AddFront
  nameWithType.vb: RingBuffer(Of T).AddFront
- uid: Yoakke.Collections.RingBuffer`1.Capacity
  name: Capacity
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_Capacity
  commentId: P:Yoakke.Collections.RingBuffer`1.Capacity
  fullName: Yoakke.Collections.RingBuffer<T>.Capacity
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).Capacity
  nameWithType: RingBuffer<T>.Capacity
  nameWithType.vb: RingBuffer(Of T).Capacity
- uid: Yoakke.Collections.RingBuffer`1.Capacity*
  name: Capacity
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_Capacity_
  commentId: Overload:Yoakke.Collections.RingBuffer`1.Capacity
  isSpec: "True"
  fullName: Yoakke.Collections.RingBuffer<T>.Capacity
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).Capacity
  nameWithType: RingBuffer<T>.Capacity
  nameWithType.vb: RingBuffer(Of T).Capacity
- uid: Yoakke.Collections.RingBuffer`1.Clear
  name: Clear()
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_Clear
  commentId: M:Yoakke.Collections.RingBuffer`1.Clear
  fullName: Yoakke.Collections.RingBuffer<T>.Clear()
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).Clear()
  nameWithType: RingBuffer<T>.Clear()
  nameWithType.vb: RingBuffer(Of T).Clear()
- uid: Yoakke.Collections.RingBuffer`1.Clear*
  name: Clear
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_Clear_
  commentId: Overload:Yoakke.Collections.RingBuffer`1.Clear
  isSpec: "True"
  fullName: Yoakke.Collections.RingBuffer<T>.Clear
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).Clear
  nameWithType: RingBuffer<T>.Clear
  nameWithType.vb: RingBuffer(Of T).Clear
- uid: Yoakke.Collections.RingBuffer`1.Contains(`0)
  name: Contains(T)
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_Contains__0_
  commentId: M:Yoakke.Collections.RingBuffer`1.Contains(`0)
  fullName: Yoakke.Collections.RingBuffer<T>.Contains(T)
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).Contains(T)
  nameWithType: RingBuffer<T>.Contains(T)
  nameWithType.vb: RingBuffer(Of T).Contains(T)
- uid: Yoakke.Collections.RingBuffer`1.Contains*
  name: Contains
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_Contains_
  commentId: Overload:Yoakke.Collections.RingBuffer`1.Contains
  isSpec: "True"
  fullName: Yoakke.Collections.RingBuffer<T>.Contains
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).Contains
  nameWithType: RingBuffer<T>.Contains
  nameWithType.vb: RingBuffer(Of T).Contains
- uid: Yoakke.Collections.RingBuffer`1.CopyTo(`0[],System.Int32)
  name: CopyTo(T[], Int32)
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_CopyTo__0___System_Int32_
  commentId: M:Yoakke.Collections.RingBuffer`1.CopyTo(`0[],System.Int32)
  name.vb: CopyTo(T(), Int32)
  fullName: Yoakke.Collections.RingBuffer<T>.CopyTo(T[], System.Int32)
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).CopyTo(T(), System.Int32)
  nameWithType: RingBuffer<T>.CopyTo(T[], Int32)
  nameWithType.vb: RingBuffer(Of T).CopyTo(T(), Int32)
- uid: Yoakke.Collections.RingBuffer`1.CopyTo*
  name: CopyTo
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_CopyTo_
  commentId: Overload:Yoakke.Collections.RingBuffer`1.CopyTo
  isSpec: "True"
  fullName: Yoakke.Collections.RingBuffer<T>.CopyTo
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).CopyTo
  nameWithType: RingBuffer<T>.CopyTo
  nameWithType.vb: RingBuffer(Of T).CopyTo
- uid: Yoakke.Collections.RingBuffer`1.Count
  name: Count
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_Count
  commentId: P:Yoakke.Collections.RingBuffer`1.Count
  fullName: Yoakke.Collections.RingBuffer<T>.Count
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).Count
  nameWithType: RingBuffer<T>.Count
  nameWithType.vb: RingBuffer(Of T).Count
- uid: Yoakke.Collections.RingBuffer`1.Count*
  name: Count
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_Count_
  commentId: Overload:Yoakke.Collections.RingBuffer`1.Count
  isSpec: "True"
  fullName: Yoakke.Collections.RingBuffer<T>.Count
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).Count
  nameWithType: RingBuffer<T>.Count
  nameWithType.vb: RingBuffer(Of T).Count
- uid: Yoakke.Collections.RingBuffer`1.EnsureCapacity(System.Int32)
  name: EnsureCapacity(Int32)
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_EnsureCapacity_System_Int32_
  commentId: M:Yoakke.Collections.RingBuffer`1.EnsureCapacity(System.Int32)
  fullName: Yoakke.Collections.RingBuffer<T>.EnsureCapacity(System.Int32)
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).EnsureCapacity(System.Int32)
  nameWithType: RingBuffer<T>.EnsureCapacity(Int32)
  nameWithType.vb: RingBuffer(Of T).EnsureCapacity(Int32)
- uid: Yoakke.Collections.RingBuffer`1.EnsureCapacity*
  name: EnsureCapacity
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_EnsureCapacity_
  commentId: Overload:Yoakke.Collections.RingBuffer`1.EnsureCapacity
  isSpec: "True"
  fullName: Yoakke.Collections.RingBuffer<T>.EnsureCapacity
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).EnsureCapacity
  nameWithType: RingBuffer<T>.EnsureCapacity
  nameWithType.vb: RingBuffer(Of T).EnsureCapacity
- uid: Yoakke.Collections.RingBuffer`1.GetEnumerator
  name: GetEnumerator()
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_GetEnumerator
  commentId: M:Yoakke.Collections.RingBuffer`1.GetEnumerator
  fullName: Yoakke.Collections.RingBuffer<T>.GetEnumerator()
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).GetEnumerator()
  nameWithType: RingBuffer<T>.GetEnumerator()
  nameWithType.vb: RingBuffer(Of T).GetEnumerator()
- uid: Yoakke.Collections.RingBuffer`1.GetEnumerator*
  name: GetEnumerator
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_GetEnumerator_
  commentId: Overload:Yoakke.Collections.RingBuffer`1.GetEnumerator
  isSpec: "True"
  fullName: Yoakke.Collections.RingBuffer<T>.GetEnumerator
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).GetEnumerator
  nameWithType: RingBuffer<T>.GetEnumerator
  nameWithType.vb: RingBuffer(Of T).GetEnumerator
- uid: Yoakke.Collections.RingBuffer`1.Head
  name: Head
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_Head
  commentId: P:Yoakke.Collections.RingBuffer`1.Head
  fullName: Yoakke.Collections.RingBuffer<T>.Head
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).Head
  nameWithType: RingBuffer<T>.Head
  nameWithType.vb: RingBuffer(Of T).Head
- uid: Yoakke.Collections.RingBuffer`1.Head*
  name: Head
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_Head_
  commentId: Overload:Yoakke.Collections.RingBuffer`1.Head
  isSpec: "True"
  fullName: Yoakke.Collections.RingBuffer<T>.Head
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).Head
  nameWithType: RingBuffer<T>.Head
  nameWithType.vb: RingBuffer(Of T).Head
- uid: Yoakke.Collections.RingBuffer`1.IndexOf(`0)
  name: IndexOf(T)
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_IndexOf__0_
  commentId: M:Yoakke.Collections.RingBuffer`1.IndexOf(`0)
  fullName: Yoakke.Collections.RingBuffer<T>.IndexOf(T)
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).IndexOf(T)
  nameWithType: RingBuffer<T>.IndexOf(T)
  nameWithType.vb: RingBuffer(Of T).IndexOf(T)
- uid: Yoakke.Collections.RingBuffer`1.IndexOf*
  name: IndexOf
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_IndexOf_
  commentId: Overload:Yoakke.Collections.RingBuffer`1.IndexOf
  isSpec: "True"
  fullName: Yoakke.Collections.RingBuffer<T>.IndexOf
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).IndexOf
  nameWithType: RingBuffer<T>.IndexOf
  nameWithType.vb: RingBuffer(Of T).IndexOf
- uid: Yoakke.Collections.RingBuffer`1.Insert(System.Int32,`0)
  name: Insert(Int32, T)
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_Insert_System_Int32__0_
  commentId: M:Yoakke.Collections.RingBuffer`1.Insert(System.Int32,`0)
  fullName: Yoakke.Collections.RingBuffer<T>.Insert(System.Int32, T)
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).Insert(System.Int32, T)
  nameWithType: RingBuffer<T>.Insert(Int32, T)
  nameWithType.vb: RingBuffer(Of T).Insert(Int32, T)
- uid: Yoakke.Collections.RingBuffer`1.Insert*
  name: Insert
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_Insert_
  commentId: Overload:Yoakke.Collections.RingBuffer`1.Insert
  isSpec: "True"
  fullName: Yoakke.Collections.RingBuffer<T>.Insert
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).Insert
  nameWithType: RingBuffer<T>.Insert
  nameWithType.vb: RingBuffer(Of T).Insert
- uid: Yoakke.Collections.RingBuffer`1.IsReadOnly
  name: IsReadOnly
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_IsReadOnly
  commentId: P:Yoakke.Collections.RingBuffer`1.IsReadOnly
  fullName: Yoakke.Collections.RingBuffer<T>.IsReadOnly
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).IsReadOnly
  nameWithType: RingBuffer<T>.IsReadOnly
  nameWithType.vb: RingBuffer(Of T).IsReadOnly
- uid: Yoakke.Collections.RingBuffer`1.IsReadOnly*
  name: IsReadOnly
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_IsReadOnly_
  commentId: Overload:Yoakke.Collections.RingBuffer`1.IsReadOnly
  isSpec: "True"
  fullName: Yoakke.Collections.RingBuffer<T>.IsReadOnly
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).IsReadOnly
  nameWithType: RingBuffer<T>.IsReadOnly
  nameWithType.vb: RingBuffer(Of T).IsReadOnly
- uid: Yoakke.Collections.RingBuffer`1.Item(System.Int32)
  name: Item[Int32]
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_Item_System_Int32_
  commentId: P:Yoakke.Collections.RingBuffer`1.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: Yoakke.Collections.RingBuffer<T>.Item[System.Int32]
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).Item(System.Int32)
  nameWithType: RingBuffer<T>.Item[Int32]
  nameWithType.vb: RingBuffer(Of T).Item(Int32)
- uid: Yoakke.Collections.RingBuffer`1.Item*
  name: Item
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_Item_
  commentId: Overload:Yoakke.Collections.RingBuffer`1.Item
  isSpec: "True"
  fullName: Yoakke.Collections.RingBuffer<T>.Item
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).Item
  nameWithType: RingBuffer<T>.Item
  nameWithType.vb: RingBuffer(Of T).Item
- uid: Yoakke.Collections.RingBuffer`1.Remove(`0)
  name: Remove(T)
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_Remove__0_
  commentId: M:Yoakke.Collections.RingBuffer`1.Remove(`0)
  fullName: Yoakke.Collections.RingBuffer<T>.Remove(T)
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).Remove(T)
  nameWithType: RingBuffer<T>.Remove(T)
  nameWithType.vb: RingBuffer(Of T).Remove(T)
- uid: Yoakke.Collections.RingBuffer`1.Remove*
  name: Remove
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_Remove_
  commentId: Overload:Yoakke.Collections.RingBuffer`1.Remove
  isSpec: "True"
  fullName: Yoakke.Collections.RingBuffer<T>.Remove
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).Remove
  nameWithType: RingBuffer<T>.Remove
  nameWithType.vb: RingBuffer(Of T).Remove
- uid: Yoakke.Collections.RingBuffer`1.RemoveAt(System.Int32)
  name: RemoveAt(Int32)
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_RemoveAt_System_Int32_
  commentId: M:Yoakke.Collections.RingBuffer`1.RemoveAt(System.Int32)
  fullName: Yoakke.Collections.RingBuffer<T>.RemoveAt(System.Int32)
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).RemoveAt(System.Int32)
  nameWithType: RingBuffer<T>.RemoveAt(Int32)
  nameWithType.vb: RingBuffer(Of T).RemoveAt(Int32)
- uid: Yoakke.Collections.RingBuffer`1.RemoveAt*
  name: RemoveAt
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_RemoveAt_
  commentId: Overload:Yoakke.Collections.RingBuffer`1.RemoveAt
  isSpec: "True"
  fullName: Yoakke.Collections.RingBuffer<T>.RemoveAt
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).RemoveAt
  nameWithType: RingBuffer<T>.RemoveAt
  nameWithType.vb: RingBuffer(Of T).RemoveAt
- uid: Yoakke.Collections.RingBuffer`1.RemoveBack
  name: RemoveBack()
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_RemoveBack
  commentId: M:Yoakke.Collections.RingBuffer`1.RemoveBack
  fullName: Yoakke.Collections.RingBuffer<T>.RemoveBack()
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).RemoveBack()
  nameWithType: RingBuffer<T>.RemoveBack()
  nameWithType.vb: RingBuffer(Of T).RemoveBack()
- uid: Yoakke.Collections.RingBuffer`1.RemoveBack*
  name: RemoveBack
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_RemoveBack_
  commentId: Overload:Yoakke.Collections.RingBuffer`1.RemoveBack
  isSpec: "True"
  fullName: Yoakke.Collections.RingBuffer<T>.RemoveBack
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).RemoveBack
  nameWithType: RingBuffer<T>.RemoveBack
  nameWithType.vb: RingBuffer(Of T).RemoveBack
- uid: Yoakke.Collections.RingBuffer`1.RemoveFront
  name: RemoveFront()
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_RemoveFront
  commentId: M:Yoakke.Collections.RingBuffer`1.RemoveFront
  fullName: Yoakke.Collections.RingBuffer<T>.RemoveFront()
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).RemoveFront()
  nameWithType: RingBuffer<T>.RemoveFront()
  nameWithType.vb: RingBuffer(Of T).RemoveFront()
- uid: Yoakke.Collections.RingBuffer`1.RemoveFront*
  name: RemoveFront
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_RemoveFront_
  commentId: Overload:Yoakke.Collections.RingBuffer`1.RemoveFront
  isSpec: "True"
  fullName: Yoakke.Collections.RingBuffer<T>.RemoveFront
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).RemoveFront
  nameWithType: RingBuffer<T>.RemoveFront
  nameWithType.vb: RingBuffer(Of T).RemoveFront
- uid: Yoakke.Collections.RingBuffer`1.Tail
  name: Tail
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_Tail
  commentId: P:Yoakke.Collections.RingBuffer`1.Tail
  fullName: Yoakke.Collections.RingBuffer<T>.Tail
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).Tail
  nameWithType: RingBuffer<T>.Tail
  nameWithType.vb: RingBuffer(Of T).Tail
- uid: Yoakke.Collections.RingBuffer`1.Tail*
  name: Tail
  href: api/Yoakke.Collections.RingBuffer-1.html#Yoakke_Collections_RingBuffer_1_Tail_
  commentId: Overload:Yoakke.Collections.RingBuffer`1.Tail
  isSpec: "True"
  fullName: Yoakke.Collections.RingBuffer<T>.Tail
  fullName.vb: Yoakke.Collections.RingBuffer(Of T).Tail
  nameWithType: RingBuffer<T>.Tail
  nameWithType.vb: RingBuffer(Of T).Tail
- uid: Yoakke.Collections.TupleEqualityComparer`2
  name: TupleEqualityComparer<T1, T2>
  href: api/Yoakke.Collections.TupleEqualityComparer-2.html
  commentId: T:Yoakke.Collections.TupleEqualityComparer`2
  name.vb: TupleEqualityComparer(Of T1, T2)
  fullName: Yoakke.Collections.TupleEqualityComparer<T1, T2>
  fullName.vb: Yoakke.Collections.TupleEqualityComparer(Of T1, T2)
  nameWithType: TupleEqualityComparer<T1, T2>
  nameWithType.vb: TupleEqualityComparer(Of T1, T2)
- uid: Yoakke.Collections.TupleEqualityComparer`2.#ctor(IEqualityComparer{`0},IEqualityComparer{`1})
  name: TupleEqualityComparer(IEqualityComparer<T1>, IEqualityComparer<T2>)
  href: api/Yoakke.Collections.TupleEqualityComparer-2.html#Yoakke_Collections_TupleEqualityComparer_2__ctor_IEqualityComparer__0__IEqualityComparer__1__
  commentId: M:Yoakke.Collections.TupleEqualityComparer`2.#ctor(IEqualityComparer{`0},IEqualityComparer{`1})
  name.vb: TupleEqualityComparer(IEqualityComparer(Of T1), IEqualityComparer(Of T2))
  fullName: Yoakke.Collections.TupleEqualityComparer<T1, T2>.TupleEqualityComparer(IEqualityComparer<T1>, IEqualityComparer<T2>)
  fullName.vb: Yoakke.Collections.TupleEqualityComparer(Of T1, T2).TupleEqualityComparer(IEqualityComparer(Of T1), IEqualityComparer(Of T2))
  nameWithType: TupleEqualityComparer<T1, T2>.TupleEqualityComparer(IEqualityComparer<T1>, IEqualityComparer<T2>)
  nameWithType.vb: TupleEqualityComparer(Of T1, T2).TupleEqualityComparer(IEqualityComparer(Of T1), IEqualityComparer(Of T2))
- uid: Yoakke.Collections.TupleEqualityComparer`2.#ctor*
  name: TupleEqualityComparer
  href: api/Yoakke.Collections.TupleEqualityComparer-2.html#Yoakke_Collections_TupleEqualityComparer_2__ctor_
  commentId: Overload:Yoakke.Collections.TupleEqualityComparer`2.#ctor
  isSpec: "True"
  fullName: Yoakke.Collections.TupleEqualityComparer<T1, T2>.TupleEqualityComparer
  fullName.vb: Yoakke.Collections.TupleEqualityComparer(Of T1, T2).TupleEqualityComparer
  nameWithType: TupleEqualityComparer<T1, T2>.TupleEqualityComparer
  nameWithType.vb: TupleEqualityComparer(Of T1, T2).TupleEqualityComparer
- uid: Yoakke.Collections.TupleEqualityComparer`2.Equals(System.ValueTuple{`0,`1},System.ValueTuple{`0,`1})
  name: Equals((T1, T2), (T1, T2))
  href: api/Yoakke.Collections.TupleEqualityComparer-2.html#Yoakke_Collections_TupleEqualityComparer_2_Equals_System_ValueTuple__0__1__System_ValueTuple__0__1__
  commentId: M:Yoakke.Collections.TupleEqualityComparer`2.Equals(System.ValueTuple{`0,`1},System.ValueTuple{`0,`1})
  fullName: Yoakke.Collections.TupleEqualityComparer<T1, T2>.Equals(System.ValueTuple<T1, T2>, System.ValueTuple<T1, T2>)
  fullName.vb: Yoakke.Collections.TupleEqualityComparer(Of T1, T2).Equals(System.ValueTuple(Of T1, T2), System.ValueTuple(Of T1, T2))
  nameWithType: TupleEqualityComparer<T1, T2>.Equals((T1, T2), (T1, T2))
  nameWithType.vb: TupleEqualityComparer(Of T1, T2).Equals((T1, T2), (T1, T2))
- uid: Yoakke.Collections.TupleEqualityComparer`2.Equals*
  name: Equals
  href: api/Yoakke.Collections.TupleEqualityComparer-2.html#Yoakke_Collections_TupleEqualityComparer_2_Equals_
  commentId: Overload:Yoakke.Collections.TupleEqualityComparer`2.Equals
  isSpec: "True"
  fullName: Yoakke.Collections.TupleEqualityComparer<T1, T2>.Equals
  fullName.vb: Yoakke.Collections.TupleEqualityComparer(Of T1, T2).Equals
  nameWithType: TupleEqualityComparer<T1, T2>.Equals
  nameWithType.vb: TupleEqualityComparer(Of T1, T2).Equals
- uid: Yoakke.Collections.TupleEqualityComparer`2.FirstComparer
  name: FirstComparer
  href: api/Yoakke.Collections.TupleEqualityComparer-2.html#Yoakke_Collections_TupleEqualityComparer_2_FirstComparer
  commentId: P:Yoakke.Collections.TupleEqualityComparer`2.FirstComparer
  fullName: Yoakke.Collections.TupleEqualityComparer<T1, T2>.FirstComparer
  fullName.vb: Yoakke.Collections.TupleEqualityComparer(Of T1, T2).FirstComparer
  nameWithType: TupleEqualityComparer<T1, T2>.FirstComparer
  nameWithType.vb: TupleEqualityComparer(Of T1, T2).FirstComparer
- uid: Yoakke.Collections.TupleEqualityComparer`2.FirstComparer*
  name: FirstComparer
  href: api/Yoakke.Collections.TupleEqualityComparer-2.html#Yoakke_Collections_TupleEqualityComparer_2_FirstComparer_
  commentId: Overload:Yoakke.Collections.TupleEqualityComparer`2.FirstComparer
  isSpec: "True"
  fullName: Yoakke.Collections.TupleEqualityComparer<T1, T2>.FirstComparer
  fullName.vb: Yoakke.Collections.TupleEqualityComparer(Of T1, T2).FirstComparer
  nameWithType: TupleEqualityComparer<T1, T2>.FirstComparer
  nameWithType.vb: TupleEqualityComparer(Of T1, T2).FirstComparer
- uid: Yoakke.Collections.TupleEqualityComparer`2.GetHashCode(System.ValueTuple{`0,`1})
  name: GetHashCode((T1, T2))
  href: api/Yoakke.Collections.TupleEqualityComparer-2.html#Yoakke_Collections_TupleEqualityComparer_2_GetHashCode_System_ValueTuple__0__1__
  commentId: M:Yoakke.Collections.TupleEqualityComparer`2.GetHashCode(System.ValueTuple{`0,`1})
  fullName: Yoakke.Collections.TupleEqualityComparer<T1, T2>.GetHashCode(System.ValueTuple<T1, T2>)
  fullName.vb: Yoakke.Collections.TupleEqualityComparer(Of T1, T2).GetHashCode(System.ValueTuple(Of T1, T2))
  nameWithType: TupleEqualityComparer<T1, T2>.GetHashCode((T1, T2))
  nameWithType.vb: TupleEqualityComparer(Of T1, T2).GetHashCode((T1, T2))
- uid: Yoakke.Collections.TupleEqualityComparer`2.GetHashCode*
  name: GetHashCode
  href: api/Yoakke.Collections.TupleEqualityComparer-2.html#Yoakke_Collections_TupleEqualityComparer_2_GetHashCode_
  commentId: Overload:Yoakke.Collections.TupleEqualityComparer`2.GetHashCode
  isSpec: "True"
  fullName: Yoakke.Collections.TupleEqualityComparer<T1, T2>.GetHashCode
  fullName.vb: Yoakke.Collections.TupleEqualityComparer(Of T1, T2).GetHashCode
  nameWithType: TupleEqualityComparer<T1, T2>.GetHashCode
  nameWithType.vb: TupleEqualityComparer(Of T1, T2).GetHashCode
- uid: Yoakke.Collections.TupleEqualityComparer`2.SecondComparer
  name: SecondComparer
  href: api/Yoakke.Collections.TupleEqualityComparer-2.html#Yoakke_Collections_TupleEqualityComparer_2_SecondComparer
  commentId: P:Yoakke.Collections.TupleEqualityComparer`2.SecondComparer
  fullName: Yoakke.Collections.TupleEqualityComparer<T1, T2>.SecondComparer
  fullName.vb: Yoakke.Collections.TupleEqualityComparer(Of T1, T2).SecondComparer
  nameWithType: TupleEqualityComparer<T1, T2>.SecondComparer
  nameWithType.vb: TupleEqualityComparer(Of T1, T2).SecondComparer
- uid: Yoakke.Collections.TupleEqualityComparer`2.SecondComparer*
  name: SecondComparer
  href: api/Yoakke.Collections.TupleEqualityComparer-2.html#Yoakke_Collections_TupleEqualityComparer_2_SecondComparer_
  commentId: Overload:Yoakke.Collections.TupleEqualityComparer`2.SecondComparer
  isSpec: "True"
  fullName: Yoakke.Collections.TupleEqualityComparer<T1, T2>.SecondComparer
  fullName.vb: Yoakke.Collections.TupleEqualityComparer(Of T1, T2).SecondComparer
  nameWithType: TupleEqualityComparer<T1, T2>.SecondComparer
  nameWithType.vb: TupleEqualityComparer(Of T1, T2).SecondComparer
- uid: Yoakke.Collections.Values
  name: Yoakke.Collections.Values
  href: api/Yoakke.Collections.Values.html
  commentId: N:Yoakke.Collections.Values
  fullName: Yoakke.Collections.Values
  nameWithType: Yoakke.Collections.Values
- uid: Yoakke.Collections.Values.IReadOnlyValueDictionary`2
  name: IReadOnlyValueDictionary<TKey, TValue>
  href: api/Yoakke.Collections.Values.IReadOnlyValueDictionary-2.html
  commentId: T:Yoakke.Collections.Values.IReadOnlyValueDictionary`2
  name.vb: IReadOnlyValueDictionary(Of TKey, TValue)
  fullName: Yoakke.Collections.Values.IReadOnlyValueDictionary<TKey, TValue>
  fullName.vb: Yoakke.Collections.Values.IReadOnlyValueDictionary(Of TKey, TValue)
  nameWithType: IReadOnlyValueDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyValueDictionary(Of TKey, TValue)
- uid: Yoakke.Collections.Values.IReadOnlyValueList`1
  name: IReadOnlyValueList<T>
  href: api/Yoakke.Collections.Values.IReadOnlyValueList-1.html
  commentId: T:Yoakke.Collections.Values.IReadOnlyValueList`1
  name.vb: IReadOnlyValueList(Of T)
  fullName: Yoakke.Collections.Values.IReadOnlyValueList<T>
  fullName.vb: Yoakke.Collections.Values.IReadOnlyValueList(Of T)
  nameWithType: IReadOnlyValueList<T>
  nameWithType.vb: IReadOnlyValueList(Of T)
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2
  name: ReadOnlyValueDictionary<TKey, TValue>
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html
  commentId: T:Yoakke.Collections.Values.ReadOnlyValueDictionary`2
  name.vb: ReadOnlyValueDictionary(Of TKey, TValue)
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue)
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue)
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.#ctor(IReadOnlyDictionary{`0,`1})
  name: ReadOnlyValueDictionary(IReadOnlyDictionary<TKey, TValue>)
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2__ctor_IReadOnlyDictionary__0__1__
  commentId: M:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.#ctor(IReadOnlyDictionary{`0,`1})
  name.vb: ReadOnlyValueDictionary(IReadOnlyDictionary(Of TKey, TValue))
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.ReadOnlyValueDictionary(IReadOnlyDictionary<TKey, TValue>)
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).ReadOnlyValueDictionary(IReadOnlyDictionary(Of TKey, TValue))
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.ReadOnlyValueDictionary(IReadOnlyDictionary<TKey, TValue>)
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).ReadOnlyValueDictionary(IReadOnlyDictionary(Of TKey, TValue))
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.#ctor(IReadOnlyDictionary{`0,`1},IEqualityComparer{`0},IEqualityComparer{`1})
  name: ReadOnlyValueDictionary(IReadOnlyDictionary<TKey, TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2__ctor_IReadOnlyDictionary__0__1__IEqualityComparer__0__IEqualityComparer__1__
  commentId: M:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.#ctor(IReadOnlyDictionary{`0,`1},IEqualityComparer{`0},IEqualityComparer{`1})
  name.vb: ReadOnlyValueDictionary(IReadOnlyDictionary(Of TKey, TValue), IEqualityComparer(Of TKey), IEqualityComparer(Of TValue))
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.ReadOnlyValueDictionary(IReadOnlyDictionary<TKey, TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).ReadOnlyValueDictionary(IReadOnlyDictionary(Of TKey, TValue), IEqualityComparer(Of TKey), IEqualityComparer(Of TValue))
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.ReadOnlyValueDictionary(IReadOnlyDictionary<TKey, TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).ReadOnlyValueDictionary(IReadOnlyDictionary(Of TKey, TValue), IEqualityComparer(Of TKey), IEqualityComparer(Of TValue))
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.#ctor*
  name: ReadOnlyValueDictionary
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2__ctor_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.#ctor
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.ReadOnlyValueDictionary
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).ReadOnlyValueDictionary
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.ReadOnlyValueDictionary
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).ReadOnlyValueDictionary
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.ContainsKey(`0)
  name: ContainsKey(TKey)
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_ContainsKey__0_
  commentId: M:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.ContainsKey(`0)
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).ContainsKey(TKey)
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).ContainsKey(TKey)
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.ContainsKey*
  name: ContainsKey
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_ContainsKey_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.ContainsKey
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.ContainsKey
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).ContainsKey
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.ContainsKey
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).ContainsKey
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Count
  name: Count
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_Count
  commentId: P:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Count
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.Count
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).Count
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.Count
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).Count
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Count*
  name: Count
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_Count_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Count
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.Count
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).Count
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.Count
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).Count
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Equals(System.Nullable{IReadOnlyDictionary{`0,`1}})
  name: Equals(Nullable<IReadOnlyDictionary<TKey, TValue>>)
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_Equals_System_Nullable_IReadOnlyDictionary__0__1___
  commentId: M:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Equals(System.Nullable{IReadOnlyDictionary{`0,`1}})
  name.vb: Equals(Nullable(Of IReadOnlyDictionary(Of TKey, TValue)))
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.Equals(System.Nullable<IReadOnlyDictionary<TKey, TValue>>)
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).Equals(System.Nullable(Of IReadOnlyDictionary(Of TKey, TValue)))
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.Equals(Nullable<IReadOnlyDictionary<TKey, TValue>>)
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).Equals(Nullable(Of IReadOnlyDictionary(Of TKey, TValue)))
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Equals(System.Nullable{System.Object})
  name: Equals(Nullable<Object>)
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_Equals_System_Nullable_System_Object__
  commentId: M:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Equals(System.Nullable{System.Object})
  name.vb: Equals(Nullable(Of Object))
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.Equals(System.Nullable<System.Object>)
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).Equals(System.Nullable(Of System.Object))
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.Equals(Nullable<Object>)
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).Equals(Nullable(Of Object))
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Equals(Yoakke.Collections.Values.IReadOnlyValueDictionary{`0,`1})
  name: Equals(IReadOnlyValueDictionary<TKey, TValue>)
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_Equals_Yoakke_Collections_Values_IReadOnlyValueDictionary__0__1__
  commentId: M:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Equals(Yoakke.Collections.Values.IReadOnlyValueDictionary{`0,`1})
  name.vb: Equals(IReadOnlyValueDictionary(Of TKey, TValue))
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.Equals(Yoakke.Collections.Values.IReadOnlyValueDictionary<TKey, TValue>)
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).Equals(Yoakke.Collections.Values.IReadOnlyValueDictionary(Of TKey, TValue))
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.Equals(IReadOnlyValueDictionary<TKey, TValue>)
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).Equals(IReadOnlyValueDictionary(Of TKey, TValue))
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Equals*
  name: Equals
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_Equals_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Equals
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.Equals
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).Equals
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.Equals
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).Equals
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.GetEnumerator
  name: GetEnumerator()
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_GetEnumerator
  commentId: M:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.GetEnumerator
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.GetEnumerator()
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).GetEnumerator()
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.GetEnumerator()
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).GetEnumerator()
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.GetEnumerator*
  name: GetEnumerator
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_GetEnumerator_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.GetEnumerator
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.GetEnumerator
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).GetEnumerator
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.GetEnumerator
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).GetEnumerator
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.GetHashCode
  name: GetHashCode()
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_GetHashCode
  commentId: M:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.GetHashCode
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.GetHashCode()
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).GetHashCode()
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.GetHashCode()
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).GetHashCode()
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.GetHashCode*
  name: GetHashCode
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_GetHashCode_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.GetHashCode
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.GetHashCode
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).GetHashCode
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.GetHashCode
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).GetHashCode
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Item(`0)
  name: Item[TKey]
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_Item__0_
  commentId: P:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Item(`0)
  name.vb: Item(TKey)
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.Item[TKey]
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).Item(TKey)
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.Item[TKey]
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).Item(TKey)
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Item*
  name: Item
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_Item_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Item
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.Item
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).Item
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.Item
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).Item
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.KeyComparer
  name: KeyComparer
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_KeyComparer
  commentId: P:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.KeyComparer
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.KeyComparer
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).KeyComparer
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.KeyComparer
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).KeyComparer
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.KeyComparer*
  name: KeyComparer
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_KeyComparer_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.KeyComparer
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.KeyComparer
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).KeyComparer
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.KeyComparer
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).KeyComparer
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Keys
  name: Keys
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_Keys
  commentId: P:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Keys
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.Keys
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).Keys
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.Keys
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).Keys
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Keys*
  name: Keys
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_Keys_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Keys
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.Keys
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).Keys
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.Keys
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).Keys
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.ToString
  name: ToString()
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_ToString
  commentId: M:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.ToString
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.ToString()
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).ToString()
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.ToString()
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).ToString()
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.ToString*
  name: ToString
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_ToString_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.ToString
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.ToString
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).ToString
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.ToString
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).ToString
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.TryGetValue(`0,`1@)
  name: TryGetValue(TKey, out TValue)
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_TryGetValue__0__1__
  commentId: M:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.TryGetValue(`0,`1@)
  name.vb: TryGetValue(TKey, ByRef TValue)
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.TryGetValue*
  name: TryGetValue
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_TryGetValue_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.TryGetValue
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.TryGetValue
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).TryGetValue
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.TryGetValue
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).TryGetValue
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Underlying
  name: Underlying
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_Underlying
  commentId: P:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Underlying
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.Underlying
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).Underlying
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.Underlying
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).Underlying
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Underlying*
  name: Underlying
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_Underlying_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Underlying
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.Underlying
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).Underlying
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.Underlying
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).Underlying
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.ValueComparer
  name: ValueComparer
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_ValueComparer
  commentId: P:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.ValueComparer
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.ValueComparer
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).ValueComparer
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.ValueComparer
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).ValueComparer
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.ValueComparer*
  name: ValueComparer
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_ValueComparer_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.ValueComparer
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.ValueComparer
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).ValueComparer
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.ValueComparer
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).ValueComparer
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Values
  name: Values
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_Values
  commentId: P:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Values
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.Values
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).Values
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.Values
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).Values
- uid: Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Values*
  name: Values
  href: api/Yoakke.Collections.Values.ReadOnlyValueDictionary-2.html#Yoakke_Collections_Values_ReadOnlyValueDictionary_2_Values_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueDictionary`2.Values
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueDictionary<TKey, TValue>.Values
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueDictionary(Of TKey, TValue).Values
  nameWithType: ReadOnlyValueDictionary<TKey, TValue>.Values
  nameWithType.vb: ReadOnlyValueDictionary(Of TKey, TValue).Values
- uid: Yoakke.Collections.Values.ReadOnlyValueList`1
  name: ReadOnlyValueList<T>
  href: api/Yoakke.Collections.Values.ReadOnlyValueList-1.html
  commentId: T:Yoakke.Collections.Values.ReadOnlyValueList`1
  name.vb: ReadOnlyValueList(Of T)
  fullName: Yoakke.Collections.Values.ReadOnlyValueList<T>
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueList(Of T)
  nameWithType: ReadOnlyValueList<T>
  nameWithType.vb: ReadOnlyValueList(Of T)
- uid: Yoakke.Collections.Values.ReadOnlyValueList`1.#ctor(IReadOnlyList{`0})
  name: ReadOnlyValueList(IReadOnlyList<T>)
  href: api/Yoakke.Collections.Values.ReadOnlyValueList-1.html#Yoakke_Collections_Values_ReadOnlyValueList_1__ctor_IReadOnlyList__0__
  commentId: M:Yoakke.Collections.Values.ReadOnlyValueList`1.#ctor(IReadOnlyList{`0})
  name.vb: ReadOnlyValueList(IReadOnlyList(Of T))
  fullName: Yoakke.Collections.Values.ReadOnlyValueList<T>.ReadOnlyValueList(IReadOnlyList<T>)
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueList(Of T).ReadOnlyValueList(IReadOnlyList(Of T))
  nameWithType: ReadOnlyValueList<T>.ReadOnlyValueList(IReadOnlyList<T>)
  nameWithType.vb: ReadOnlyValueList(Of T).ReadOnlyValueList(IReadOnlyList(Of T))
- uid: Yoakke.Collections.Values.ReadOnlyValueList`1.#ctor(IReadOnlyList{`0},IEqualityComparer{`0})
  name: ReadOnlyValueList(IReadOnlyList<T>, IEqualityComparer<T>)
  href: api/Yoakke.Collections.Values.ReadOnlyValueList-1.html#Yoakke_Collections_Values_ReadOnlyValueList_1__ctor_IReadOnlyList__0__IEqualityComparer__0__
  commentId: M:Yoakke.Collections.Values.ReadOnlyValueList`1.#ctor(IReadOnlyList{`0},IEqualityComparer{`0})
  name.vb: ReadOnlyValueList(IReadOnlyList(Of T), IEqualityComparer(Of T))
  fullName: Yoakke.Collections.Values.ReadOnlyValueList<T>.ReadOnlyValueList(IReadOnlyList<T>, IEqualityComparer<T>)
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueList(Of T).ReadOnlyValueList(IReadOnlyList(Of T), IEqualityComparer(Of T))
  nameWithType: ReadOnlyValueList<T>.ReadOnlyValueList(IReadOnlyList<T>, IEqualityComparer<T>)
  nameWithType.vb: ReadOnlyValueList(Of T).ReadOnlyValueList(IReadOnlyList(Of T), IEqualityComparer(Of T))
- uid: Yoakke.Collections.Values.ReadOnlyValueList`1.#ctor*
  name: ReadOnlyValueList
  href: api/Yoakke.Collections.Values.ReadOnlyValueList-1.html#Yoakke_Collections_Values_ReadOnlyValueList_1__ctor_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueList`1.#ctor
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueList<T>.ReadOnlyValueList
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueList(Of T).ReadOnlyValueList
  nameWithType: ReadOnlyValueList<T>.ReadOnlyValueList
  nameWithType.vb: ReadOnlyValueList(Of T).ReadOnlyValueList
- uid: Yoakke.Collections.Values.ReadOnlyValueList`1.Comparer
  name: Comparer
  href: api/Yoakke.Collections.Values.ReadOnlyValueList-1.html#Yoakke_Collections_Values_ReadOnlyValueList_1_Comparer
  commentId: P:Yoakke.Collections.Values.ReadOnlyValueList`1.Comparer
  fullName: Yoakke.Collections.Values.ReadOnlyValueList<T>.Comparer
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueList(Of T).Comparer
  nameWithType: ReadOnlyValueList<T>.Comparer
  nameWithType.vb: ReadOnlyValueList(Of T).Comparer
- uid: Yoakke.Collections.Values.ReadOnlyValueList`1.Comparer*
  name: Comparer
  href: api/Yoakke.Collections.Values.ReadOnlyValueList-1.html#Yoakke_Collections_Values_ReadOnlyValueList_1_Comparer_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueList`1.Comparer
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueList<T>.Comparer
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueList(Of T).Comparer
  nameWithType: ReadOnlyValueList<T>.Comparer
  nameWithType.vb: ReadOnlyValueList(Of T).Comparer
- uid: Yoakke.Collections.Values.ReadOnlyValueList`1.Count
  name: Count
  href: api/Yoakke.Collections.Values.ReadOnlyValueList-1.html#Yoakke_Collections_Values_ReadOnlyValueList_1_Count
  commentId: P:Yoakke.Collections.Values.ReadOnlyValueList`1.Count
  fullName: Yoakke.Collections.Values.ReadOnlyValueList<T>.Count
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueList(Of T).Count
  nameWithType: ReadOnlyValueList<T>.Count
  nameWithType.vb: ReadOnlyValueList(Of T).Count
- uid: Yoakke.Collections.Values.ReadOnlyValueList`1.Count*
  name: Count
  href: api/Yoakke.Collections.Values.ReadOnlyValueList-1.html#Yoakke_Collections_Values_ReadOnlyValueList_1_Count_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueList`1.Count
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueList<T>.Count
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueList(Of T).Count
  nameWithType: ReadOnlyValueList<T>.Count
  nameWithType.vb: ReadOnlyValueList(Of T).Count
- uid: Yoakke.Collections.Values.ReadOnlyValueList`1.Equals(System.Nullable{IReadOnlyList{`0}})
  name: Equals(Nullable<IReadOnlyList<T>>)
  href: api/Yoakke.Collections.Values.ReadOnlyValueList-1.html#Yoakke_Collections_Values_ReadOnlyValueList_1_Equals_System_Nullable_IReadOnlyList__0___
  commentId: M:Yoakke.Collections.Values.ReadOnlyValueList`1.Equals(System.Nullable{IReadOnlyList{`0}})
  name.vb: Equals(Nullable(Of IReadOnlyList(Of T)))
  fullName: Yoakke.Collections.Values.ReadOnlyValueList<T>.Equals(System.Nullable<IReadOnlyList<T>>)
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueList(Of T).Equals(System.Nullable(Of IReadOnlyList(Of T)))
  nameWithType: ReadOnlyValueList<T>.Equals(Nullable<IReadOnlyList<T>>)
  nameWithType.vb: ReadOnlyValueList(Of T).Equals(Nullable(Of IReadOnlyList(Of T)))
- uid: Yoakke.Collections.Values.ReadOnlyValueList`1.Equals(System.Nullable{System.Object})
  name: Equals(Nullable<Object>)
  href: api/Yoakke.Collections.Values.ReadOnlyValueList-1.html#Yoakke_Collections_Values_ReadOnlyValueList_1_Equals_System_Nullable_System_Object__
  commentId: M:Yoakke.Collections.Values.ReadOnlyValueList`1.Equals(System.Nullable{System.Object})
  name.vb: Equals(Nullable(Of Object))
  fullName: Yoakke.Collections.Values.ReadOnlyValueList<T>.Equals(System.Nullable<System.Object>)
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueList(Of T).Equals(System.Nullable(Of System.Object))
  nameWithType: ReadOnlyValueList<T>.Equals(Nullable<Object>)
  nameWithType.vb: ReadOnlyValueList(Of T).Equals(Nullable(Of Object))
- uid: Yoakke.Collections.Values.ReadOnlyValueList`1.Equals(Yoakke.Collections.Values.IReadOnlyValueList{`0})
  name: Equals(IReadOnlyValueList<T>)
  href: api/Yoakke.Collections.Values.ReadOnlyValueList-1.html#Yoakke_Collections_Values_ReadOnlyValueList_1_Equals_Yoakke_Collections_Values_IReadOnlyValueList__0__
  commentId: M:Yoakke.Collections.Values.ReadOnlyValueList`1.Equals(Yoakke.Collections.Values.IReadOnlyValueList{`0})
  name.vb: Equals(IReadOnlyValueList(Of T))
  fullName: Yoakke.Collections.Values.ReadOnlyValueList<T>.Equals(Yoakke.Collections.Values.IReadOnlyValueList<T>)
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueList(Of T).Equals(Yoakke.Collections.Values.IReadOnlyValueList(Of T))
  nameWithType: ReadOnlyValueList<T>.Equals(IReadOnlyValueList<T>)
  nameWithType.vb: ReadOnlyValueList(Of T).Equals(IReadOnlyValueList(Of T))
- uid: Yoakke.Collections.Values.ReadOnlyValueList`1.Equals*
  name: Equals
  href: api/Yoakke.Collections.Values.ReadOnlyValueList-1.html#Yoakke_Collections_Values_ReadOnlyValueList_1_Equals_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueList`1.Equals
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueList<T>.Equals
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueList(Of T).Equals
  nameWithType: ReadOnlyValueList<T>.Equals
  nameWithType.vb: ReadOnlyValueList(Of T).Equals
- uid: Yoakke.Collections.Values.ReadOnlyValueList`1.GetEnumerator
  name: GetEnumerator()
  href: api/Yoakke.Collections.Values.ReadOnlyValueList-1.html#Yoakke_Collections_Values_ReadOnlyValueList_1_GetEnumerator
  commentId: M:Yoakke.Collections.Values.ReadOnlyValueList`1.GetEnumerator
  fullName: Yoakke.Collections.Values.ReadOnlyValueList<T>.GetEnumerator()
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueList(Of T).GetEnumerator()
  nameWithType: ReadOnlyValueList<T>.GetEnumerator()
  nameWithType.vb: ReadOnlyValueList(Of T).GetEnumerator()
- uid: Yoakke.Collections.Values.ReadOnlyValueList`1.GetEnumerator*
  name: GetEnumerator
  href: api/Yoakke.Collections.Values.ReadOnlyValueList-1.html#Yoakke_Collections_Values_ReadOnlyValueList_1_GetEnumerator_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueList`1.GetEnumerator
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueList<T>.GetEnumerator
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueList(Of T).GetEnumerator
  nameWithType: ReadOnlyValueList<T>.GetEnumerator
  nameWithType.vb: ReadOnlyValueList(Of T).GetEnumerator
- uid: Yoakke.Collections.Values.ReadOnlyValueList`1.GetHashCode
  name: GetHashCode()
  href: api/Yoakke.Collections.Values.ReadOnlyValueList-1.html#Yoakke_Collections_Values_ReadOnlyValueList_1_GetHashCode
  commentId: M:Yoakke.Collections.Values.ReadOnlyValueList`1.GetHashCode
  fullName: Yoakke.Collections.Values.ReadOnlyValueList<T>.GetHashCode()
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueList(Of T).GetHashCode()
  nameWithType: ReadOnlyValueList<T>.GetHashCode()
  nameWithType.vb: ReadOnlyValueList(Of T).GetHashCode()
- uid: Yoakke.Collections.Values.ReadOnlyValueList`1.GetHashCode*
  name: GetHashCode
  href: api/Yoakke.Collections.Values.ReadOnlyValueList-1.html#Yoakke_Collections_Values_ReadOnlyValueList_1_GetHashCode_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueList`1.GetHashCode
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueList<T>.GetHashCode
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueList(Of T).GetHashCode
  nameWithType: ReadOnlyValueList<T>.GetHashCode
  nameWithType.vb: ReadOnlyValueList(Of T).GetHashCode
- uid: Yoakke.Collections.Values.ReadOnlyValueList`1.Item(System.Int32)
  name: Item[Int32]
  href: api/Yoakke.Collections.Values.ReadOnlyValueList-1.html#Yoakke_Collections_Values_ReadOnlyValueList_1_Item_System_Int32_
  commentId: P:Yoakke.Collections.Values.ReadOnlyValueList`1.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: Yoakke.Collections.Values.ReadOnlyValueList<T>.Item[System.Int32]
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueList(Of T).Item(System.Int32)
  nameWithType: ReadOnlyValueList<T>.Item[Int32]
  nameWithType.vb: ReadOnlyValueList(Of T).Item(Int32)
- uid: Yoakke.Collections.Values.ReadOnlyValueList`1.Item*
  name: Item
  href: api/Yoakke.Collections.Values.ReadOnlyValueList-1.html#Yoakke_Collections_Values_ReadOnlyValueList_1_Item_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueList`1.Item
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueList<T>.Item
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueList(Of T).Item
  nameWithType: ReadOnlyValueList<T>.Item
  nameWithType.vb: ReadOnlyValueList(Of T).Item
- uid: Yoakke.Collections.Values.ReadOnlyValueList`1.ToString
  name: ToString()
  href: api/Yoakke.Collections.Values.ReadOnlyValueList-1.html#Yoakke_Collections_Values_ReadOnlyValueList_1_ToString
  commentId: M:Yoakke.Collections.Values.ReadOnlyValueList`1.ToString
  fullName: Yoakke.Collections.Values.ReadOnlyValueList<T>.ToString()
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueList(Of T).ToString()
  nameWithType: ReadOnlyValueList<T>.ToString()
  nameWithType.vb: ReadOnlyValueList(Of T).ToString()
- uid: Yoakke.Collections.Values.ReadOnlyValueList`1.ToString*
  name: ToString
  href: api/Yoakke.Collections.Values.ReadOnlyValueList-1.html#Yoakke_Collections_Values_ReadOnlyValueList_1_ToString_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueList`1.ToString
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueList<T>.ToString
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueList(Of T).ToString
  nameWithType: ReadOnlyValueList<T>.ToString
  nameWithType.vb: ReadOnlyValueList(Of T).ToString
- uid: Yoakke.Collections.Values.ReadOnlyValueList`1.Underlying
  name: Underlying
  href: api/Yoakke.Collections.Values.ReadOnlyValueList-1.html#Yoakke_Collections_Values_ReadOnlyValueList_1_Underlying
  commentId: P:Yoakke.Collections.Values.ReadOnlyValueList`1.Underlying
  fullName: Yoakke.Collections.Values.ReadOnlyValueList<T>.Underlying
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueList(Of T).Underlying
  nameWithType: ReadOnlyValueList<T>.Underlying
  nameWithType.vb: ReadOnlyValueList(Of T).Underlying
- uid: Yoakke.Collections.Values.ReadOnlyValueList`1.Underlying*
  name: Underlying
  href: api/Yoakke.Collections.Values.ReadOnlyValueList-1.html#Yoakke_Collections_Values_ReadOnlyValueList_1_Underlying_
  commentId: Overload:Yoakke.Collections.Values.ReadOnlyValueList`1.Underlying
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ReadOnlyValueList<T>.Underlying
  fullName.vb: Yoakke.Collections.Values.ReadOnlyValueList(Of T).Underlying
  nameWithType: ReadOnlyValueList<T>.Underlying
  nameWithType.vb: ReadOnlyValueList(Of T).Underlying
- uid: Yoakke.Collections.Values.ValueCollectionExtensions
  name: ValueCollectionExtensions
  href: api/Yoakke.Collections.Values.ValueCollectionExtensions.html
  commentId: T:Yoakke.Collections.Values.ValueCollectionExtensions
  fullName: Yoakke.Collections.Values.ValueCollectionExtensions
  nameWithType: ValueCollectionExtensions
- uid: Yoakke.Collections.Values.ValueCollectionExtensions.ToValue*
  name: ToValue
  href: api/Yoakke.Collections.Values.ValueCollectionExtensions.html#Yoakke_Collections_Values_ValueCollectionExtensions_ToValue_
  commentId: Overload:Yoakke.Collections.Values.ValueCollectionExtensions.ToValue
  isSpec: "True"
  fullName: Yoakke.Collections.Values.ValueCollectionExtensions.ToValue
  nameWithType: ValueCollectionExtensions.ToValue
- uid: Yoakke.Collections.Values.ValueCollectionExtensions.ToValue``1(IReadOnlyList{``0})
  name: ToValue<T>(IReadOnlyList<T>)
  href: api/Yoakke.Collections.Values.ValueCollectionExtensions.html#Yoakke_Collections_Values_ValueCollectionExtensions_ToValue__1_IReadOnlyList___0__
  commentId: M:Yoakke.Collections.Values.ValueCollectionExtensions.ToValue``1(IReadOnlyList{``0})
  name.vb: ToValue(Of T)(IReadOnlyList(Of T))
  fullName: Yoakke.Collections.Values.ValueCollectionExtensions.ToValue<T>(IReadOnlyList<T>)
  fullName.vb: Yoakke.Collections.Values.ValueCollectionExtensions.ToValue(Of T)(IReadOnlyList(Of T))
  nameWithType: ValueCollectionExtensions.ToValue<T>(IReadOnlyList<T>)
  nameWithType.vb: ValueCollectionExtensions.ToValue(Of T)(IReadOnlyList(Of T))
- uid: Yoakke.Collections.Values.ValueCollectionExtensions.ToValue``1(IReadOnlyList{``0},IEqualityComparer{``0})
  name: ToValue<T>(IReadOnlyList<T>, IEqualityComparer<T>)
  href: api/Yoakke.Collections.Values.ValueCollectionExtensions.html#Yoakke_Collections_Values_ValueCollectionExtensions_ToValue__1_IReadOnlyList___0__IEqualityComparer___0__
  commentId: M:Yoakke.Collections.Values.ValueCollectionExtensions.ToValue``1(IReadOnlyList{``0},IEqualityComparer{``0})
  name.vb: ToValue(Of T)(IReadOnlyList(Of T), IEqualityComparer(Of T))
  fullName: Yoakke.Collections.Values.ValueCollectionExtensions.ToValue<T>(IReadOnlyList<T>, IEqualityComparer<T>)
  fullName.vb: Yoakke.Collections.Values.ValueCollectionExtensions.ToValue(Of T)(IReadOnlyList(Of T), IEqualityComparer(Of T))
  nameWithType: ValueCollectionExtensions.ToValue<T>(IReadOnlyList<T>, IEqualityComparer<T>)
  nameWithType.vb: ValueCollectionExtensions.ToValue(Of T)(IReadOnlyList(Of T), IEqualityComparer(Of T))
- uid: Yoakke.Collections.Values.ValueCollectionExtensions.ToValue``2(IReadOnlyDictionary{``0,``1})
  name: ToValue<TKey, TValue>(IReadOnlyDictionary<TKey, TValue>)
  href: api/Yoakke.Collections.Values.ValueCollectionExtensions.html#Yoakke_Collections_Values_ValueCollectionExtensions_ToValue__2_IReadOnlyDictionary___0___1__
  commentId: M:Yoakke.Collections.Values.ValueCollectionExtensions.ToValue``2(IReadOnlyDictionary{``0,``1})
  name.vb: ToValue(Of TKey, TValue)(IReadOnlyDictionary(Of TKey, TValue))
  fullName: Yoakke.Collections.Values.ValueCollectionExtensions.ToValue<TKey, TValue>(IReadOnlyDictionary<TKey, TValue>)
  fullName.vb: Yoakke.Collections.Values.ValueCollectionExtensions.ToValue(Of TKey, TValue)(IReadOnlyDictionary(Of TKey, TValue))
  nameWithType: ValueCollectionExtensions.ToValue<TKey, TValue>(IReadOnlyDictionary<TKey, TValue>)
  nameWithType.vb: ValueCollectionExtensions.ToValue(Of TKey, TValue)(IReadOnlyDictionary(Of TKey, TValue))
- uid: Yoakke.Collections.Values.ValueCollectionExtensions.ToValue``2(IReadOnlyDictionary{``0,``1},IEqualityComparer{``0})
  name: ToValue<TKey, TValue>(IReadOnlyDictionary<TKey, TValue>, IEqualityComparer<TKey>)
  href: api/Yoakke.Collections.Values.ValueCollectionExtensions.html#Yoakke_Collections_Values_ValueCollectionExtensions_ToValue__2_IReadOnlyDictionary___0___1__IEqualityComparer___0__
  commentId: M:Yoakke.Collections.Values.ValueCollectionExtensions.ToValue``2(IReadOnlyDictionary{``0,``1},IEqualityComparer{``0})
  name.vb: ToValue(Of TKey, TValue)(IReadOnlyDictionary(Of TKey, TValue), IEqualityComparer(Of TKey))
  fullName: Yoakke.Collections.Values.ValueCollectionExtensions.ToValue<TKey, TValue>(IReadOnlyDictionary<TKey, TValue>, IEqualityComparer<TKey>)
  fullName.vb: Yoakke.Collections.Values.ValueCollectionExtensions.ToValue(Of TKey, TValue)(IReadOnlyDictionary(Of TKey, TValue), IEqualityComparer(Of TKey))
  nameWithType: ValueCollectionExtensions.ToValue<TKey, TValue>(IReadOnlyDictionary<TKey, TValue>, IEqualityComparer<TKey>)
  nameWithType.vb: ValueCollectionExtensions.ToValue(Of TKey, TValue)(IReadOnlyDictionary(Of TKey, TValue), IEqualityComparer(Of TKey))
- uid: Yoakke.Collections.Values.ValueCollectionExtensions.ToValue``2(IReadOnlyDictionary{``0,``1},IEqualityComparer{``0},IEqualityComparer{``1})
  name: ToValue<TKey, TValue>(IReadOnlyDictionary<TKey, TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  href: api/Yoakke.Collections.Values.ValueCollectionExtensions.html#Yoakke_Collections_Values_ValueCollectionExtensions_ToValue__2_IReadOnlyDictionary___0___1__IEqualityComparer___0__IEqualityComparer___1__
  commentId: M:Yoakke.Collections.Values.ValueCollectionExtensions.ToValue``2(IReadOnlyDictionary{``0,``1},IEqualityComparer{``0},IEqualityComparer{``1})
  name.vb: ToValue(Of TKey, TValue)(IReadOnlyDictionary(Of TKey, TValue), IEqualityComparer(Of TKey), IEqualityComparer(Of TValue))
  fullName: Yoakke.Collections.Values.ValueCollectionExtensions.ToValue<TKey, TValue>(IReadOnlyDictionary<TKey, TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  fullName.vb: Yoakke.Collections.Values.ValueCollectionExtensions.ToValue(Of TKey, TValue)(IReadOnlyDictionary(Of TKey, TValue), IEqualityComparer(Of TKey), IEqualityComparer(Of TValue))
  nameWithType: ValueCollectionExtensions.ToValue<TKey, TValue>(IReadOnlyDictionary<TKey, TValue>, IEqualityComparer<TKey>, IEqualityComparer<TValue>)
  nameWithType.vb: ValueCollectionExtensions.ToValue(Of TKey, TValue)(IReadOnlyDictionary(Of TKey, TValue), IEqualityComparer(Of TKey), IEqualityComparer(Of TValue))
- uid: Yoakke.Collections.Values.ValueCollectionExtensions.ToValue``2(IReadOnlyDictionary{``0,``1},IEqualityComparer{``1})
  name: ToValue<TKey, TValue>(IReadOnlyDictionary<TKey, TValue>, IEqualityComparer<TValue>)
  href: api/Yoakke.Collections.Values.ValueCollectionExtensions.html#Yoakke_Collections_Values_ValueCollectionExtensions_ToValue__2_IReadOnlyDictionary___0___1__IEqualityComparer___1__
  commentId: M:Yoakke.Collections.Values.ValueCollectionExtensions.ToValue``2(IReadOnlyDictionary{``0,``1},IEqualityComparer{``1})
  name.vb: ToValue(Of TKey, TValue)(IReadOnlyDictionary(Of TKey, TValue), IEqualityComparer(Of TValue))
  fullName: Yoakke.Collections.Values.ValueCollectionExtensions.ToValue<TKey, TValue>(IReadOnlyDictionary<TKey, TValue>, IEqualityComparer<TValue>)
  fullName.vb: Yoakke.Collections.Values.ValueCollectionExtensions.ToValue(Of TKey, TValue)(IReadOnlyDictionary(Of TKey, TValue), IEqualityComparer(Of TValue))
  nameWithType: ValueCollectionExtensions.ToValue<TKey, TValue>(IReadOnlyDictionary<TKey, TValue>, IEqualityComparer<TValue>)
  nameWithType.vb: ValueCollectionExtensions.ToValue(Of TKey, TValue)(IReadOnlyDictionary(Of TKey, TValue), IEqualityComparer(Of TValue))
- uid: Yoakke.SourceGenerator.Common
  name: Yoakke.SourceGenerator.Common
  href: api/Yoakke.SourceGenerator.Common.html
  commentId: N:Yoakke.SourceGenerator.Common
  fullName: Yoakke.SourceGenerator.Common
  nameWithType: Yoakke.SourceGenerator.Common
- uid: Yoakke.SourceGenerator.Common.AssemblyExtensions
  name: AssemblyExtensions
  href: api/Yoakke.SourceGenerator.Common.AssemblyExtensions.html
  commentId: T:Yoakke.SourceGenerator.Common.AssemblyExtensions
  fullName: Yoakke.SourceGenerator.Common.AssemblyExtensions
  nameWithType: AssemblyExtensions
- uid: Yoakke.SourceGenerator.Common.AssemblyExtensions.ReadManifestResourceText(Assembly,System.String)
  name: ReadManifestResourceText(Assembly, String)
  href: api/Yoakke.SourceGenerator.Common.AssemblyExtensions.html#Yoakke_SourceGenerator_Common_AssemblyExtensions_ReadManifestResourceText_Assembly_System_String_
  commentId: M:Yoakke.SourceGenerator.Common.AssemblyExtensions.ReadManifestResourceText(Assembly,System.String)
  fullName: Yoakke.SourceGenerator.Common.AssemblyExtensions.ReadManifestResourceText(Assembly, System.String)
  nameWithType: AssemblyExtensions.ReadManifestResourceText(Assembly, String)
- uid: Yoakke.SourceGenerator.Common.AssemblyExtensions.ReadManifestResourceText*
  name: ReadManifestResourceText
  href: api/Yoakke.SourceGenerator.Common.AssemblyExtensions.html#Yoakke_SourceGenerator_Common_AssemblyExtensions_ReadManifestResourceText_
  commentId: Overload:Yoakke.SourceGenerator.Common.AssemblyExtensions.ReadManifestResourceText
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.AssemblyExtensions.ReadManifestResourceText
  nameWithType: AssemblyExtensions.ReadManifestResourceText
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions
  name: Yoakke.SourceGenerator.Common.RoslynExtensions
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.html
  commentId: N:Yoakke.SourceGenerator.Common.RoslynExtensions
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions
  nameWithType: Yoakke.SourceGenerator.Common.RoslynExtensions
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions
  name: AttributeDataExtensions
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.html
  commentId: T:Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions
  nameWithType: AttributeDataExtensions
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.GetCtorValue(AttributeData,System.Int32)
  name: GetCtorValue(AttributeData, Int32)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_AttributeDataExtensions_GetCtorValue_AttributeData_System_Int32_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.GetCtorValue(AttributeData,System.Int32)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.GetCtorValue(AttributeData, System.Int32)
  nameWithType: AttributeDataExtensions.GetCtorValue(AttributeData, Int32)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.GetCtorValue(AttributeData,System.String)
  name: GetCtorValue(AttributeData, String)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_AttributeDataExtensions_GetCtorValue_AttributeData_System_String_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.GetCtorValue(AttributeData,System.String)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.GetCtorValue(AttributeData, System.String)
  nameWithType: AttributeDataExtensions.GetCtorValue(AttributeData, String)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.GetCtorValue*
  name: GetCtorValue
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_AttributeDataExtensions_GetCtorValue_
  commentId: Overload:Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.GetCtorValue
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.GetCtorValue
  nameWithType: AttributeDataExtensions.GetCtorValue
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.GetCtorValue``1(AttributeData,System.Int32)
  name: GetCtorValue<T>(AttributeData, Int32)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_AttributeDataExtensions_GetCtorValue__1_AttributeData_System_Int32_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.GetCtorValue``1(AttributeData,System.Int32)
  name.vb: GetCtorValue(Of T)(AttributeData, Int32)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.GetCtorValue<T>(AttributeData, System.Int32)
  fullName.vb: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.GetCtorValue(Of T)(AttributeData, System.Int32)
  nameWithType: AttributeDataExtensions.GetCtorValue<T>(AttributeData, Int32)
  nameWithType.vb: AttributeDataExtensions.GetCtorValue(Of T)(AttributeData, Int32)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.GetCtorValue``1(AttributeData,System.String)
  name: GetCtorValue<T>(AttributeData, String)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_AttributeDataExtensions_GetCtorValue__1_AttributeData_System_String_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.GetCtorValue``1(AttributeData,System.String)
  name.vb: GetCtorValue(Of T)(AttributeData, String)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.GetCtorValue<T>(AttributeData, System.String)
  fullName.vb: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.GetCtorValue(Of T)(AttributeData, System.String)
  nameWithType: AttributeDataExtensions.GetCtorValue<T>(AttributeData, String)
  nameWithType.vb: AttributeDataExtensions.GetCtorValue(Of T)(AttributeData, String)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.Parse(AttributeData,Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor)
  name: Parse(AttributeData, AttributeDescriptor)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_AttributeDataExtensions_Parse_AttributeData_Yoakke_SourceGenerator_Common_RoslynExtensions_AttributeDescriptor_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.Parse(AttributeData,Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.Parse(AttributeData, Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor)
  nameWithType: AttributeDataExtensions.Parse(AttributeData, AttributeDescriptor)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.Parse*
  name: Parse
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_AttributeDataExtensions_Parse_
  commentId: Overload:Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.Parse
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.Parse
  nameWithType: AttributeDataExtensions.Parse
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.ParseInto*
  name: ParseInto
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_AttributeDataExtensions_ParseInto_
  commentId: Overload:Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.ParseInto
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.ParseInto
  nameWithType: AttributeDataExtensions.ParseInto
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.ParseInto``1(AttributeData)
  name: ParseInto<T>(AttributeData)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_AttributeDataExtensions_ParseInto__1_AttributeData_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.ParseInto``1(AttributeData)
  name.vb: ParseInto(Of T)(AttributeData)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.ParseInto<T>(AttributeData)
  fullName.vb: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.ParseInto(Of T)(AttributeData)
  nameWithType: AttributeDataExtensions.ParseInto<T>(AttributeData)
  nameWithType.vb: AttributeDataExtensions.ParseInto(Of T)(AttributeData)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.TryGetCtorValue(AttributeData,System.Int32,System.Nullable{System.Object}@)
  name: TryGetCtorValue(AttributeData, Int32, out Nullable<Object>)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_AttributeDataExtensions_TryGetCtorValue_AttributeData_System_Int32_System_Nullable_System_Object___
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.TryGetCtorValue(AttributeData,System.Int32,System.Nullable{System.Object}@)
  name.vb: TryGetCtorValue(AttributeData, Int32, ByRef Nullable(Of Object))
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.TryGetCtorValue(AttributeData, System.Int32, out System.Nullable<System.Object>)
  fullName.vb: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.TryGetCtorValue(AttributeData, System.Int32, ByRef System.Nullable(Of System.Object))
  nameWithType: AttributeDataExtensions.TryGetCtorValue(AttributeData, Int32, out Nullable<Object>)
  nameWithType.vb: AttributeDataExtensions.TryGetCtorValue(AttributeData, Int32, ByRef Nullable(Of Object))
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.TryGetCtorValue(AttributeData,System.String,System.Nullable{System.Object}@)
  name: TryGetCtorValue(AttributeData, String, out Nullable<Object>)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_AttributeDataExtensions_TryGetCtorValue_AttributeData_System_String_System_Nullable_System_Object___
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.TryGetCtorValue(AttributeData,System.String,System.Nullable{System.Object}@)
  name.vb: TryGetCtorValue(AttributeData, String, ByRef Nullable(Of Object))
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.TryGetCtorValue(AttributeData, System.String, out System.Nullable<System.Object>)
  fullName.vb: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.TryGetCtorValue(AttributeData, System.String, ByRef System.Nullable(Of System.Object))
  nameWithType: AttributeDataExtensions.TryGetCtorValue(AttributeData, String, out Nullable<Object>)
  nameWithType.vb: AttributeDataExtensions.TryGetCtorValue(AttributeData, String, ByRef Nullable(Of Object))
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.TryGetCtorValue*
  name: TryGetCtorValue
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_AttributeDataExtensions_TryGetCtorValue_
  commentId: Overload:Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.TryGetCtorValue
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.TryGetCtorValue
  nameWithType: AttributeDataExtensions.TryGetCtorValue
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.TryGetCtorValue``1(AttributeData,System.Int32,``0@)
  name: TryGetCtorValue<T>(AttributeData, Int32, out T)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_AttributeDataExtensions_TryGetCtorValue__1_AttributeData_System_Int32___0__
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.TryGetCtorValue``1(AttributeData,System.Int32,``0@)
  name.vb: TryGetCtorValue(Of T)(AttributeData, Int32, ByRef T)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.TryGetCtorValue<T>(AttributeData, System.Int32, out T)
  fullName.vb: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.TryGetCtorValue(Of T)(AttributeData, System.Int32, ByRef T)
  nameWithType: AttributeDataExtensions.TryGetCtorValue<T>(AttributeData, Int32, out T)
  nameWithType.vb: AttributeDataExtensions.TryGetCtorValue(Of T)(AttributeData, Int32, ByRef T)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.TryGetCtorValue``1(AttributeData,System.String,``0@)
  name: TryGetCtorValue<T>(AttributeData, String, out T)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_AttributeDataExtensions_TryGetCtorValue__1_AttributeData_System_String___0__
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.TryGetCtorValue``1(AttributeData,System.String,``0@)
  name.vb: TryGetCtorValue(Of T)(AttributeData, String, ByRef T)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.TryGetCtorValue<T>(AttributeData, System.String, out T)
  fullName.vb: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDataExtensions.TryGetCtorValue(Of T)(AttributeData, System.String, ByRef T)
  nameWithType: AttributeDataExtensions.TryGetCtorValue<T>(AttributeData, String, out T)
  nameWithType.vb: AttributeDataExtensions.TryGetCtorValue(Of T)(AttributeData, String, ByRef T)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor
  name: AttributeDescriptor
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor.html
  commentId: T:Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor
  nameWithType: AttributeDescriptor
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor.Parse(AttributeData)
  name: Parse(AttributeData)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor.html#Yoakke_SourceGenerator_Common_RoslynExtensions_AttributeDescriptor_Parse_AttributeData_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor.Parse(AttributeData)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor.Parse(AttributeData)
  nameWithType: AttributeDescriptor.Parse(AttributeData)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor.Parse*
  name: Parse
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor.html#Yoakke_SourceGenerator_Common_RoslynExtensions_AttributeDescriptor_Parse_
  commentId: Overload:Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor.Parse
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor.Parse
  nameWithType: AttributeDescriptor.Parse
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor.WithParameter(System.String,System.Nullable{System.Object})
  name: WithParameter(String, Nullable<Object>)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor.html#Yoakke_SourceGenerator_Common_RoslynExtensions_AttributeDescriptor_WithParameter_System_String_System_Nullable_System_Object__
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor.WithParameter(System.String,System.Nullable{System.Object})
  name.vb: WithParameter(String, Nullable(Of Object))
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor.WithParameter(System.String, System.Nullable<System.Object>)
  fullName.vb: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor.WithParameter(System.String, System.Nullable(Of System.Object))
  nameWithType: AttributeDescriptor.WithParameter(String, Nullable<Object>)
  nameWithType.vb: AttributeDescriptor.WithParameter(String, Nullable(Of Object))
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor.WithParameter*
  name: WithParameter
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor.html#Yoakke_SourceGenerator_Common_RoslynExtensions_AttributeDescriptor_WithParameter_
  commentId: Overload:Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor.WithParameter
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.AttributeDescriptor.WithParameter
  nameWithType: AttributeDescriptor.WithParameter
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions
  name: SymbolExtensions
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html
  commentId: T:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions
  nameWithType: SymbolExtensions
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.CanDeclareInsideExternally(ISymbol)
  name: CanDeclareInsideExternally(ISymbol)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_CanDeclareInsideExternally_ISymbol_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.CanDeclareInsideExternally(ISymbol)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.CanDeclareInsideExternally(ISymbol)
  nameWithType: SymbolExtensions.CanDeclareInsideExternally(ISymbol)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.CanDeclareInsideExternally*
  name: CanDeclareInsideExternally
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_CanDeclareInsideExternally_
  commentId: Overload:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.CanDeclareInsideExternally
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.CanDeclareInsideExternally
  nameWithType: SymbolExtensions.CanDeclareInsideExternally
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAllDeclaredTypes(IAssemblySymbol)
  name: GetAllDeclaredTypes(IAssemblySymbol)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_GetAllDeclaredTypes_IAssemblySymbol_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAllDeclaredTypes(IAssemblySymbol)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAllDeclaredTypes(IAssemblySymbol)
  nameWithType: SymbolExtensions.GetAllDeclaredTypes(IAssemblySymbol)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAllDeclaredTypes(INamedTypeSymbol)
  name: GetAllDeclaredTypes(INamedTypeSymbol)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_GetAllDeclaredTypes_INamedTypeSymbol_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAllDeclaredTypes(INamedTypeSymbol)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAllDeclaredTypes(INamedTypeSymbol)
  nameWithType: SymbolExtensions.GetAllDeclaredTypes(INamedTypeSymbol)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAllDeclaredTypes(INamespaceSymbol)
  name: GetAllDeclaredTypes(INamespaceSymbol)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_GetAllDeclaredTypes_INamespaceSymbol_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAllDeclaredTypes(INamespaceSymbol)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAllDeclaredTypes(INamespaceSymbol)
  nameWithType: SymbolExtensions.GetAllDeclaredTypes(INamespaceSymbol)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAllDeclaredTypes*
  name: GetAllDeclaredTypes
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_GetAllDeclaredTypes_
  commentId: Overload:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAllDeclaredTypes
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAllDeclaredTypes
  nameWithType: SymbolExtensions.GetAllDeclaredTypes
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAttribute(ISymbol,INamedTypeSymbol)
  name: GetAttribute(ISymbol, INamedTypeSymbol)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_GetAttribute_ISymbol_INamedTypeSymbol_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAttribute(ISymbol,INamedTypeSymbol)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAttribute(ISymbol, INamedTypeSymbol)
  nameWithType: SymbolExtensions.GetAttribute(ISymbol, INamedTypeSymbol)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAttribute*
  name: GetAttribute
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_GetAttribute_
  commentId: Overload:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAttribute
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAttribute
  nameWithType: SymbolExtensions.GetAttribute
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAttribute``1(ISymbol,INamedTypeSymbol)
  name: GetAttribute<T>(ISymbol, INamedTypeSymbol)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_GetAttribute__1_ISymbol_INamedTypeSymbol_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAttribute``1(ISymbol,INamedTypeSymbol)
  name.vb: GetAttribute(Of T)(ISymbol, INamedTypeSymbol)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAttribute<T>(ISymbol, INamedTypeSymbol)
  fullName.vb: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAttribute(Of T)(ISymbol, INamedTypeSymbol)
  nameWithType: SymbolExtensions.GetAttribute<T>(ISymbol, INamedTypeSymbol)
  nameWithType.vb: SymbolExtensions.GetAttribute(Of T)(ISymbol, INamedTypeSymbol)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAttributes(ISymbol,INamedTypeSymbol)
  name: GetAttributes(ISymbol, INamedTypeSymbol)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_GetAttributes_ISymbol_INamedTypeSymbol_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAttributes(ISymbol,INamedTypeSymbol)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAttributes(ISymbol, INamedTypeSymbol)
  nameWithType: SymbolExtensions.GetAttributes(ISymbol, INamedTypeSymbol)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAttributes*
  name: GetAttributes
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_GetAttributes_
  commentId: Overload:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAttributes
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAttributes
  nameWithType: SymbolExtensions.GetAttributes
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAttributes``1(ISymbol,INamedTypeSymbol)
  name: GetAttributes<T>(ISymbol, INamedTypeSymbol)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_GetAttributes__1_ISymbol_INamedTypeSymbol_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAttributes``1(ISymbol,INamedTypeSymbol)
  name.vb: GetAttributes(Of T)(ISymbol, INamedTypeSymbol)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAttributes<T>(ISymbol, INamedTypeSymbol)
  fullName.vb: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetAttributes(Of T)(ISymbol, INamedTypeSymbol)
  nameWithType: SymbolExtensions.GetAttributes<T>(ISymbol, INamedTypeSymbol)
  nameWithType.vb: SymbolExtensions.GetAttributes(Of T)(ISymbol, INamedTypeSymbol)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetContainingTypeChain(INamedTypeSymbol)
  name: GetContainingTypeChain(INamedTypeSymbol)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_GetContainingTypeChain_INamedTypeSymbol_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetContainingTypeChain(INamedTypeSymbol)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetContainingTypeChain(INamedTypeSymbol)
  nameWithType: SymbolExtensions.GetContainingTypeChain(INamedTypeSymbol)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetContainingTypeChain*
  name: GetContainingTypeChain
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_GetContainingTypeChain_
  commentId: Overload:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetContainingTypeChain
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetContainingTypeChain
  nameWithType: SymbolExtensions.GetContainingTypeChain
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetTypeEnclosure(INamedTypeSymbol)
  name: GetTypeEnclosure(INamedTypeSymbol)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_GetTypeEnclosure_INamedTypeSymbol_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetTypeEnclosure(INamedTypeSymbol)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetTypeEnclosure(INamedTypeSymbol)
  nameWithType: SymbolExtensions.GetTypeEnclosure(INamedTypeSymbol)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetTypeEnclosure*
  name: GetTypeEnclosure
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_GetTypeEnclosure_
  commentId: Overload:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetTypeEnclosure
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetTypeEnclosure
  nameWithType: SymbolExtensions.GetTypeEnclosure
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetTypeKindName(ITypeSymbol)
  name: GetTypeKindName(ITypeSymbol)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_GetTypeKindName_ITypeSymbol_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetTypeKindName(ITypeSymbol)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetTypeKindName(ITypeSymbol)
  nameWithType: SymbolExtensions.GetTypeKindName(ITypeSymbol)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetTypeKindName*
  name: GetTypeKindName
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_GetTypeKindName_
  commentId: Overload:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetTypeKindName
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.GetTypeKindName
  nameWithType: SymbolExtensions.GetTypeKindName
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.HasAttribute(ISymbol,INamedTypeSymbol)
  name: HasAttribute(ISymbol, INamedTypeSymbol)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_HasAttribute_ISymbol_INamedTypeSymbol_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.HasAttribute(ISymbol,INamedTypeSymbol)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.HasAttribute(ISymbol, INamedTypeSymbol)
  nameWithType: SymbolExtensions.HasAttribute(ISymbol, INamedTypeSymbol)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.HasAttribute*
  name: HasAttribute
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_HasAttribute_
  commentId: Overload:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.HasAttribute
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.HasAttribute
  nameWithType: SymbolExtensions.HasAttribute
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.HasBackingField(IPropertySymbol)
  name: HasBackingField(IPropertySymbol)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_HasBackingField_IPropertySymbol_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.HasBackingField(IPropertySymbol)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.HasBackingField(IPropertySymbol)
  nameWithType: SymbolExtensions.HasBackingField(IPropertySymbol)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.HasBackingField*
  name: HasBackingField
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_HasBackingField_
  commentId: Overload:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.HasBackingField
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.HasBackingField
  nameWithType: SymbolExtensions.HasBackingField
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.HasNoUserDefinedCtors(INamedTypeSymbol)
  name: HasNoUserDefinedCtors(INamedTypeSymbol)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_HasNoUserDefinedCtors_INamedTypeSymbol_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.HasNoUserDefinedCtors(INamedTypeSymbol)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.HasNoUserDefinedCtors(INamedTypeSymbol)
  nameWithType: SymbolExtensions.HasNoUserDefinedCtors(INamedTypeSymbol)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.HasNoUserDefinedCtors*
  name: HasNoUserDefinedCtors
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_HasNoUserDefinedCtors_
  commentId: Overload:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.HasNoUserDefinedCtors
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.HasNoUserDefinedCtors
  nameWithType: SymbolExtensions.HasNoUserDefinedCtors
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.ImplementsGenericInterface(ITypeSymbol,INamedTypeSymbol)
  name: ImplementsGenericInterface(ITypeSymbol, INamedTypeSymbol)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_ImplementsGenericInterface_ITypeSymbol_INamedTypeSymbol_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.ImplementsGenericInterface(ITypeSymbol,INamedTypeSymbol)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.ImplementsGenericInterface(ITypeSymbol, INamedTypeSymbol)
  nameWithType: SymbolExtensions.ImplementsGenericInterface(ITypeSymbol, INamedTypeSymbol)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.ImplementsGenericInterface(ITypeSymbol,INamedTypeSymbol,System.Nullable{IReadOnlyList{ITypeSymbol}}@)
  name: ImplementsGenericInterface(ITypeSymbol, INamedTypeSymbol, out Nullable<IReadOnlyList<ITypeSymbol>>)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_ImplementsGenericInterface_ITypeSymbol_INamedTypeSymbol_System_Nullable_IReadOnlyList_ITypeSymbol____
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.ImplementsGenericInterface(ITypeSymbol,INamedTypeSymbol,System.Nullable{IReadOnlyList{ITypeSymbol}}@)
  name.vb: ImplementsGenericInterface(ITypeSymbol, INamedTypeSymbol, ByRef Nullable(Of IReadOnlyList(Of ITypeSymbol)))
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.ImplementsGenericInterface(ITypeSymbol, INamedTypeSymbol, out System.Nullable<IReadOnlyList<ITypeSymbol>>)
  fullName.vb: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.ImplementsGenericInterface(ITypeSymbol, INamedTypeSymbol, ByRef System.Nullable(Of IReadOnlyList(Of ITypeSymbol)))
  nameWithType: SymbolExtensions.ImplementsGenericInterface(ITypeSymbol, INamedTypeSymbol, out Nullable<IReadOnlyList<ITypeSymbol>>)
  nameWithType.vb: SymbolExtensions.ImplementsGenericInterface(ITypeSymbol, INamedTypeSymbol, ByRef Nullable(Of IReadOnlyList(Of ITypeSymbol)))
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.ImplementsGenericInterface*
  name: ImplementsGenericInterface
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_ImplementsGenericInterface_
  commentId: Overload:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.ImplementsGenericInterface
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.ImplementsGenericInterface
  nameWithType: SymbolExtensions.ImplementsGenericInterface
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.ImplementsInterface(ITypeSymbol,INamedTypeSymbol)
  name: ImplementsInterface(ITypeSymbol, INamedTypeSymbol)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_ImplementsInterface_ITypeSymbol_INamedTypeSymbol_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.ImplementsInterface(ITypeSymbol,INamedTypeSymbol)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.ImplementsInterface(ITypeSymbol, INamedTypeSymbol)
  nameWithType: SymbolExtensions.ImplementsInterface(ITypeSymbol, INamedTypeSymbol)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.ImplementsInterface*
  name: ImplementsInterface
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_ImplementsInterface_
  commentId: Overload:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.ImplementsInterface
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.ImplementsInterface
  nameWithType: SymbolExtensions.ImplementsInterface
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.IsNested(ISymbol)
  name: IsNested(ISymbol)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_IsNested_ISymbol_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.IsNested(ISymbol)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.IsNested(ISymbol)
  nameWithType: SymbolExtensions.IsNested(ISymbol)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.IsNested*
  name: IsNested
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_IsNested_
  commentId: Overload:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.IsNested
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.IsNested
  nameWithType: SymbolExtensions.IsNested
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.IsPartial(ITypeSymbol)
  name: IsPartial(ITypeSymbol)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_IsPartial_ITypeSymbol_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.IsPartial(ITypeSymbol)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.IsPartial(ITypeSymbol)
  nameWithType: SymbolExtensions.IsPartial(ITypeSymbol)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.IsPartial*
  name: IsPartial
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_IsPartial_
  commentId: Overload:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.IsPartial
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.IsPartial
  nameWithType: SymbolExtensions.IsPartial
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.TryGetAttribute(ISymbol,INamedTypeSymbol,AttributeData@)
  name: TryGetAttribute(ISymbol, INamedTypeSymbol, out AttributeData)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_TryGetAttribute_ISymbol_INamedTypeSymbol_AttributeData__
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.TryGetAttribute(ISymbol,INamedTypeSymbol,AttributeData@)
  name.vb: TryGetAttribute(ISymbol, INamedTypeSymbol, ByRef AttributeData)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.TryGetAttribute(ISymbol, INamedTypeSymbol, out AttributeData)
  fullName.vb: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.TryGetAttribute(ISymbol, INamedTypeSymbol, ByRef AttributeData)
  nameWithType: SymbolExtensions.TryGetAttribute(ISymbol, INamedTypeSymbol, out AttributeData)
  nameWithType.vb: SymbolExtensions.TryGetAttribute(ISymbol, INamedTypeSymbol, ByRef AttributeData)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.TryGetAttribute*
  name: TryGetAttribute
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_TryGetAttribute_
  commentId: Overload:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.TryGetAttribute
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.TryGetAttribute
  nameWithType: SymbolExtensions.TryGetAttribute
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.TryGetAttribute``1(ISymbol,INamedTypeSymbol,``0@)
  name: TryGetAttribute<T>(ISymbol, INamedTypeSymbol, out T)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SymbolExtensions_TryGetAttribute__1_ISymbol_INamedTypeSymbol___0__
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.TryGetAttribute``1(ISymbol,INamedTypeSymbol,``0@)
  name.vb: TryGetAttribute(Of T)(ISymbol, INamedTypeSymbol, ByRef T)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.TryGetAttribute<T>(ISymbol, INamedTypeSymbol, out T)
  fullName.vb: Yoakke.SourceGenerator.Common.RoslynExtensions.SymbolExtensions.TryGetAttribute(Of T)(ISymbol, INamedTypeSymbol, ByRef T)
  nameWithType: SymbolExtensions.TryGetAttribute<T>(ISymbol, INamedTypeSymbol, out T)
  nameWithType.vb: SymbolExtensions.TryGetAttribute(Of T)(ISymbol, INamedTypeSymbol, ByRef T)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SyntaxExtensions
  name: SyntaxExtensions
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SyntaxExtensions.html
  commentId: T:Yoakke.SourceGenerator.Common.RoslynExtensions.SyntaxExtensions
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SyntaxExtensions
  nameWithType: SyntaxExtensions
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SyntaxExtensions.IsPartial(TypeDeclarationSyntax)
  name: IsPartial(TypeDeclarationSyntax)
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SyntaxExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SyntaxExtensions_IsPartial_TypeDeclarationSyntax_
  commentId: M:Yoakke.SourceGenerator.Common.RoslynExtensions.SyntaxExtensions.IsPartial(TypeDeclarationSyntax)
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SyntaxExtensions.IsPartial(TypeDeclarationSyntax)
  nameWithType: SyntaxExtensions.IsPartial(TypeDeclarationSyntax)
- uid: Yoakke.SourceGenerator.Common.RoslynExtensions.SyntaxExtensions.IsPartial*
  name: IsPartial
  href: api/Yoakke.SourceGenerator.Common.RoslynExtensions.SyntaxExtensions.html#Yoakke_SourceGenerator_Common_RoslynExtensions_SyntaxExtensions_IsPartial_
  commentId: Overload:Yoakke.SourceGenerator.Common.RoslynExtensions.SyntaxExtensions.IsPartial
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.RoslynExtensions.SyntaxExtensions.IsPartial
  nameWithType: SyntaxExtensions.IsPartial
- uid: Yoakke.SourceGenerator.Common.ScribanExtensions
  name: ScribanExtensions
  href: api/Yoakke.SourceGenerator.Common.ScribanExtensions.html
  commentId: T:Yoakke.SourceGenerator.Common.ScribanExtensions
  fullName: Yoakke.SourceGenerator.Common.ScribanExtensions
  nameWithType: ScribanExtensions
- uid: Yoakke.SourceGenerator.Common.ScribanExtensions.ReadEmbeddedScribanTemplate(Assembly,System.String)
  name: ReadEmbeddedScribanTemplate(Assembly, String)
  href: api/Yoakke.SourceGenerator.Common.ScribanExtensions.html#Yoakke_SourceGenerator_Common_ScribanExtensions_ReadEmbeddedScribanTemplate_Assembly_System_String_
  commentId: M:Yoakke.SourceGenerator.Common.ScribanExtensions.ReadEmbeddedScribanTemplate(Assembly,System.String)
  fullName: Yoakke.SourceGenerator.Common.ScribanExtensions.ReadEmbeddedScribanTemplate(Assembly, System.String)
  nameWithType: ScribanExtensions.ReadEmbeddedScribanTemplate(Assembly, String)
- uid: Yoakke.SourceGenerator.Common.ScribanExtensions.ReadEmbeddedScribanTemplate*
  name: ReadEmbeddedScribanTemplate
  href: api/Yoakke.SourceGenerator.Common.ScribanExtensions.html#Yoakke_SourceGenerator_Common_ScribanExtensions_ReadEmbeddedScribanTemplate_
  commentId: Overload:Yoakke.SourceGenerator.Common.ScribanExtensions.ReadEmbeddedScribanTemplate
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.ScribanExtensions.ReadEmbeddedScribanTemplate
  nameWithType: ScribanExtensions.ReadEmbeddedScribanTemplate
- uid: Yoakke.SourceGenerator.Common.ScribanExtensions.Render(Template,System.Nullable{System.Object},System.Boolean,CancellationToken)
  name: Render(Template, Nullable<Object>, Boolean, CancellationToken)
  href: api/Yoakke.SourceGenerator.Common.ScribanExtensions.html#Yoakke_SourceGenerator_Common_ScribanExtensions_Render_Template_System_Nullable_System_Object__System_Boolean_CancellationToken_
  commentId: M:Yoakke.SourceGenerator.Common.ScribanExtensions.Render(Template,System.Nullable{System.Object},System.Boolean,CancellationToken)
  name.vb: Render(Template, Nullable(Of Object), Boolean, CancellationToken)
  fullName: Yoakke.SourceGenerator.Common.ScribanExtensions.Render(Template, System.Nullable<System.Object>, System.Boolean, CancellationToken)
  fullName.vb: Yoakke.SourceGenerator.Common.ScribanExtensions.Render(Template, System.Nullable(Of System.Object), System.Boolean, CancellationToken)
  nameWithType: ScribanExtensions.Render(Template, Nullable<Object>, Boolean, CancellationToken)
  nameWithType.vb: ScribanExtensions.Render(Template, Nullable(Of Object), Boolean, CancellationToken)
- uid: Yoakke.SourceGenerator.Common.ScribanExtensions.Render*
  name: Render
  href: api/Yoakke.SourceGenerator.Common.ScribanExtensions.html#Yoakke_SourceGenerator_Common_ScribanExtensions_Render_
  commentId: Overload:Yoakke.SourceGenerator.Common.ScribanExtensions.Render
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.ScribanExtensions.Render
  nameWithType: ScribanExtensions.Render
- uid: Yoakke.SourceGenerator.Common.SourceGeneratorExtensions
  name: SourceGeneratorExtensions
  href: api/Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.html
  commentId: T:Yoakke.SourceGenerator.Common.SourceGeneratorExtensions
  fullName: Yoakke.SourceGenerator.Common.SourceGeneratorExtensions
  nameWithType: SourceGeneratorExtensions
- uid: Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.CreateAttributedSyntaxProvider*
  name: CreateAttributedSyntaxProvider
  href: api/Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.html#Yoakke_SourceGenerator_Common_SourceGeneratorExtensions_CreateAttributedSyntaxProvider_
  commentId: Overload:Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.CreateAttributedSyntaxProvider
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.CreateAttributedSyntaxProvider
  nameWithType: SourceGeneratorExtensions.CreateAttributedSyntaxProvider
- uid: Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.CreateAttributedSyntaxProvider``1(SyntaxValueProvider,Type)
  name: CreateAttributedSyntaxProvider<T>(SyntaxValueProvider, Type)
  href: api/Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.html#Yoakke_SourceGenerator_Common_SourceGeneratorExtensions_CreateAttributedSyntaxProvider__1_SyntaxValueProvider_Type_
  commentId: M:Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.CreateAttributedSyntaxProvider``1(SyntaxValueProvider,Type)
  name.vb: CreateAttributedSyntaxProvider(Of T)(SyntaxValueProvider, Type)
  fullName: Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.CreateAttributedSyntaxProvider<T>(SyntaxValueProvider, Type)
  fullName.vb: Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.CreateAttributedSyntaxProvider(Of T)(SyntaxValueProvider, Type)
  nameWithType: SourceGeneratorExtensions.CreateAttributedSyntaxProvider<T>(SyntaxValueProvider, Type)
  nameWithType.vb: SourceGeneratorExtensions.CreateAttributedSyntaxProvider(Of T)(SyntaxValueProvider, Type)
- uid: Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.GetRequiredType(Compilation,Type)
  name: GetRequiredType(Compilation, Type)
  href: api/Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.html#Yoakke_SourceGenerator_Common_SourceGeneratorExtensions_GetRequiredType_Compilation_Type_
  commentId: M:Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.GetRequiredType(Compilation,Type)
  fullName: Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.GetRequiredType(Compilation, Type)
  nameWithType: SourceGeneratorExtensions.GetRequiredType(Compilation, Type)
- uid: Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.GetRequiredType*
  name: GetRequiredType
  href: api/Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.html#Yoakke_SourceGenerator_Common_SourceGeneratorExtensions_GetRequiredType_
  commentId: Overload:Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.GetRequiredType
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.GetRequiredType
  nameWithType: SourceGeneratorExtensions.GetRequiredType
- uid: Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.RegisterEmbeddedSourceCodeInjection(IncrementalGeneratorInitializationContext,System.String)
  name: RegisterEmbeddedSourceCodeInjection(IncrementalGeneratorInitializationContext, String)
  href: api/Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.html#Yoakke_SourceGenerator_Common_SourceGeneratorExtensions_RegisterEmbeddedSourceCodeInjection_IncrementalGeneratorInitializationContext_System_String_
  commentId: M:Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.RegisterEmbeddedSourceCodeInjection(IncrementalGeneratorInitializationContext,System.String)
  fullName: Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.RegisterEmbeddedSourceCodeInjection(IncrementalGeneratorInitializationContext, System.String)
  nameWithType: SourceGeneratorExtensions.RegisterEmbeddedSourceCodeInjection(IncrementalGeneratorInitializationContext, String)
- uid: Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.RegisterEmbeddedSourceCodeInjection*
  name: RegisterEmbeddedSourceCodeInjection
  href: api/Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.html#Yoakke_SourceGenerator_Common_SourceGeneratorExtensions_RegisterEmbeddedSourceCodeInjection_
  commentId: Overload:Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.RegisterEmbeddedSourceCodeInjection
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.RegisterEmbeddedSourceCodeInjection
  nameWithType: SourceGeneratorExtensions.RegisterEmbeddedSourceCodeInjection
- uid: Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.RegisterTwoPhaseSourceOutput*
  name: RegisterTwoPhaseSourceOutput
  href: api/Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.html#Yoakke_SourceGenerator_Common_SourceGeneratorExtensions_RegisterTwoPhaseSourceOutput_
  commentId: Overload:Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.RegisterTwoPhaseSourceOutput
  isSpec: "True"
  fullName: Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.RegisterTwoPhaseSourceOutput
  nameWithType: SourceGeneratorExtensions.RegisterTwoPhaseSourceOutput
- uid: Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.RegisterTwoPhaseSourceOutput``3(IncrementalGeneratorInitializationContext,IncrementalValuesProvider{``0},Func{Compilation,``2},Func{SourceProductionContext,``2,ISymbol,CancellationToken,``1},Func{``1,CancellationToken,System.Nullable{System.Object}},Func{Compilation,Scriban.Template})
  name: RegisterTwoPhaseSourceOutput<TSyntax, TGenerationModel, TExtra>(IncrementalGeneratorInitializationContext, IncrementalValuesProvider<TSyntax>, Func<Compilation, TExtra>, Func<SourceProductionContext, TExtra, ISymbol, CancellationToken, TGenerationModel>, Func<TGenerationModel, CancellationToken, Nullable<Object>>, Func<Compilation, Scriban.Template>)
  href: api/Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.html#Yoakke_SourceGenerator_Common_SourceGeneratorExtensions_RegisterTwoPhaseSourceOutput__3_IncrementalGeneratorInitializationContext_IncrementalValuesProvider___0__Func_Compilation___2__Func_SourceProductionContext___2_ISymbol_CancellationToken___1__Func___1_CancellationToken_System_Nullable_System_Object___Func_Compilation_Scriban_Template__
  commentId: M:Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.RegisterTwoPhaseSourceOutput``3(IncrementalGeneratorInitializationContext,IncrementalValuesProvider{``0},Func{Compilation,``2},Func{SourceProductionContext,``2,ISymbol,CancellationToken,``1},Func{``1,CancellationToken,System.Nullable{System.Object}},Func{Compilation,Scriban.Template})
  name.vb: RegisterTwoPhaseSourceOutput(Of TSyntax, TGenerationModel, TExtra)(IncrementalGeneratorInitializationContext, IncrementalValuesProvider(Of TSyntax), Func(Of Compilation, TExtra), Func(Of SourceProductionContext, TExtra, ISymbol, CancellationToken, TGenerationModel), Func(Of TGenerationModel, CancellationToken, Nullable(Of Object)), Func(Of Compilation, Scriban.Template))
  fullName: Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.RegisterTwoPhaseSourceOutput<TSyntax, TGenerationModel, TExtra>(IncrementalGeneratorInitializationContext, IncrementalValuesProvider<TSyntax>, Func<Compilation, TExtra>, Func<SourceProductionContext, TExtra, ISymbol, CancellationToken, TGenerationModel>, Func<TGenerationModel, CancellationToken, System.Nullable<System.Object>>, Func<Compilation, Scriban.Template>)
  fullName.vb: Yoakke.SourceGenerator.Common.SourceGeneratorExtensions.RegisterTwoPhaseSourceOutput(Of TSyntax, TGenerationModel, TExtra)(IncrementalGeneratorInitializationContext, IncrementalValuesProvider(Of TSyntax), Func(Of Compilation, TExtra), Func(Of SourceProductionContext, TExtra, ISymbol, CancellationToken, TGenerationModel), Func(Of TGenerationModel, CancellationToken, System.Nullable(Of System.Object)), Func(Of Compilation, Scriban.Template))
  nameWithType: SourceGeneratorExtensions.RegisterTwoPhaseSourceOutput<TSyntax, TGenerationModel, TExtra>(IncrementalGeneratorInitializationContext, IncrementalValuesProvider<TSyntax>, Func<Compilation, TExtra>, Func<SourceProductionContext, TExtra, ISymbol, CancellationToken, TGenerationModel>, Func<TGenerationModel, CancellationToken, Nullable<Object>>, Func<Compilation, Scriban.Template>)
  nameWithType.vb: SourceGeneratorExtensions.RegisterTwoPhaseSourceOutput(Of TSyntax, TGenerationModel, TExtra)(IncrementalGeneratorInitializationContext, IncrementalValuesProvider(Of TSyntax), Func(Of Compilation, TExtra), Func(Of SourceProductionContext, TExtra, ISymbol, CancellationToken, TGenerationModel), Func(Of TGenerationModel, CancellationToken, Nullable(Of Object)), Func(Of Compilation, Scriban.Template))
- uid: Yoakke.Streams
  name: Yoakke.Streams
  href: api/Yoakke.Streams.html
  commentId: N:Yoakke.Streams
  fullName: Yoakke.Streams
  nameWithType: Yoakke.Streams
- uid: Yoakke.Streams.BufferedStream`1
  name: BufferedStream<T>
  href: api/Yoakke.Streams.BufferedStream-1.html
  commentId: T:Yoakke.Streams.BufferedStream`1
  name.vb: BufferedStream(Of T)
  fullName: Yoakke.Streams.BufferedStream<T>
  fullName.vb: Yoakke.Streams.BufferedStream(Of T)
  nameWithType: BufferedStream<T>
  nameWithType.vb: BufferedStream(Of T)
- uid: Yoakke.Streams.BufferedStream`1.#ctor(Yoakke.Streams.IStream{`0})
  name: BufferedStream(IStream<T>)
  href: api/Yoakke.Streams.BufferedStream-1.html#Yoakke_Streams_BufferedStream_1__ctor_Yoakke_Streams_IStream__0__
  commentId: M:Yoakke.Streams.BufferedStream`1.#ctor(Yoakke.Streams.IStream{`0})
  name.vb: BufferedStream(IStream(Of T))
  fullName: Yoakke.Streams.BufferedStream<T>.BufferedStream(Yoakke.Streams.IStream<T>)
  fullName.vb: Yoakke.Streams.BufferedStream(Of T).BufferedStream(Yoakke.Streams.IStream(Of T))
  nameWithType: BufferedStream<T>.BufferedStream(IStream<T>)
  nameWithType.vb: BufferedStream(Of T).BufferedStream(IStream(Of T))
- uid: Yoakke.Streams.BufferedStream`1.#ctor*
  name: BufferedStream
  href: api/Yoakke.Streams.BufferedStream-1.html#Yoakke_Streams_BufferedStream_1__ctor_
  commentId: Overload:Yoakke.Streams.BufferedStream`1.#ctor
  isSpec: "True"
  fullName: Yoakke.Streams.BufferedStream<T>.BufferedStream
  fullName.vb: Yoakke.Streams.BufferedStream(Of T).BufferedStream
  nameWithType: BufferedStream<T>.BufferedStream
  nameWithType.vb: BufferedStream(Of T).BufferedStream
- uid: Yoakke.Streams.BufferedStream`1.Consume(System.Int32)
  name: Consume(Int32)
  href: api/Yoakke.Streams.BufferedStream-1.html#Yoakke_Streams_BufferedStream_1_Consume_System_Int32_
  commentId: M:Yoakke.Streams.BufferedStream`1.Consume(System.Int32)
  fullName: Yoakke.Streams.BufferedStream<T>.Consume(System.Int32)
  fullName.vb: Yoakke.Streams.BufferedStream(Of T).Consume(System.Int32)
  nameWithType: BufferedStream<T>.Consume(Int32)
  nameWithType.vb: BufferedStream(Of T).Consume(Int32)
- uid: Yoakke.Streams.BufferedStream`1.Consume*
  name: Consume
  href: api/Yoakke.Streams.BufferedStream-1.html#Yoakke_Streams_BufferedStream_1_Consume_
  commentId: Overload:Yoakke.Streams.BufferedStream`1.Consume
  isSpec: "True"
  fullName: Yoakke.Streams.BufferedStream<T>.Consume
  fullName.vb: Yoakke.Streams.BufferedStream(Of T).Consume
  nameWithType: BufferedStream<T>.Consume
  nameWithType.vb: BufferedStream(Of T).Consume
- uid: Yoakke.Streams.BufferedStream`1.Defer(`0)
  name: Defer(T)
  href: api/Yoakke.Streams.BufferedStream-1.html#Yoakke_Streams_BufferedStream_1_Defer__0_
  commentId: M:Yoakke.Streams.BufferedStream`1.Defer(`0)
  fullName: Yoakke.Streams.BufferedStream<T>.Defer(T)
  fullName.vb: Yoakke.Streams.BufferedStream(Of T).Defer(T)
  nameWithType: BufferedStream<T>.Defer(T)
  nameWithType.vb: BufferedStream(Of T).Defer(T)
- uid: Yoakke.Streams.BufferedStream`1.Defer*
  name: Defer
  href: api/Yoakke.Streams.BufferedStream-1.html#Yoakke_Streams_BufferedStream_1_Defer_
  commentId: Overload:Yoakke.Streams.BufferedStream`1.Defer
  isSpec: "True"
  fullName: Yoakke.Streams.BufferedStream<T>.Defer
  fullName.vb: Yoakke.Streams.BufferedStream(Of T).Defer
  nameWithType: BufferedStream<T>.Defer
  nameWithType.vb: BufferedStream(Of T).Defer
- uid: Yoakke.Streams.BufferedStream`1.IsEnd
  name: IsEnd
  href: api/Yoakke.Streams.BufferedStream-1.html#Yoakke_Streams_BufferedStream_1_IsEnd
  commentId: P:Yoakke.Streams.BufferedStream`1.IsEnd
  fullName: Yoakke.Streams.BufferedStream<T>.IsEnd
  fullName.vb: Yoakke.Streams.BufferedStream(Of T).IsEnd
  nameWithType: BufferedStream<T>.IsEnd
  nameWithType.vb: BufferedStream(Of T).IsEnd
- uid: Yoakke.Streams.BufferedStream`1.IsEnd*
  name: IsEnd
  href: api/Yoakke.Streams.BufferedStream-1.html#Yoakke_Streams_BufferedStream_1_IsEnd_
  commentId: Overload:Yoakke.Streams.BufferedStream`1.IsEnd
  isSpec: "True"
  fullName: Yoakke.Streams.BufferedStream<T>.IsEnd
  fullName.vb: Yoakke.Streams.BufferedStream(Of T).IsEnd
  nameWithType: BufferedStream<T>.IsEnd
  nameWithType.vb: BufferedStream(Of T).IsEnd
- uid: Yoakke.Streams.BufferedStream`1.TryConsume(`0@)
  name: TryConsume(out T)
  href: api/Yoakke.Streams.BufferedStream-1.html#Yoakke_Streams_BufferedStream_1_TryConsume__0__
  commentId: M:Yoakke.Streams.BufferedStream`1.TryConsume(`0@)
  name.vb: TryConsume(ByRef T)
  fullName: Yoakke.Streams.BufferedStream<T>.TryConsume(out T)
  fullName.vb: Yoakke.Streams.BufferedStream(Of T).TryConsume(ByRef T)
  nameWithType: BufferedStream<T>.TryConsume(out T)
  nameWithType.vb: BufferedStream(Of T).TryConsume(ByRef T)
- uid: Yoakke.Streams.BufferedStream`1.TryConsume*
  name: TryConsume
  href: api/Yoakke.Streams.BufferedStream-1.html#Yoakke_Streams_BufferedStream_1_TryConsume_
  commentId: Overload:Yoakke.Streams.BufferedStream`1.TryConsume
  isSpec: "True"
  fullName: Yoakke.Streams.BufferedStream<T>.TryConsume
  fullName.vb: Yoakke.Streams.BufferedStream(Of T).TryConsume
  nameWithType: BufferedStream<T>.TryConsume
  nameWithType.vb: BufferedStream(Of T).TryConsume
- uid: Yoakke.Streams.BufferedStream`1.TryLookAhead(System.Int32,`0@)
  name: TryLookAhead(Int32, out T)
  href: api/Yoakke.Streams.BufferedStream-1.html#Yoakke_Streams_BufferedStream_1_TryLookAhead_System_Int32__0__
  commentId: M:Yoakke.Streams.BufferedStream`1.TryLookAhead(System.Int32,`0@)
  name.vb: TryLookAhead(Int32, ByRef T)
  fullName: Yoakke.Streams.BufferedStream<T>.TryLookAhead(System.Int32, out T)
  fullName.vb: Yoakke.Streams.BufferedStream(Of T).TryLookAhead(System.Int32, ByRef T)
  nameWithType: BufferedStream<T>.TryLookAhead(Int32, out T)
  nameWithType.vb: BufferedStream(Of T).TryLookAhead(Int32, ByRef T)
- uid: Yoakke.Streams.BufferedStream`1.TryLookAhead*
  name: TryLookAhead
  href: api/Yoakke.Streams.BufferedStream-1.html#Yoakke_Streams_BufferedStream_1_TryLookAhead_
  commentId: Overload:Yoakke.Streams.BufferedStream`1.TryLookAhead
  isSpec: "True"
  fullName: Yoakke.Streams.BufferedStream<T>.TryLookAhead
  fullName.vb: Yoakke.Streams.BufferedStream(Of T).TryLookAhead
  nameWithType: BufferedStream<T>.TryLookAhead
  nameWithType.vb: BufferedStream(Of T).TryLookAhead
- uid: Yoakke.Streams.BufferedStream`1.TryPeek(`0@)
  name: TryPeek(out T)
  href: api/Yoakke.Streams.BufferedStream-1.html#Yoakke_Streams_BufferedStream_1_TryPeek__0__
  commentId: M:Yoakke.Streams.BufferedStream`1.TryPeek(`0@)
  name.vb: TryPeek(ByRef T)
  fullName: Yoakke.Streams.BufferedStream<T>.TryPeek(out T)
  fullName.vb: Yoakke.Streams.BufferedStream(Of T).TryPeek(ByRef T)
  nameWithType: BufferedStream<T>.TryPeek(out T)
  nameWithType.vb: BufferedStream(Of T).TryPeek(ByRef T)
- uid: Yoakke.Streams.BufferedStream`1.TryPeek*
  name: TryPeek
  href: api/Yoakke.Streams.BufferedStream-1.html#Yoakke_Streams_BufferedStream_1_TryPeek_
  commentId: Overload:Yoakke.Streams.BufferedStream`1.TryPeek
  isSpec: "True"
  fullName: Yoakke.Streams.BufferedStream<T>.TryPeek
  fullName.vb: Yoakke.Streams.BufferedStream(Of T).TryPeek
  nameWithType: BufferedStream<T>.TryPeek
  nameWithType.vb: BufferedStream(Of T).TryPeek
- uid: Yoakke.Streams.BufferedStream`1.Underlying
  name: Underlying
  href: api/Yoakke.Streams.BufferedStream-1.html#Yoakke_Streams_BufferedStream_1_Underlying
  commentId: P:Yoakke.Streams.BufferedStream`1.Underlying
  fullName: Yoakke.Streams.BufferedStream<T>.Underlying
  fullName.vb: Yoakke.Streams.BufferedStream(Of T).Underlying
  nameWithType: BufferedStream<T>.Underlying
  nameWithType.vb: BufferedStream(Of T).Underlying
- uid: Yoakke.Streams.BufferedStream`1.Underlying*
  name: Underlying
  href: api/Yoakke.Streams.BufferedStream-1.html#Yoakke_Streams_BufferedStream_1_Underlying_
  commentId: Overload:Yoakke.Streams.BufferedStream`1.Underlying
  isSpec: "True"
  fullName: Yoakke.Streams.BufferedStream<T>.Underlying
  fullName.vb: Yoakke.Streams.BufferedStream(Of T).Underlying
  nameWithType: BufferedStream<T>.Underlying
  nameWithType.vb: BufferedStream(Of T).Underlying
- uid: Yoakke.Streams.EnumerableStream`1
  name: EnumerableStream<T>
  href: api/Yoakke.Streams.EnumerableStream-1.html
  commentId: T:Yoakke.Streams.EnumerableStream`1
  name.vb: EnumerableStream(Of T)
  fullName: Yoakke.Streams.EnumerableStream<T>
  fullName.vb: Yoakke.Streams.EnumerableStream(Of T)
  nameWithType: EnumerableStream<T>
  nameWithType.vb: EnumerableStream(Of T)
- uid: Yoakke.Streams.EnumerableStream`1.#ctor(IEnumerable{`0})
  name: EnumerableStream(IEnumerable<T>)
  href: api/Yoakke.Streams.EnumerableStream-1.html#Yoakke_Streams_EnumerableStream_1__ctor_IEnumerable__0__
  commentId: M:Yoakke.Streams.EnumerableStream`1.#ctor(IEnumerable{`0})
  name.vb: EnumerableStream(IEnumerable(Of T))
  fullName: Yoakke.Streams.EnumerableStream<T>.EnumerableStream(IEnumerable<T>)
  fullName.vb: Yoakke.Streams.EnumerableStream(Of T).EnumerableStream(IEnumerable(Of T))
  nameWithType: EnumerableStream<T>.EnumerableStream(IEnumerable<T>)
  nameWithType.vb: EnumerableStream(Of T).EnumerableStream(IEnumerable(Of T))
- uid: Yoakke.Streams.EnumerableStream`1.#ctor*
  name: EnumerableStream
  href: api/Yoakke.Streams.EnumerableStream-1.html#Yoakke_Streams_EnumerableStream_1__ctor_
  commentId: Overload:Yoakke.Streams.EnumerableStream`1.#ctor
  isSpec: "True"
  fullName: Yoakke.Streams.EnumerableStream<T>.EnumerableStream
  fullName.vb: Yoakke.Streams.EnumerableStream(Of T).EnumerableStream
  nameWithType: EnumerableStream<T>.EnumerableStream
  nameWithType.vb: EnumerableStream(Of T).EnumerableStream
- uid: Yoakke.Streams.EnumerableStream`1.Consume(System.Int32)
  name: Consume(Int32)
  href: api/Yoakke.Streams.EnumerableStream-1.html#Yoakke_Streams_EnumerableStream_1_Consume_System_Int32_
  commentId: M:Yoakke.Streams.EnumerableStream`1.Consume(System.Int32)
  fullName: Yoakke.Streams.EnumerableStream<T>.Consume(System.Int32)
  fullName.vb: Yoakke.Streams.EnumerableStream(Of T).Consume(System.Int32)
  nameWithType: EnumerableStream<T>.Consume(Int32)
  nameWithType.vb: EnumerableStream(Of T).Consume(Int32)
- uid: Yoakke.Streams.EnumerableStream`1.Consume*
  name: Consume
  href: api/Yoakke.Streams.EnumerableStream-1.html#Yoakke_Streams_EnumerableStream_1_Consume_
  commentId: Overload:Yoakke.Streams.EnumerableStream`1.Consume
  isSpec: "True"
  fullName: Yoakke.Streams.EnumerableStream<T>.Consume
  fullName.vb: Yoakke.Streams.EnumerableStream(Of T).Consume
  nameWithType: EnumerableStream<T>.Consume
  nameWithType.vb: EnumerableStream(Of T).Consume
- uid: Yoakke.Streams.EnumerableStream`1.IsEnd
  name: IsEnd
  href: api/Yoakke.Streams.EnumerableStream-1.html#Yoakke_Streams_EnumerableStream_1_IsEnd
  commentId: P:Yoakke.Streams.EnumerableStream`1.IsEnd
  fullName: Yoakke.Streams.EnumerableStream<T>.IsEnd
  fullName.vb: Yoakke.Streams.EnumerableStream(Of T).IsEnd
  nameWithType: EnumerableStream<T>.IsEnd
  nameWithType.vb: EnumerableStream(Of T).IsEnd
- uid: Yoakke.Streams.EnumerableStream`1.IsEnd*
  name: IsEnd
  href: api/Yoakke.Streams.EnumerableStream-1.html#Yoakke_Streams_EnumerableStream_1_IsEnd_
  commentId: Overload:Yoakke.Streams.EnumerableStream`1.IsEnd
  isSpec: "True"
  fullName: Yoakke.Streams.EnumerableStream<T>.IsEnd
  fullName.vb: Yoakke.Streams.EnumerableStream(Of T).IsEnd
  nameWithType: EnumerableStream<T>.IsEnd
  nameWithType.vb: EnumerableStream(Of T).IsEnd
- uid: Yoakke.Streams.EnumerableStream`1.TryConsume(`0@)
  name: TryConsume(out T)
  href: api/Yoakke.Streams.EnumerableStream-1.html#Yoakke_Streams_EnumerableStream_1_TryConsume__0__
  commentId: M:Yoakke.Streams.EnumerableStream`1.TryConsume(`0@)
  name.vb: TryConsume(ByRef T)
  fullName: Yoakke.Streams.EnumerableStream<T>.TryConsume(out T)
  fullName.vb: Yoakke.Streams.EnumerableStream(Of T).TryConsume(ByRef T)
  nameWithType: EnumerableStream<T>.TryConsume(out T)
  nameWithType.vb: EnumerableStream(Of T).TryConsume(ByRef T)
- uid: Yoakke.Streams.EnumerableStream`1.TryConsume*
  name: TryConsume
  href: api/Yoakke.Streams.EnumerableStream-1.html#Yoakke_Streams_EnumerableStream_1_TryConsume_
  commentId: Overload:Yoakke.Streams.EnumerableStream`1.TryConsume
  isSpec: "True"
  fullName: Yoakke.Streams.EnumerableStream<T>.TryConsume
  fullName.vb: Yoakke.Streams.EnumerableStream(Of T).TryConsume
  nameWithType: EnumerableStream<T>.TryConsume
  nameWithType.vb: EnumerableStream(Of T).TryConsume
- uid: Yoakke.Streams.FilteredStream`1
  name: FilteredStream<T>
  href: api/Yoakke.Streams.FilteredStream-1.html
  commentId: T:Yoakke.Streams.FilteredStream`1
  name.vb: FilteredStream(Of T)
  fullName: Yoakke.Streams.FilteredStream<T>
  fullName.vb: Yoakke.Streams.FilteredStream(Of T)
  nameWithType: FilteredStream<T>
  nameWithType.vb: FilteredStream(Of T)
- uid: Yoakke.Streams.FilteredStream`1.#ctor(Yoakke.Streams.IStream{`0},Predicate{`0})
  name: FilteredStream(IStream<T>, Predicate<T>)
  href: api/Yoakke.Streams.FilteredStream-1.html#Yoakke_Streams_FilteredStream_1__ctor_Yoakke_Streams_IStream__0__Predicate__0__
  commentId: M:Yoakke.Streams.FilteredStream`1.#ctor(Yoakke.Streams.IStream{`0},Predicate{`0})
  name.vb: FilteredStream(IStream(Of T), Predicate(Of T))
  fullName: Yoakke.Streams.FilteredStream<T>.FilteredStream(Yoakke.Streams.IStream<T>, Predicate<T>)
  fullName.vb: Yoakke.Streams.FilteredStream(Of T).FilteredStream(Yoakke.Streams.IStream(Of T), Predicate(Of T))
  nameWithType: FilteredStream<T>.FilteredStream(IStream<T>, Predicate<T>)
  nameWithType.vb: FilteredStream(Of T).FilteredStream(IStream(Of T), Predicate(Of T))
- uid: Yoakke.Streams.FilteredStream`1.#ctor*
  name: FilteredStream
  href: api/Yoakke.Streams.FilteredStream-1.html#Yoakke_Streams_FilteredStream_1__ctor_
  commentId: Overload:Yoakke.Streams.FilteredStream`1.#ctor
  isSpec: "True"
  fullName: Yoakke.Streams.FilteredStream<T>.FilteredStream
  fullName.vb: Yoakke.Streams.FilteredStream(Of T).FilteredStream
  nameWithType: FilteredStream<T>.FilteredStream
  nameWithType.vb: FilteredStream(Of T).FilteredStream
- uid: Yoakke.Streams.FilteredStream`1.Consume(System.Int32)
  name: Consume(Int32)
  href: api/Yoakke.Streams.FilteredStream-1.html#Yoakke_Streams_FilteredStream_1_Consume_System_Int32_
  commentId: M:Yoakke.Streams.FilteredStream`1.Consume(System.Int32)
  fullName: Yoakke.Streams.FilteredStream<T>.Consume(System.Int32)
  fullName.vb: Yoakke.Streams.FilteredStream(Of T).Consume(System.Int32)
  nameWithType: FilteredStream<T>.Consume(Int32)
  nameWithType.vb: FilteredStream(Of T).Consume(Int32)
- uid: Yoakke.Streams.FilteredStream`1.Consume*
  name: Consume
  href: api/Yoakke.Streams.FilteredStream-1.html#Yoakke_Streams_FilteredStream_1_Consume_
  commentId: Overload:Yoakke.Streams.FilteredStream`1.Consume
  isSpec: "True"
  fullName: Yoakke.Streams.FilteredStream<T>.Consume
  fullName.vb: Yoakke.Streams.FilteredStream(Of T).Consume
  nameWithType: FilteredStream<T>.Consume
  nameWithType.vb: FilteredStream(Of T).Consume
- uid: Yoakke.Streams.FilteredStream`1.IsEnd
  name: IsEnd
  href: api/Yoakke.Streams.FilteredStream-1.html#Yoakke_Streams_FilteredStream_1_IsEnd
  commentId: P:Yoakke.Streams.FilteredStream`1.IsEnd
  fullName: Yoakke.Streams.FilteredStream<T>.IsEnd
  fullName.vb: Yoakke.Streams.FilteredStream(Of T).IsEnd
  nameWithType: FilteredStream<T>.IsEnd
  nameWithType.vb: FilteredStream(Of T).IsEnd
- uid: Yoakke.Streams.FilteredStream`1.IsEnd*
  name: IsEnd
  href: api/Yoakke.Streams.FilteredStream-1.html#Yoakke_Streams_FilteredStream_1_IsEnd_
  commentId: Overload:Yoakke.Streams.FilteredStream`1.IsEnd
  isSpec: "True"
  fullName: Yoakke.Streams.FilteredStream<T>.IsEnd
  fullName.vb: Yoakke.Streams.FilteredStream(Of T).IsEnd
  nameWithType: FilteredStream<T>.IsEnd
  nameWithType.vb: FilteredStream(Of T).IsEnd
- uid: Yoakke.Streams.FilteredStream`1.Predicate
  name: Predicate
  href: api/Yoakke.Streams.FilteredStream-1.html#Yoakke_Streams_FilteredStream_1_Predicate
  commentId: P:Yoakke.Streams.FilteredStream`1.Predicate
  fullName: Yoakke.Streams.FilteredStream<T>.Predicate
  fullName.vb: Yoakke.Streams.FilteredStream(Of T).Predicate
  nameWithType: FilteredStream<T>.Predicate
  nameWithType.vb: FilteredStream(Of T).Predicate
- uid: Yoakke.Streams.FilteredStream`1.Predicate*
  name: Predicate
  href: api/Yoakke.Streams.FilteredStream-1.html#Yoakke_Streams_FilteredStream_1_Predicate_
  commentId: Overload:Yoakke.Streams.FilteredStream`1.Predicate
  isSpec: "True"
  fullName: Yoakke.Streams.FilteredStream<T>.Predicate
  fullName.vb: Yoakke.Streams.FilteredStream(Of T).Predicate
  nameWithType: FilteredStream<T>.Predicate
  nameWithType.vb: FilteredStream(Of T).Predicate
- uid: Yoakke.Streams.FilteredStream`1.TryConsume(`0@)
  name: TryConsume(out T)
  href: api/Yoakke.Streams.FilteredStream-1.html#Yoakke_Streams_FilteredStream_1_TryConsume__0__
  commentId: M:Yoakke.Streams.FilteredStream`1.TryConsume(`0@)
  name.vb: TryConsume(ByRef T)
  fullName: Yoakke.Streams.FilteredStream<T>.TryConsume(out T)
  fullName.vb: Yoakke.Streams.FilteredStream(Of T).TryConsume(ByRef T)
  nameWithType: FilteredStream<T>.TryConsume(out T)
  nameWithType.vb: FilteredStream(Of T).TryConsume(ByRef T)
- uid: Yoakke.Streams.FilteredStream`1.TryConsume*
  name: TryConsume
  href: api/Yoakke.Streams.FilteredStream-1.html#Yoakke_Streams_FilteredStream_1_TryConsume_
  commentId: Overload:Yoakke.Streams.FilteredStream`1.TryConsume
  isSpec: "True"
  fullName: Yoakke.Streams.FilteredStream<T>.TryConsume
  fullName.vb: Yoakke.Streams.FilteredStream(Of T).TryConsume
  nameWithType: FilteredStream<T>.TryConsume
  nameWithType.vb: FilteredStream(Of T).TryConsume
- uid: Yoakke.Streams.FilteredStream`1.Underlying
  name: Underlying
  href: api/Yoakke.Streams.FilteredStream-1.html#Yoakke_Streams_FilteredStream_1_Underlying
  commentId: P:Yoakke.Streams.FilteredStream`1.Underlying
  fullName: Yoakke.Streams.FilteredStream<T>.Underlying
  fullName.vb: Yoakke.Streams.FilteredStream(Of T).Underlying
  nameWithType: FilteredStream<T>.Underlying
  nameWithType.vb: FilteredStream(Of T).Underlying
- uid: Yoakke.Streams.FilteredStream`1.Underlying*
  name: Underlying
  href: api/Yoakke.Streams.FilteredStream-1.html#Yoakke_Streams_FilteredStream_1_Underlying_
  commentId: Overload:Yoakke.Streams.FilteredStream`1.Underlying
  isSpec: "True"
  fullName: Yoakke.Streams.FilteredStream<T>.Underlying
  fullName.vb: Yoakke.Streams.FilteredStream(Of T).Underlying
  nameWithType: FilteredStream<T>.Underlying
  nameWithType.vb: FilteredStream(Of T).Underlying
- uid: Yoakke.Streams.IPeekableStream`1
  name: IPeekableStream<T>
  href: api/Yoakke.Streams.IPeekableStream-1.html
  commentId: T:Yoakke.Streams.IPeekableStream`1
  name.vb: IPeekableStream(Of T)
  fullName: Yoakke.Streams.IPeekableStream<T>
  fullName.vb: Yoakke.Streams.IPeekableStream(Of T)
  nameWithType: IPeekableStream<T>
  nameWithType.vb: IPeekableStream(Of T)
- uid: Yoakke.Streams.IPeekableStream`1.Defer(`0)
  name: Defer(T)
  href: api/Yoakke.Streams.IPeekableStream-1.html#Yoakke_Streams_IPeekableStream_1_Defer__0_
  commentId: M:Yoakke.Streams.IPeekableStream`1.Defer(`0)
  fullName: Yoakke.Streams.IPeekableStream<T>.Defer(T)
  fullName.vb: Yoakke.Streams.IPeekableStream(Of T).Defer(T)
  nameWithType: IPeekableStream<T>.Defer(T)
  nameWithType.vb: IPeekableStream(Of T).Defer(T)
- uid: Yoakke.Streams.IPeekableStream`1.Defer*
  name: Defer
  href: api/Yoakke.Streams.IPeekableStream-1.html#Yoakke_Streams_IPeekableStream_1_Defer_
  commentId: Overload:Yoakke.Streams.IPeekableStream`1.Defer
  isSpec: "True"
  fullName: Yoakke.Streams.IPeekableStream<T>.Defer
  fullName.vb: Yoakke.Streams.IPeekableStream(Of T).Defer
  nameWithType: IPeekableStream<T>.Defer
  nameWithType.vb: IPeekableStream(Of T).Defer
- uid: Yoakke.Streams.IPeekableStream`1.TryLookAhead(System.Int32,`0@)
  name: TryLookAhead(Int32, out T)
  href: api/Yoakke.Streams.IPeekableStream-1.html#Yoakke_Streams_IPeekableStream_1_TryLookAhead_System_Int32__0__
  commentId: M:Yoakke.Streams.IPeekableStream`1.TryLookAhead(System.Int32,`0@)
  name.vb: TryLookAhead(Int32, ByRef T)
  fullName: Yoakke.Streams.IPeekableStream<T>.TryLookAhead(System.Int32, out T)
  fullName.vb: Yoakke.Streams.IPeekableStream(Of T).TryLookAhead(System.Int32, ByRef T)
  nameWithType: IPeekableStream<T>.TryLookAhead(Int32, out T)
  nameWithType.vb: IPeekableStream(Of T).TryLookAhead(Int32, ByRef T)
- uid: Yoakke.Streams.IPeekableStream`1.TryLookAhead*
  name: TryLookAhead
  href: api/Yoakke.Streams.IPeekableStream-1.html#Yoakke_Streams_IPeekableStream_1_TryLookAhead_
  commentId: Overload:Yoakke.Streams.IPeekableStream`1.TryLookAhead
  isSpec: "True"
  fullName: Yoakke.Streams.IPeekableStream<T>.TryLookAhead
  fullName.vb: Yoakke.Streams.IPeekableStream(Of T).TryLookAhead
  nameWithType: IPeekableStream<T>.TryLookAhead
  nameWithType.vb: IPeekableStream(Of T).TryLookAhead
- uid: Yoakke.Streams.IPeekableStream`1.TryPeek(`0@)
  name: TryPeek(out T)
  href: api/Yoakke.Streams.IPeekableStream-1.html#Yoakke_Streams_IPeekableStream_1_TryPeek__0__
  commentId: M:Yoakke.Streams.IPeekableStream`1.TryPeek(`0@)
  name.vb: TryPeek(ByRef T)
  fullName: Yoakke.Streams.IPeekableStream<T>.TryPeek(out T)
  fullName.vb: Yoakke.Streams.IPeekableStream(Of T).TryPeek(ByRef T)
  nameWithType: IPeekableStream<T>.TryPeek(out T)
  nameWithType.vb: IPeekableStream(Of T).TryPeek(ByRef T)
- uid: Yoakke.Streams.IPeekableStream`1.TryPeek*
  name: TryPeek
  href: api/Yoakke.Streams.IPeekableStream-1.html#Yoakke_Streams_IPeekableStream_1_TryPeek_
  commentId: Overload:Yoakke.Streams.IPeekableStream`1.TryPeek
  isSpec: "True"
  fullName: Yoakke.Streams.IPeekableStream<T>.TryPeek
  fullName.vb: Yoakke.Streams.IPeekableStream(Of T).TryPeek
  nameWithType: IPeekableStream<T>.TryPeek
  nameWithType.vb: IPeekableStream(Of T).TryPeek
- uid: Yoakke.Streams.IStream`1
  name: IStream<T>
  href: api/Yoakke.Streams.IStream-1.html
  commentId: T:Yoakke.Streams.IStream`1
  name.vb: IStream(Of T)
  fullName: Yoakke.Streams.IStream<T>
  fullName.vb: Yoakke.Streams.IStream(Of T)
  nameWithType: IStream<T>
  nameWithType.vb: IStream(Of T)
- uid: Yoakke.Streams.IStream`1.Consume(System.Int32)
  name: Consume(Int32)
  href: api/Yoakke.Streams.IStream-1.html#Yoakke_Streams_IStream_1_Consume_System_Int32_
  commentId: M:Yoakke.Streams.IStream`1.Consume(System.Int32)
  fullName: Yoakke.Streams.IStream<T>.Consume(System.Int32)
  fullName.vb: Yoakke.Streams.IStream(Of T).Consume(System.Int32)
  nameWithType: IStream<T>.Consume(Int32)
  nameWithType.vb: IStream(Of T).Consume(Int32)
- uid: Yoakke.Streams.IStream`1.Consume*
  name: Consume
  href: api/Yoakke.Streams.IStream-1.html#Yoakke_Streams_IStream_1_Consume_
  commentId: Overload:Yoakke.Streams.IStream`1.Consume
  isSpec: "True"
  fullName: Yoakke.Streams.IStream<T>.Consume
  fullName.vb: Yoakke.Streams.IStream(Of T).Consume
  nameWithType: IStream<T>.Consume
  nameWithType.vb: IStream(Of T).Consume
- uid: Yoakke.Streams.IStream`1.IsEnd
  name: IsEnd
  href: api/Yoakke.Streams.IStream-1.html#Yoakke_Streams_IStream_1_IsEnd
  commentId: P:Yoakke.Streams.IStream`1.IsEnd
  fullName: Yoakke.Streams.IStream<T>.IsEnd
  fullName.vb: Yoakke.Streams.IStream(Of T).IsEnd
  nameWithType: IStream<T>.IsEnd
  nameWithType.vb: IStream(Of T).IsEnd
- uid: Yoakke.Streams.IStream`1.IsEnd*
  name: IsEnd
  href: api/Yoakke.Streams.IStream-1.html#Yoakke_Streams_IStream_1_IsEnd_
  commentId: Overload:Yoakke.Streams.IStream`1.IsEnd
  isSpec: "True"
  fullName: Yoakke.Streams.IStream<T>.IsEnd
  fullName.vb: Yoakke.Streams.IStream(Of T).IsEnd
  nameWithType: IStream<T>.IsEnd
  nameWithType.vb: IStream(Of T).IsEnd
- uid: Yoakke.Streams.IStream`1.TryConsume(`0@)
  name: TryConsume(out T)
  href: api/Yoakke.Streams.IStream-1.html#Yoakke_Streams_IStream_1_TryConsume__0__
  commentId: M:Yoakke.Streams.IStream`1.TryConsume(`0@)
  name.vb: TryConsume(ByRef T)
  fullName: Yoakke.Streams.IStream<T>.TryConsume(out T)
  fullName.vb: Yoakke.Streams.IStream(Of T).TryConsume(ByRef T)
  nameWithType: IStream<T>.TryConsume(out T)
  nameWithType.vb: IStream(Of T).TryConsume(ByRef T)
- uid: Yoakke.Streams.IStream`1.TryConsume*
  name: TryConsume
  href: api/Yoakke.Streams.IStream-1.html#Yoakke_Streams_IStream_1_TryConsume_
  commentId: Overload:Yoakke.Streams.IStream`1.TryConsume
  isSpec: "True"
  fullName: Yoakke.Streams.IStream<T>.TryConsume
  fullName.vb: Yoakke.Streams.IStream(Of T).TryConsume
  nameWithType: IStream<T>.TryConsume
  nameWithType.vb: IStream(Of T).TryConsume
- uid: Yoakke.Streams.MemoryStream`1
  name: MemoryStream<T>
  href: api/Yoakke.Streams.MemoryStream-1.html
  commentId: T:Yoakke.Streams.MemoryStream`1
  name.vb: MemoryStream(Of T)
  fullName: Yoakke.Streams.MemoryStream<T>
  fullName.vb: Yoakke.Streams.MemoryStream(Of T)
  nameWithType: MemoryStream<T>
  nameWithType.vb: MemoryStream(Of T)
- uid: Yoakke.Streams.MemoryStream`1.#ctor(ReadOnlyMemory{`0})
  name: MemoryStream(ReadOnlyMemory<T>)
  href: api/Yoakke.Streams.MemoryStream-1.html#Yoakke_Streams_MemoryStream_1__ctor_ReadOnlyMemory__0__
  commentId: M:Yoakke.Streams.MemoryStream`1.#ctor(ReadOnlyMemory{`0})
  name.vb: MemoryStream(ReadOnlyMemory(Of T))
  fullName: Yoakke.Streams.MemoryStream<T>.MemoryStream(ReadOnlyMemory<T>)
  fullName.vb: Yoakke.Streams.MemoryStream(Of T).MemoryStream(ReadOnlyMemory(Of T))
  nameWithType: MemoryStream<T>.MemoryStream(ReadOnlyMemory<T>)
  nameWithType.vb: MemoryStream(Of T).MemoryStream(ReadOnlyMemory(Of T))
- uid: Yoakke.Streams.MemoryStream`1.#ctor*
  name: MemoryStream
  href: api/Yoakke.Streams.MemoryStream-1.html#Yoakke_Streams_MemoryStream_1__ctor_
  commentId: Overload:Yoakke.Streams.MemoryStream`1.#ctor
  isSpec: "True"
  fullName: Yoakke.Streams.MemoryStream<T>.MemoryStream
  fullName.vb: Yoakke.Streams.MemoryStream(Of T).MemoryStream
  nameWithType: MemoryStream<T>.MemoryStream
  nameWithType.vb: MemoryStream(Of T).MemoryStream
- uid: Yoakke.Streams.MemoryStream`1.Consume(System.Int32)
  name: Consume(Int32)
  href: api/Yoakke.Streams.MemoryStream-1.html#Yoakke_Streams_MemoryStream_1_Consume_System_Int32_
  commentId: M:Yoakke.Streams.MemoryStream`1.Consume(System.Int32)
  fullName: Yoakke.Streams.MemoryStream<T>.Consume(System.Int32)
  fullName.vb: Yoakke.Streams.MemoryStream(Of T).Consume(System.Int32)
  nameWithType: MemoryStream<T>.Consume(Int32)
  nameWithType.vb: MemoryStream(Of T).Consume(Int32)
- uid: Yoakke.Streams.MemoryStream`1.Consume*
  name: Consume
  href: api/Yoakke.Streams.MemoryStream-1.html#Yoakke_Streams_MemoryStream_1_Consume_
  commentId: Overload:Yoakke.Streams.MemoryStream`1.Consume
  isSpec: "True"
  fullName: Yoakke.Streams.MemoryStream<T>.Consume
  fullName.vb: Yoakke.Streams.MemoryStream(Of T).Consume
  nameWithType: MemoryStream<T>.Consume
  nameWithType.vb: MemoryStream(Of T).Consume
- uid: Yoakke.Streams.MemoryStream`1.Defer(`0)
  name: Defer(T)
  href: api/Yoakke.Streams.MemoryStream-1.html#Yoakke_Streams_MemoryStream_1_Defer__0_
  commentId: M:Yoakke.Streams.MemoryStream`1.Defer(`0)
  fullName: Yoakke.Streams.MemoryStream<T>.Defer(T)
  fullName.vb: Yoakke.Streams.MemoryStream(Of T).Defer(T)
  nameWithType: MemoryStream<T>.Defer(T)
  nameWithType.vb: MemoryStream(Of T).Defer(T)
- uid: Yoakke.Streams.MemoryStream`1.Defer*
  name: Defer
  href: api/Yoakke.Streams.MemoryStream-1.html#Yoakke_Streams_MemoryStream_1_Defer_
  commentId: Overload:Yoakke.Streams.MemoryStream`1.Defer
  isSpec: "True"
  fullName: Yoakke.Streams.MemoryStream<T>.Defer
  fullName.vb: Yoakke.Streams.MemoryStream(Of T).Defer
  nameWithType: MemoryStream<T>.Defer
  nameWithType.vb: MemoryStream(Of T).Defer
- uid: Yoakke.Streams.MemoryStream`1.Index
  name: Index
  href: api/Yoakke.Streams.MemoryStream-1.html#Yoakke_Streams_MemoryStream_1_Index
  commentId: P:Yoakke.Streams.MemoryStream`1.Index
  fullName: Yoakke.Streams.MemoryStream<T>.Index
  fullName.vb: Yoakke.Streams.MemoryStream(Of T).Index
  nameWithType: MemoryStream<T>.Index
  nameWithType.vb: MemoryStream(Of T).Index
- uid: Yoakke.Streams.MemoryStream`1.Index*
  name: Index
  href: api/Yoakke.Streams.MemoryStream-1.html#Yoakke_Streams_MemoryStream_1_Index_
  commentId: Overload:Yoakke.Streams.MemoryStream`1.Index
  isSpec: "True"
  fullName: Yoakke.Streams.MemoryStream<T>.Index
  fullName.vb: Yoakke.Streams.MemoryStream(Of T).Index
  nameWithType: MemoryStream<T>.Index
  nameWithType.vb: MemoryStream(Of T).Index
- uid: Yoakke.Streams.MemoryStream`1.IsEnd
  name: IsEnd
  href: api/Yoakke.Streams.MemoryStream-1.html#Yoakke_Streams_MemoryStream_1_IsEnd
  commentId: P:Yoakke.Streams.MemoryStream`1.IsEnd
  fullName: Yoakke.Streams.MemoryStream<T>.IsEnd
  fullName.vb: Yoakke.Streams.MemoryStream(Of T).IsEnd
  nameWithType: MemoryStream<T>.IsEnd
  nameWithType.vb: MemoryStream(Of T).IsEnd
- uid: Yoakke.Streams.MemoryStream`1.IsEnd*
  name: IsEnd
  href: api/Yoakke.Streams.MemoryStream-1.html#Yoakke_Streams_MemoryStream_1_IsEnd_
  commentId: Overload:Yoakke.Streams.MemoryStream`1.IsEnd
  isSpec: "True"
  fullName: Yoakke.Streams.MemoryStream<T>.IsEnd
  fullName.vb: Yoakke.Streams.MemoryStream(Of T).IsEnd
  nameWithType: MemoryStream<T>.IsEnd
  nameWithType.vb: MemoryStream(Of T).IsEnd
- uid: Yoakke.Streams.MemoryStream`1.Memory
  name: Memory
  href: api/Yoakke.Streams.MemoryStream-1.html#Yoakke_Streams_MemoryStream_1_Memory
  commentId: P:Yoakke.Streams.MemoryStream`1.Memory
  fullName: Yoakke.Streams.MemoryStream<T>.Memory
  fullName.vb: Yoakke.Streams.MemoryStream(Of T).Memory
  nameWithType: MemoryStream<T>.Memory
  nameWithType.vb: MemoryStream(Of T).Memory
- uid: Yoakke.Streams.MemoryStream`1.Memory*
  name: Memory
  href: api/Yoakke.Streams.MemoryStream-1.html#Yoakke_Streams_MemoryStream_1_Memory_
  commentId: Overload:Yoakke.Streams.MemoryStream`1.Memory
  isSpec: "True"
  fullName: Yoakke.Streams.MemoryStream<T>.Memory
  fullName.vb: Yoakke.Streams.MemoryStream(Of T).Memory
  nameWithType: MemoryStream<T>.Memory
  nameWithType.vb: MemoryStream(Of T).Memory
- uid: Yoakke.Streams.MemoryStream`1.TryConsume(`0@)
  name: TryConsume(out T)
  href: api/Yoakke.Streams.MemoryStream-1.html#Yoakke_Streams_MemoryStream_1_TryConsume__0__
  commentId: M:Yoakke.Streams.MemoryStream`1.TryConsume(`0@)
  name.vb: TryConsume(ByRef T)
  fullName: Yoakke.Streams.MemoryStream<T>.TryConsume(out T)
  fullName.vb: Yoakke.Streams.MemoryStream(Of T).TryConsume(ByRef T)
  nameWithType: MemoryStream<T>.TryConsume(out T)
  nameWithType.vb: MemoryStream(Of T).TryConsume(ByRef T)
- uid: Yoakke.Streams.MemoryStream`1.TryConsume*
  name: TryConsume
  href: api/Yoakke.Streams.MemoryStream-1.html#Yoakke_Streams_MemoryStream_1_TryConsume_
  commentId: Overload:Yoakke.Streams.MemoryStream`1.TryConsume
  isSpec: "True"
  fullName: Yoakke.Streams.MemoryStream<T>.TryConsume
  fullName.vb: Yoakke.Streams.MemoryStream(Of T).TryConsume
  nameWithType: MemoryStream<T>.TryConsume
  nameWithType.vb: MemoryStream(Of T).TryConsume
- uid: Yoakke.Streams.MemoryStream`1.TryLookAhead(System.Int32,`0@)
  name: TryLookAhead(Int32, out T)
  href: api/Yoakke.Streams.MemoryStream-1.html#Yoakke_Streams_MemoryStream_1_TryLookAhead_System_Int32__0__
  commentId: M:Yoakke.Streams.MemoryStream`1.TryLookAhead(System.Int32,`0@)
  name.vb: TryLookAhead(Int32, ByRef T)
  fullName: Yoakke.Streams.MemoryStream<T>.TryLookAhead(System.Int32, out T)
  fullName.vb: Yoakke.Streams.MemoryStream(Of T).TryLookAhead(System.Int32, ByRef T)
  nameWithType: MemoryStream<T>.TryLookAhead(Int32, out T)
  nameWithType.vb: MemoryStream(Of T).TryLookAhead(Int32, ByRef T)
- uid: Yoakke.Streams.MemoryStream`1.TryLookAhead*
  name: TryLookAhead
  href: api/Yoakke.Streams.MemoryStream-1.html#Yoakke_Streams_MemoryStream_1_TryLookAhead_
  commentId: Overload:Yoakke.Streams.MemoryStream`1.TryLookAhead
  isSpec: "True"
  fullName: Yoakke.Streams.MemoryStream<T>.TryLookAhead
  fullName.vb: Yoakke.Streams.MemoryStream(Of T).TryLookAhead
  nameWithType: MemoryStream<T>.TryLookAhead
  nameWithType.vb: MemoryStream(Of T).TryLookAhead
- uid: Yoakke.Streams.MemoryStream`1.TryPeek(`0@)
  name: TryPeek(out T)
  href: api/Yoakke.Streams.MemoryStream-1.html#Yoakke_Streams_MemoryStream_1_TryPeek__0__
  commentId: M:Yoakke.Streams.MemoryStream`1.TryPeek(`0@)
  name.vb: TryPeek(ByRef T)
  fullName: Yoakke.Streams.MemoryStream<T>.TryPeek(out T)
  fullName.vb: Yoakke.Streams.MemoryStream(Of T).TryPeek(ByRef T)
  nameWithType: MemoryStream<T>.TryPeek(out T)
  nameWithType.vb: MemoryStream(Of T).TryPeek(ByRef T)
- uid: Yoakke.Streams.MemoryStream`1.TryPeek*
  name: TryPeek
  href: api/Yoakke.Streams.MemoryStream-1.html#Yoakke_Streams_MemoryStream_1_TryPeek_
  commentId: Overload:Yoakke.Streams.MemoryStream`1.TryPeek
  isSpec: "True"
  fullName: Yoakke.Streams.MemoryStream<T>.TryPeek
  fullName.vb: Yoakke.Streams.MemoryStream(Of T).TryPeek
  nameWithType: MemoryStream<T>.TryPeek
  nameWithType.vb: MemoryStream(Of T).TryPeek
- uid: Yoakke.Streams.PeekStream`1
  name: PeekStream<T>
  href: api/Yoakke.Streams.PeekStream-1.html
  commentId: T:Yoakke.Streams.PeekStream`1
  name.vb: PeekStream(Of T)
  fullName: Yoakke.Streams.PeekStream<T>
  fullName.vb: Yoakke.Streams.PeekStream(Of T)
  nameWithType: PeekStream<T>
  nameWithType.vb: PeekStream(Of T)
- uid: Yoakke.Streams.PeekStream`1.#ctor(Yoakke.Streams.IStream{`0})
  name: PeekStream(IStream<T>)
  href: api/Yoakke.Streams.PeekStream-1.html#Yoakke_Streams_PeekStream_1__ctor_Yoakke_Streams_IStream__0__
  commentId: M:Yoakke.Streams.PeekStream`1.#ctor(Yoakke.Streams.IStream{`0})
  name.vb: PeekStream(IStream(Of T))
  fullName: Yoakke.Streams.PeekStream<T>.PeekStream(Yoakke.Streams.IStream<T>)
  fullName.vb: Yoakke.Streams.PeekStream(Of T).PeekStream(Yoakke.Streams.IStream(Of T))
  nameWithType: PeekStream<T>.PeekStream(IStream<T>)
  nameWithType.vb: PeekStream(Of T).PeekStream(IStream(Of T))
- uid: Yoakke.Streams.PeekStream`1.#ctor*
  name: PeekStream
  href: api/Yoakke.Streams.PeekStream-1.html#Yoakke_Streams_PeekStream_1__ctor_
  commentId: Overload:Yoakke.Streams.PeekStream`1.#ctor
  isSpec: "True"
  fullName: Yoakke.Streams.PeekStream<T>.PeekStream
  fullName.vb: Yoakke.Streams.PeekStream(Of T).PeekStream
  nameWithType: PeekStream<T>.PeekStream
  nameWithType.vb: PeekStream(Of T).PeekStream
- uid: Yoakke.Streams.PeekStream`1.Consume(System.Int32)
  name: Consume(Int32)
  href: api/Yoakke.Streams.PeekStream-1.html#Yoakke_Streams_PeekStream_1_Consume_System_Int32_
  commentId: M:Yoakke.Streams.PeekStream`1.Consume(System.Int32)
  fullName: Yoakke.Streams.PeekStream<T>.Consume(System.Int32)
  fullName.vb: Yoakke.Streams.PeekStream(Of T).Consume(System.Int32)
  nameWithType: PeekStream<T>.Consume(Int32)
  nameWithType.vb: PeekStream(Of T).Consume(Int32)
- uid: Yoakke.Streams.PeekStream`1.Consume*
  name: Consume
  href: api/Yoakke.Streams.PeekStream-1.html#Yoakke_Streams_PeekStream_1_Consume_
  commentId: Overload:Yoakke.Streams.PeekStream`1.Consume
  isSpec: "True"
  fullName: Yoakke.Streams.PeekStream<T>.Consume
  fullName.vb: Yoakke.Streams.PeekStream(Of T).Consume
  nameWithType: PeekStream<T>.Consume
  nameWithType.vb: PeekStream(Of T).Consume
- uid: Yoakke.Streams.PeekStream`1.Defer(`0)
  name: Defer(T)
  href: api/Yoakke.Streams.PeekStream-1.html#Yoakke_Streams_PeekStream_1_Defer__0_
  commentId: M:Yoakke.Streams.PeekStream`1.Defer(`0)
  fullName: Yoakke.Streams.PeekStream<T>.Defer(T)
  fullName.vb: Yoakke.Streams.PeekStream(Of T).Defer(T)
  nameWithType: PeekStream<T>.Defer(T)
  nameWithType.vb: PeekStream(Of T).Defer(T)
- uid: Yoakke.Streams.PeekStream`1.Defer*
  name: Defer
  href: api/Yoakke.Streams.PeekStream-1.html#Yoakke_Streams_PeekStream_1_Defer_
  commentId: Overload:Yoakke.Streams.PeekStream`1.Defer
  isSpec: "True"
  fullName: Yoakke.Streams.PeekStream<T>.Defer
  fullName.vb: Yoakke.Streams.PeekStream(Of T).Defer
  nameWithType: PeekStream<T>.Defer
  nameWithType.vb: PeekStream(Of T).Defer
- uid: Yoakke.Streams.PeekStream`1.IsEnd
  name: IsEnd
  href: api/Yoakke.Streams.PeekStream-1.html#Yoakke_Streams_PeekStream_1_IsEnd
  commentId: P:Yoakke.Streams.PeekStream`1.IsEnd
  fullName: Yoakke.Streams.PeekStream<T>.IsEnd
  fullName.vb: Yoakke.Streams.PeekStream(Of T).IsEnd
  nameWithType: PeekStream<T>.IsEnd
  nameWithType.vb: PeekStream(Of T).IsEnd
- uid: Yoakke.Streams.PeekStream`1.IsEnd*
  name: IsEnd
  href: api/Yoakke.Streams.PeekStream-1.html#Yoakke_Streams_PeekStream_1_IsEnd_
  commentId: Overload:Yoakke.Streams.PeekStream`1.IsEnd
  isSpec: "True"
  fullName: Yoakke.Streams.PeekStream<T>.IsEnd
  fullName.vb: Yoakke.Streams.PeekStream(Of T).IsEnd
  nameWithType: PeekStream<T>.IsEnd
  nameWithType.vb: PeekStream(Of T).IsEnd
- uid: Yoakke.Streams.PeekStream`1.TryConsume(`0@)
  name: TryConsume(out T)
  href: api/Yoakke.Streams.PeekStream-1.html#Yoakke_Streams_PeekStream_1_TryConsume__0__
  commentId: M:Yoakke.Streams.PeekStream`1.TryConsume(`0@)
  name.vb: TryConsume(ByRef T)
  fullName: Yoakke.Streams.PeekStream<T>.TryConsume(out T)
  fullName.vb: Yoakke.Streams.PeekStream(Of T).TryConsume(ByRef T)
  nameWithType: PeekStream<T>.TryConsume(out T)
  nameWithType.vb: PeekStream(Of T).TryConsume(ByRef T)
- uid: Yoakke.Streams.PeekStream`1.TryConsume*
  name: TryConsume
  href: api/Yoakke.Streams.PeekStream-1.html#Yoakke_Streams_PeekStream_1_TryConsume_
  commentId: Overload:Yoakke.Streams.PeekStream`1.TryConsume
  isSpec: "True"
  fullName: Yoakke.Streams.PeekStream<T>.TryConsume
  fullName.vb: Yoakke.Streams.PeekStream(Of T).TryConsume
  nameWithType: PeekStream<T>.TryConsume
  nameWithType.vb: PeekStream(Of T).TryConsume
- uid: Yoakke.Streams.PeekStream`1.TryLookAhead(System.Int32,`0@)
  name: TryLookAhead(Int32, out T)
  href: api/Yoakke.Streams.PeekStream-1.html#Yoakke_Streams_PeekStream_1_TryLookAhead_System_Int32__0__
  commentId: M:Yoakke.Streams.PeekStream`1.TryLookAhead(System.Int32,`0@)
  name.vb: TryLookAhead(Int32, ByRef T)
  fullName: Yoakke.Streams.PeekStream<T>.TryLookAhead(System.Int32, out T)
  fullName.vb: Yoakke.Streams.PeekStream(Of T).TryLookAhead(System.Int32, ByRef T)
  nameWithType: PeekStream<T>.TryLookAhead(Int32, out T)
  nameWithType.vb: PeekStream(Of T).TryLookAhead(Int32, ByRef T)
- uid: Yoakke.Streams.PeekStream`1.TryLookAhead*
  name: TryLookAhead
  href: api/Yoakke.Streams.PeekStream-1.html#Yoakke_Streams_PeekStream_1_TryLookAhead_
  commentId: Overload:Yoakke.Streams.PeekStream`1.TryLookAhead
  isSpec: "True"
  fullName: Yoakke.Streams.PeekStream<T>.TryLookAhead
  fullName.vb: Yoakke.Streams.PeekStream(Of T).TryLookAhead
  nameWithType: PeekStream<T>.TryLookAhead
  nameWithType.vb: PeekStream(Of T).TryLookAhead
- uid: Yoakke.Streams.PeekStream`1.TryPeek(`0@)
  name: TryPeek(out T)
  href: api/Yoakke.Streams.PeekStream-1.html#Yoakke_Streams_PeekStream_1_TryPeek__0__
  commentId: M:Yoakke.Streams.PeekStream`1.TryPeek(`0@)
  name.vb: TryPeek(ByRef T)
  fullName: Yoakke.Streams.PeekStream<T>.TryPeek(out T)
  fullName.vb: Yoakke.Streams.PeekStream(Of T).TryPeek(ByRef T)
  nameWithType: PeekStream<T>.TryPeek(out T)
  nameWithType.vb: PeekStream(Of T).TryPeek(ByRef T)
- uid: Yoakke.Streams.PeekStream`1.TryPeek*
  name: TryPeek
  href: api/Yoakke.Streams.PeekStream-1.html#Yoakke_Streams_PeekStream_1_TryPeek_
  commentId: Overload:Yoakke.Streams.PeekStream`1.TryPeek
  isSpec: "True"
  fullName: Yoakke.Streams.PeekStream<T>.TryPeek
  fullName.vb: Yoakke.Streams.PeekStream(Of T).TryPeek
  nameWithType: PeekStream<T>.TryPeek
  nameWithType.vb: PeekStream(Of T).TryPeek
- uid: Yoakke.Streams.PeekStream`1.Underlying
  name: Underlying
  href: api/Yoakke.Streams.PeekStream-1.html#Yoakke_Streams_PeekStream_1_Underlying
  commentId: P:Yoakke.Streams.PeekStream`1.Underlying
  fullName: Yoakke.Streams.PeekStream<T>.Underlying
  fullName.vb: Yoakke.Streams.PeekStream(Of T).Underlying
  nameWithType: PeekStream<T>.Underlying
  nameWithType.vb: PeekStream(Of T).Underlying
- uid: Yoakke.Streams.PeekStream`1.Underlying*
  name: Underlying
  href: api/Yoakke.Streams.PeekStream-1.html#Yoakke_Streams_PeekStream_1_Underlying_
  commentId: Overload:Yoakke.Streams.PeekStream`1.Underlying
  isSpec: "True"
  fullName: Yoakke.Streams.PeekStream<T>.Underlying
  fullName.vb: Yoakke.Streams.PeekStream(Of T).Underlying
  nameWithType: PeekStream<T>.Underlying
  nameWithType.vb: PeekStream(Of T).Underlying
- uid: Yoakke.Streams.StreamExtensions
  name: StreamExtensions
  href: api/Yoakke.Streams.StreamExtensions.html
  commentId: T:Yoakke.Streams.StreamExtensions
  fullName: Yoakke.Streams.StreamExtensions
  nameWithType: StreamExtensions
- uid: Yoakke.Streams.StreamExtensions.Consume*
  name: Consume
  href: api/Yoakke.Streams.StreamExtensions.html#Yoakke_Streams_StreamExtensions_Consume_
  commentId: Overload:Yoakke.Streams.StreamExtensions.Consume
  isSpec: "True"
  fullName: Yoakke.Streams.StreamExtensions.Consume
  nameWithType: StreamExtensions.Consume
- uid: Yoakke.Streams.StreamExtensions.Consume``1(Yoakke.Streams.IStream{``0})
  name: Consume<TItem>(IStream<TItem>)
  href: api/Yoakke.Streams.StreamExtensions.html#Yoakke_Streams_StreamExtensions_Consume__1_Yoakke_Streams_IStream___0__
  commentId: M:Yoakke.Streams.StreamExtensions.Consume``1(Yoakke.Streams.IStream{``0})
  name.vb: Consume(Of TItem)(IStream(Of TItem))
  fullName: Yoakke.Streams.StreamExtensions.Consume<TItem>(Yoakke.Streams.IStream<TItem>)
  fullName.vb: Yoakke.Streams.StreamExtensions.Consume(Of TItem)(Yoakke.Streams.IStream(Of TItem))
  nameWithType: StreamExtensions.Consume<TItem>(IStream<TItem>)
  nameWithType.vb: StreamExtensions.Consume(Of TItem)(IStream(Of TItem))
- uid: Yoakke.Streams.StreamExtensions.Consume``1(Yoakke.Streams.IStream{``0},System.Int32)
  name: Consume<TItem>(IStream<TItem>, Int32)
  href: api/Yoakke.Streams.StreamExtensions.html#Yoakke_Streams_StreamExtensions_Consume__1_Yoakke_Streams_IStream___0__System_Int32_
  commentId: M:Yoakke.Streams.StreamExtensions.Consume``1(Yoakke.Streams.IStream{``0},System.Int32)
  name.vb: Consume(Of TItem)(IStream(Of TItem), Int32)
  fullName: Yoakke.Streams.StreamExtensions.Consume<TItem>(Yoakke.Streams.IStream<TItem>, System.Int32)
  fullName.vb: Yoakke.Streams.StreamExtensions.Consume(Of TItem)(Yoakke.Streams.IStream(Of TItem), System.Int32)
  nameWithType: StreamExtensions.Consume<TItem>(IStream<TItem>, Int32)
  nameWithType.vb: StreamExtensions.Consume(Of TItem)(IStream(Of TItem), Int32)
- uid: Yoakke.Streams.StreamExtensions.Filter*
  name: Filter
  href: api/Yoakke.Streams.StreamExtensions.html#Yoakke_Streams_StreamExtensions_Filter_
  commentId: Overload:Yoakke.Streams.StreamExtensions.Filter
  isSpec: "True"
  fullName: Yoakke.Streams.StreamExtensions.Filter
  nameWithType: StreamExtensions.Filter
- uid: Yoakke.Streams.StreamExtensions.Filter``1(Yoakke.Streams.IStream{``0},Predicate{``0})
  name: Filter<TItem>(IStream<TItem>, Predicate<TItem>)
  href: api/Yoakke.Streams.StreamExtensions.html#Yoakke_Streams_StreamExtensions_Filter__1_Yoakke_Streams_IStream___0__Predicate___0__
  commentId: M:Yoakke.Streams.StreamExtensions.Filter``1(Yoakke.Streams.IStream{``0},Predicate{``0})
  name.vb: Filter(Of TItem)(IStream(Of TItem), Predicate(Of TItem))
  fullName: Yoakke.Streams.StreamExtensions.Filter<TItem>(Yoakke.Streams.IStream<TItem>, Predicate<TItem>)
  fullName.vb: Yoakke.Streams.StreamExtensions.Filter(Of TItem)(Yoakke.Streams.IStream(Of TItem), Predicate(Of TItem))
  nameWithType: StreamExtensions.Filter<TItem>(IStream<TItem>, Predicate<TItem>)
  nameWithType.vb: StreamExtensions.Filter(Of TItem)(IStream(Of TItem), Predicate(Of TItem))
- uid: Yoakke.Streams.StreamExtensions.LookAhead*
  name: LookAhead
  href: api/Yoakke.Streams.StreamExtensions.html#Yoakke_Streams_StreamExtensions_LookAhead_
  commentId: Overload:Yoakke.Streams.StreamExtensions.LookAhead
  isSpec: "True"
  fullName: Yoakke.Streams.StreamExtensions.LookAhead
  nameWithType: StreamExtensions.LookAhead
- uid: Yoakke.Streams.StreamExtensions.LookAhead``1(Yoakke.Streams.IPeekableStream{``0},System.Int32)
  name: LookAhead<TItem>(IPeekableStream<TItem>, Int32)
  href: api/Yoakke.Streams.StreamExtensions.html#Yoakke_Streams_StreamExtensions_LookAhead__1_Yoakke_Streams_IPeekableStream___0__System_Int32_
  commentId: M:Yoakke.Streams.StreamExtensions.LookAhead``1(Yoakke.Streams.IPeekableStream{``0},System.Int32)
  name.vb: LookAhead(Of TItem)(IPeekableStream(Of TItem), Int32)
  fullName: Yoakke.Streams.StreamExtensions.LookAhead<TItem>(Yoakke.Streams.IPeekableStream<TItem>, System.Int32)
  fullName.vb: Yoakke.Streams.StreamExtensions.LookAhead(Of TItem)(Yoakke.Streams.IPeekableStream(Of TItem), System.Int32)
  nameWithType: StreamExtensions.LookAhead<TItem>(IPeekableStream<TItem>, Int32)
  nameWithType.vb: StreamExtensions.LookAhead(Of TItem)(IPeekableStream(Of TItem), Int32)
- uid: Yoakke.Streams.StreamExtensions.Peek*
  name: Peek
  href: api/Yoakke.Streams.StreamExtensions.html#Yoakke_Streams_StreamExtensions_Peek_
  commentId: Overload:Yoakke.Streams.StreamExtensions.Peek
  isSpec: "True"
  fullName: Yoakke.Streams.StreamExtensions.Peek
  nameWithType: StreamExtensions.Peek
- uid: Yoakke.Streams.StreamExtensions.Peek``1(Yoakke.Streams.IPeekableStream{``0})
  name: Peek<TItem>(IPeekableStream<TItem>)
  href: api/Yoakke.Streams.StreamExtensions.html#Yoakke_Streams_StreamExtensions_Peek__1_Yoakke_Streams_IPeekableStream___0__
  commentId: M:Yoakke.Streams.StreamExtensions.Peek``1(Yoakke.Streams.IPeekableStream{``0})
  name.vb: Peek(Of TItem)(IPeekableStream(Of TItem))
  fullName: Yoakke.Streams.StreamExtensions.Peek<TItem>(Yoakke.Streams.IPeekableStream<TItem>)
  fullName.vb: Yoakke.Streams.StreamExtensions.Peek(Of TItem)(Yoakke.Streams.IPeekableStream(Of TItem))
  nameWithType: StreamExtensions.Peek<TItem>(IPeekableStream<TItem>)
  nameWithType.vb: StreamExtensions.Peek(Of TItem)(IPeekableStream(Of TItem))
- uid: Yoakke.Streams.StreamExtensions.ToBuffered*
  name: ToBuffered
  href: api/Yoakke.Streams.StreamExtensions.html#Yoakke_Streams_StreamExtensions_ToBuffered_
  commentId: Overload:Yoakke.Streams.StreamExtensions.ToBuffered
  isSpec: "True"
  fullName: Yoakke.Streams.StreamExtensions.ToBuffered
  nameWithType: StreamExtensions.ToBuffered
- uid: Yoakke.Streams.StreamExtensions.ToBuffered``1(Yoakke.Streams.IStream{``0})
  name: ToBuffered<TItem>(IStream<TItem>)
  href: api/Yoakke.Streams.StreamExtensions.html#Yoakke_Streams_StreamExtensions_ToBuffered__1_Yoakke_Streams_IStream___0__
  commentId: M:Yoakke.Streams.StreamExtensions.ToBuffered``1(Yoakke.Streams.IStream{``0})
  name.vb: ToBuffered(Of TItem)(IStream(Of TItem))
  fullName: Yoakke.Streams.StreamExtensions.ToBuffered<TItem>(Yoakke.Streams.IStream<TItem>)
  fullName.vb: Yoakke.Streams.StreamExtensions.ToBuffered(Of TItem)(Yoakke.Streams.IStream(Of TItem))
  nameWithType: StreamExtensions.ToBuffered<TItem>(IStream<TItem>)
  nameWithType.vb: StreamExtensions.ToBuffered(Of TItem)(IStream(Of TItem))
- uid: Yoakke.Streams.StreamExtensions.ToEnumerable*
  name: ToEnumerable
  href: api/Yoakke.Streams.StreamExtensions.html#Yoakke_Streams_StreamExtensions_ToEnumerable_
  commentId: Overload:Yoakke.Streams.StreamExtensions.ToEnumerable
  isSpec: "True"
  fullName: Yoakke.Streams.StreamExtensions.ToEnumerable
  nameWithType: StreamExtensions.ToEnumerable
- uid: Yoakke.Streams.StreamExtensions.ToEnumerable``1(Yoakke.Streams.IStream{``0})
  name: ToEnumerable<TItem>(IStream<TItem>)
  href: api/Yoakke.Streams.StreamExtensions.html#Yoakke_Streams_StreamExtensions_ToEnumerable__1_Yoakke_Streams_IStream___0__
  commentId: M:Yoakke.Streams.StreamExtensions.ToEnumerable``1(Yoakke.Streams.IStream{``0})
  name.vb: ToEnumerable(Of TItem)(IStream(Of TItem))
  fullName: Yoakke.Streams.StreamExtensions.ToEnumerable<TItem>(Yoakke.Streams.IStream<TItem>)
  fullName.vb: Yoakke.Streams.StreamExtensions.ToEnumerable(Of TItem)(Yoakke.Streams.IStream(Of TItem))
  nameWithType: StreamExtensions.ToEnumerable<TItem>(IStream<TItem>)
  nameWithType.vb: StreamExtensions.ToEnumerable(Of TItem)(IStream(Of TItem))
- uid: Yoakke.SynKit.Automata
  name: Yoakke.SynKit.Automata
  href: api/Yoakke.SynKit.Automata.html
  commentId: N:Yoakke.SynKit.Automata
  fullName: Yoakke.SynKit.Automata
  nameWithType: Yoakke.SynKit.Automata
- uid: Yoakke.SynKit.Automata.Dense
  name: Yoakke.SynKit.Automata.Dense
  href: api/Yoakke.SynKit.Automata.Dense.html
  commentId: N:Yoakke.SynKit.Automata.Dense
  fullName: Yoakke.SynKit.Automata.Dense
  nameWithType: Yoakke.SynKit.Automata.Dense
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2
  name: DenseDfa<TState, TSymbol>
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html
  commentId: T:Yoakke.SynKit.Automata.Dense.DenseDfa`2
  name.vb: DenseDfa(Of TState, TSymbol)
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol)
  nameWithType: DenseDfa<TState, TSymbol>
  nameWithType.vb: DenseDfa(Of TState, TSymbol)
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.#ctor
  name: DenseDfa()
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2__ctor
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseDfa`2.#ctor
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.DenseDfa()
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).DenseDfa()
  nameWithType: DenseDfa<TState, TSymbol>.DenseDfa()
  nameWithType.vb: DenseDfa(Of TState, TSymbol).DenseDfa()
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.#ctor(IEqualityComparer{`0},Yoakke.Collections.Intervals.IntervalComparer{`1})
  name: DenseDfa(IEqualityComparer<TState>, IntervalComparer<TSymbol>)
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2__ctor_IEqualityComparer__0__Yoakke_Collections_Intervals_IntervalComparer__1__
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseDfa`2.#ctor(IEqualityComparer{`0},Yoakke.Collections.Intervals.IntervalComparer{`1})
  name.vb: DenseDfa(IEqualityComparer(Of TState), IntervalComparer(Of TSymbol))
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.DenseDfa(IEqualityComparer<TState>, Yoakke.Collections.Intervals.IntervalComparer<TSymbol>)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).DenseDfa(IEqualityComparer(Of TState), Yoakke.Collections.Intervals.IntervalComparer(Of TSymbol))
  nameWithType: DenseDfa<TState, TSymbol>.DenseDfa(IEqualityComparer<TState>, IntervalComparer<TSymbol>)
  nameWithType.vb: DenseDfa(Of TState, TSymbol).DenseDfa(IEqualityComparer(Of TState), IntervalComparer(Of TSymbol))
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.#ctor*
  name: DenseDfa
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2__ctor_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.DenseDfa
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).DenseDfa
  nameWithType: DenseDfa<TState, TSymbol>.DenseDfa
  nameWithType.vb: DenseDfa(Of TState, TSymbol).DenseDfa
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.AcceptingStates
  name: AcceptingStates
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_AcceptingStates
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseDfa`2.AcceptingStates
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.AcceptingStates
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).AcceptingStates
  nameWithType: DenseDfa<TState, TSymbol>.AcceptingStates
  nameWithType.vb: DenseDfa(Of TState, TSymbol).AcceptingStates
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.AcceptingStates*
  name: AcceptingStates
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_AcceptingStates_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.AcceptingStates
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.AcceptingStates
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).AcceptingStates
  nameWithType: DenseDfa<TState, TSymbol>.AcceptingStates
  nameWithType.vb: DenseDfa(Of TState, TSymbol).AcceptingStates
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.Accepts(IEnumerable{`1})
  name: Accepts(IEnumerable<TSymbol>)
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_Accepts_IEnumerable__1__
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseDfa`2.Accepts(IEnumerable{`1})
  name.vb: Accepts(IEnumerable(Of TSymbol))
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.Accepts(IEnumerable<TSymbol>)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).Accepts(IEnumerable(Of TSymbol))
  nameWithType: DenseDfa<TState, TSymbol>.Accepts(IEnumerable<TSymbol>)
  nameWithType.vb: DenseDfa(Of TState, TSymbol).Accepts(IEnumerable(Of TSymbol))
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.Accepts*
  name: Accepts
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_Accepts_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.Accepts
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.Accepts
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).Accepts
  nameWithType: DenseDfa<TState, TSymbol>.Accepts
  nameWithType.vb: DenseDfa(Of TState, TSymbol).Accepts
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.AddTransition(`0,`1,`0)
  name: AddTransition(TState, TSymbol, TState)
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_AddTransition__0__1__0_
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseDfa`2.AddTransition(`0,`1,`0)
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.AddTransition(TState, TSymbol, TState)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).AddTransition(TState, TSymbol, TState)
  nameWithType: DenseDfa<TState, TSymbol>.AddTransition(TState, TSymbol, TState)
  nameWithType.vb: DenseDfa(Of TState, TSymbol).AddTransition(TState, TSymbol, TState)
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.AddTransition(`0,Yoakke.Collections.Intervals.Interval{`1},`0)
  name: AddTransition(TState, Interval<TSymbol>, TState)
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_AddTransition__0_Yoakke_Collections_Intervals_Interval__1___0_
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseDfa`2.AddTransition(`0,Yoakke.Collections.Intervals.Interval{`1},`0)
  name.vb: AddTransition(TState, Interval(Of TSymbol), TState)
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.AddTransition(TState, Yoakke.Collections.Intervals.Interval<TSymbol>, TState)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).AddTransition(TState, Yoakke.Collections.Intervals.Interval(Of TSymbol), TState)
  nameWithType: DenseDfa<TState, TSymbol>.AddTransition(TState, Interval<TSymbol>, TState)
  nameWithType.vb: DenseDfa(Of TState, TSymbol).AddTransition(TState, Interval(Of TSymbol), TState)
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.AddTransition*
  name: AddTransition
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_AddTransition_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.AddTransition
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.AddTransition
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).AddTransition
  nameWithType: DenseDfa<TState, TSymbol>.AddTransition
  nameWithType.vb: DenseDfa(Of TState, TSymbol).AddTransition
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.Alphabet
  name: Alphabet
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_Alphabet
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseDfa`2.Alphabet
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).Alphabet
  nameWithType: DenseDfa<TState, TSymbol>.Alphabet
  nameWithType.vb: DenseDfa(Of TState, TSymbol).Alphabet
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.Alphabet*
  name: Alphabet
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_Alphabet_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.Alphabet
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).Alphabet
  nameWithType: DenseDfa<TState, TSymbol>.Alphabet
  nameWithType.vb: DenseDfa(Of TState, TSymbol).Alphabet
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.Complete(IEnumerable{Yoakke.Collections.Intervals.Interval{`1}},`0)
  name: Complete(IEnumerable<Interval<TSymbol>>, TState)
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_Complete_IEnumerable_Yoakke_Collections_Intervals_Interval__1____0_
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseDfa`2.Complete(IEnumerable{Yoakke.Collections.Intervals.Interval{`1}},`0)
  name.vb: Complete(IEnumerable(Of Interval(Of TSymbol)), TState)
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.Complete(IEnumerable<Yoakke.Collections.Intervals.Interval<TSymbol>>, TState)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).Complete(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of TSymbol)), TState)
  nameWithType: DenseDfa<TState, TSymbol>.Complete(IEnumerable<Interval<TSymbol>>, TState)
  nameWithType.vb: DenseDfa(Of TState, TSymbol).Complete(IEnumerable(Of Interval(Of TSymbol)), TState)
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.Complete*
  name: Complete
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_Complete_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.Complete
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.Complete
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).Complete
  nameWithType: DenseDfa<TState, TSymbol>.Complete
  nameWithType.vb: DenseDfa(Of TState, TSymbol).Complete
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.InitialState
  name: InitialState
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_InitialState
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseDfa`2.InitialState
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.InitialState
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).InitialState
  nameWithType: DenseDfa<TState, TSymbol>.InitialState
  nameWithType.vb: DenseDfa(Of TState, TSymbol).InitialState
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.InitialState*
  name: InitialState
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_InitialState_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.InitialState
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.InitialState
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).InitialState
  nameWithType: DenseDfa<TState, TSymbol>.InitialState
  nameWithType.vb: DenseDfa(Of TState, TSymbol).InitialState
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.IsComplete(IEnumerable{Yoakke.Collections.Intervals.Interval{`1}})
  name: IsComplete(IEnumerable<Interval<TSymbol>>)
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_IsComplete_IEnumerable_Yoakke_Collections_Intervals_Interval__1___
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseDfa`2.IsComplete(IEnumerable{Yoakke.Collections.Intervals.Interval{`1}})
  name.vb: IsComplete(IEnumerable(Of Interval(Of TSymbol)))
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.IsComplete(IEnumerable<Yoakke.Collections.Intervals.Interval<TSymbol>>)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).IsComplete(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of TSymbol)))
  nameWithType: DenseDfa<TState, TSymbol>.IsComplete(IEnumerable<Interval<TSymbol>>)
  nameWithType.vb: DenseDfa(Of TState, TSymbol).IsComplete(IEnumerable(Of Interval(Of TSymbol)))
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.IsComplete*
  name: IsComplete
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_IsComplete_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.IsComplete
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.IsComplete
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).IsComplete
  nameWithType: DenseDfa<TState, TSymbol>.IsComplete
  nameWithType.vb: DenseDfa(Of TState, TSymbol).IsComplete
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.Minimize*
  name: Minimize
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_Minimize_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.Minimize
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.Minimize
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).Minimize
  nameWithType: DenseDfa<TState, TSymbol>.Minimize
  nameWithType.vb: DenseDfa(Of TState, TSymbol).Minimize
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.Minimize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0},IEnumerable{System.ValueTuple{`0,`0}})
  name: Minimize<TResultState>(IStateCombiner<TState, TResultState>, IEnumerable<(TState, TState)>)
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_Minimize__1_Yoakke_SynKit_Automata_IStateCombiner__0___0__IEnumerable_System_ValueTuple__0__0___
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseDfa`2.Minimize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0},IEnumerable{System.ValueTuple{`0,`0}})
  name.vb: Minimize(Of TResultState)(IStateCombiner(Of TState, TResultState), IEnumerable(Of (TState, TState)))
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.Minimize<TResultState>(Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>, IEnumerable<System.ValueTuple<TState, TState>>)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).Minimize(Of TResultState)(Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState), IEnumerable(Of System.ValueTuple(Of TState, TState)))
  nameWithType: DenseDfa<TState, TSymbol>.Minimize<TResultState>(IStateCombiner<TState, TResultState>, IEnumerable<(TState, TState)>)
  nameWithType.vb: DenseDfa(Of TState, TSymbol).Minimize(Of TResultState)(IStateCombiner(Of TState, TResultState), IEnumerable(Of (TState, TState)))
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.ReachableStates
  name: ReachableStates
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_ReachableStates
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseDfa`2.ReachableStates
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.ReachableStates
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).ReachableStates
  nameWithType: DenseDfa<TState, TSymbol>.ReachableStates
  nameWithType.vb: DenseDfa(Of TState, TSymbol).ReachableStates
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.ReachableStates*
  name: ReachableStates
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_ReachableStates_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.ReachableStates
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.ReachableStates
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).ReachableStates
  nameWithType: DenseDfa<TState, TSymbol>.ReachableStates
  nameWithType.vb: DenseDfa(Of TState, TSymbol).ReachableStates
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.RemoveTransition(`0,`1,`0)
  name: RemoveTransition(TState, TSymbol, TState)
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_RemoveTransition__0__1__0_
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseDfa`2.RemoveTransition(`0,`1,`0)
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.RemoveTransition(TState, TSymbol, TState)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).RemoveTransition(TState, TSymbol, TState)
  nameWithType: DenseDfa<TState, TSymbol>.RemoveTransition(TState, TSymbol, TState)
  nameWithType.vb: DenseDfa(Of TState, TSymbol).RemoveTransition(TState, TSymbol, TState)
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.RemoveTransition(`0,Yoakke.Collections.Intervals.Interval{`1},`0)
  name: RemoveTransition(TState, Interval<TSymbol>, TState)
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_RemoveTransition__0_Yoakke_Collections_Intervals_Interval__1___0_
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseDfa`2.RemoveTransition(`0,Yoakke.Collections.Intervals.Interval{`1},`0)
  name.vb: RemoveTransition(TState, Interval(Of TSymbol), TState)
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.RemoveTransition(TState, Yoakke.Collections.Intervals.Interval<TSymbol>, TState)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).RemoveTransition(TState, Yoakke.Collections.Intervals.Interval(Of TSymbol), TState)
  nameWithType: DenseDfa<TState, TSymbol>.RemoveTransition(TState, Interval<TSymbol>, TState)
  nameWithType.vb: DenseDfa(Of TState, TSymbol).RemoveTransition(TState, Interval(Of TSymbol), TState)
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.RemoveTransition*
  name: RemoveTransition
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_RemoveTransition_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.RemoveTransition
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.RemoveTransition
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).RemoveTransition
  nameWithType: DenseDfa<TState, TSymbol>.RemoveTransition
  nameWithType.vb: DenseDfa(Of TState, TSymbol).RemoveTransition
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.RemoveUnreachable
  name: RemoveUnreachable()
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_RemoveUnreachable
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseDfa`2.RemoveUnreachable
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.RemoveUnreachable()
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).RemoveUnreachable()
  nameWithType: DenseDfa<TState, TSymbol>.RemoveUnreachable()
  nameWithType.vb: DenseDfa(Of TState, TSymbol).RemoveUnreachable()
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.RemoveUnreachable*
  name: RemoveUnreachable
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_RemoveUnreachable_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.RemoveUnreachable
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.RemoveUnreachable
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).RemoveUnreachable
  nameWithType: DenseDfa<TState, TSymbol>.RemoveUnreachable
  nameWithType.vb: DenseDfa(Of TState, TSymbol).RemoveUnreachable
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.StateComparer
  name: StateComparer
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_StateComparer
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseDfa`2.StateComparer
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.StateComparer
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).StateComparer
  nameWithType: DenseDfa<TState, TSymbol>.StateComparer
  nameWithType.vb: DenseDfa(Of TState, TSymbol).StateComparer
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.StateComparer*
  name: StateComparer
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_StateComparer_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.StateComparer
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.StateComparer
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).StateComparer
  nameWithType: DenseDfa<TState, TSymbol>.StateComparer
  nameWithType.vb: DenseDfa(Of TState, TSymbol).StateComparer
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.States
  name: States
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_States
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseDfa`2.States
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.States
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).States
  nameWithType: DenseDfa<TState, TSymbol>.States
  nameWithType.vb: DenseDfa(Of TState, TSymbol).States
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.States*
  name: States
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_States_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.States
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.States
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).States
  nameWithType: DenseDfa<TState, TSymbol>.States
  nameWithType.vb: DenseDfa(Of TState, TSymbol).States
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.SymbolIntervalComparer
  name: SymbolIntervalComparer
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_SymbolIntervalComparer
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseDfa`2.SymbolIntervalComparer
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.SymbolIntervalComparer
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).SymbolIntervalComparer
  nameWithType: DenseDfa<TState, TSymbol>.SymbolIntervalComparer
  nameWithType.vb: DenseDfa(Of TState, TSymbol).SymbolIntervalComparer
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.SymbolIntervalComparer*
  name: SymbolIntervalComparer
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_SymbolIntervalComparer_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.SymbolIntervalComparer
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.SymbolIntervalComparer
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).SymbolIntervalComparer
  nameWithType: DenseDfa<TState, TSymbol>.SymbolIntervalComparer
  nameWithType.vb: DenseDfa(Of TState, TSymbol).SymbolIntervalComparer
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.ToDot
  name: ToDot()
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_ToDot
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseDfa`2.ToDot
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.ToDot()
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).ToDot()
  nameWithType: DenseDfa<TState, TSymbol>.ToDot()
  nameWithType.vb: DenseDfa(Of TState, TSymbol).ToDot()
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.ToDot*
  name: ToDot
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_ToDot_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.ToDot
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.ToDot
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).ToDot
  nameWithType: DenseDfa<TState, TSymbol>.ToDot
  nameWithType.vb: DenseDfa(Of TState, TSymbol).ToDot
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.Transitions
  name: Transitions
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_Transitions
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseDfa`2.Transitions
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).Transitions
  nameWithType: DenseDfa<TState, TSymbol>.Transitions
  nameWithType.vb: DenseDfa(Of TState, TSymbol).Transitions
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.Transitions*
  name: Transitions
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_Transitions_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.Transitions
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).Transitions
  nameWithType: DenseDfa<TState, TSymbol>.Transitions
  nameWithType.vb: DenseDfa(Of TState, TSymbol).Transitions
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.TryGetTransition(`0,`1,`0@)
  name: TryGetTransition(TState, TSymbol, out TState)
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_TryGetTransition__0__1__0__
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseDfa`2.TryGetTransition(`0,`1,`0@)
  name.vb: TryGetTransition(TState, TSymbol, ByRef TState)
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.TryGetTransition(TState, TSymbol, out TState)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).TryGetTransition(TState, TSymbol, ByRef TState)
  nameWithType: DenseDfa<TState, TSymbol>.TryGetTransition(TState, TSymbol, out TState)
  nameWithType.vb: DenseDfa(Of TState, TSymbol).TryGetTransition(TState, TSymbol, ByRef TState)
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.TryGetTransition*
  name: TryGetTransition
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_TryGetTransition_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.TryGetTransition
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.TryGetTransition
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).TryGetTransition
  nameWithType: DenseDfa<TState, TSymbol>.TryGetTransition
  nameWithType.vb: DenseDfa(Of TState, TSymbol).TryGetTransition
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.Yoakke#SynKit#Automata#Dense#IReadOnlyDenseFiniteAutomaton{TState,TSymbol}#Alphabet
  name: IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Alphabet
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_Yoakke_SynKit_Automata_Dense_IReadOnlyDenseFiniteAutomaton_TState_TSymbol__Alphabet
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseDfa`2.Yoakke#SynKit#Automata#Dense#IReadOnlyDenseFiniteAutomaton{TState,TSymbol}#Alphabet
  name.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Alphabet
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Alphabet
  nameWithType: DenseDfa<TState, TSymbol>.IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Alphabet
  nameWithType.vb: DenseDfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Alphabet
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.Yoakke#SynKit#Automata#Dense#IReadOnlyDenseFiniteAutomaton{TState,TSymbol}#Alphabet*
  name: IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Alphabet
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_Yoakke_SynKit_Automata_Dense_IReadOnlyDenseFiniteAutomaton_TState_TSymbol__Alphabet_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.Yoakke#SynKit#Automata#Dense#IReadOnlyDenseFiniteAutomaton{TState,TSymbol}#Alphabet
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Alphabet
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Alphabet
  nameWithType: DenseDfa<TState, TSymbol>.IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Alphabet
  nameWithType.vb: DenseDfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Alphabet
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.Yoakke#SynKit#Automata#Dense#IReadOnlyDenseFiniteAutomaton{TState,TSymbol}#Transitions
  name: IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Transitions
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_Yoakke_SynKit_Automata_Dense_IReadOnlyDenseFiniteAutomaton_TState_TSymbol__Transitions
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseDfa`2.Yoakke#SynKit#Automata#Dense#IReadOnlyDenseFiniteAutomaton{TState,TSymbol}#Transitions
  name.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Transitions
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Transitions
  nameWithType: DenseDfa<TState, TSymbol>.IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Transitions
  nameWithType.vb: DenseDfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Transitions
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.Yoakke#SynKit#Automata#Dense#IReadOnlyDenseFiniteAutomaton{TState,TSymbol}#Transitions*
  name: IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Transitions
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_Yoakke_SynKit_Automata_Dense_IReadOnlyDenseFiniteAutomaton_TState_TSymbol__Transitions_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.Yoakke#SynKit#Automata#Dense#IReadOnlyDenseFiniteAutomaton{TState,TSymbol}#Transitions
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Transitions
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Transitions
  nameWithType: DenseDfa<TState, TSymbol>.IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Transitions
  nameWithType.vb: DenseDfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Transitions
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.Yoakke#SynKit#Automata#IReadOnlyDfa{TState,TSymbol}#Minimize*
  name: IReadOnlyDfa<TState, TSymbol>.Minimize
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_Yoakke_SynKit_Automata_IReadOnlyDfa_TState_TSymbol__Minimize_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.Yoakke#SynKit#Automata#IReadOnlyDfa{TState,TSymbol}#Minimize
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.IReadOnlyDfa<TState,TSymbol>.Minimize
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyDfa<TState, TSymbol>.Minimize
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyDfa<TState,TSymbol>.Minimize
  nameWithType: DenseDfa<TState, TSymbol>.IReadOnlyDfa<TState, TSymbol>.Minimize
  nameWithType.vb: DenseDfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyDfa<TState,TSymbol>.Minimize
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.Yoakke#SynKit#Automata#IReadOnlyDfa{TState,TSymbol}#Minimize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0},IEnumerable{System.ValueTuple{`0,`0}})
  name: IReadOnlyDfa<TState, TSymbol>.Minimize<TResultState>(IStateCombiner<TState, TResultState>, IEnumerable<(TState, TState)>)
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_Yoakke_SynKit_Automata_IReadOnlyDfa_TState_TSymbol__Minimize__1_Yoakke_SynKit_Automata_IStateCombiner__0___0__IEnumerable_System_ValueTuple__0__0___
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseDfa`2.Yoakke#SynKit#Automata#IReadOnlyDfa{TState,TSymbol}#Minimize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0},IEnumerable{System.ValueTuple{`0,`0}})
  name.vb: Yoakke.SynKit.Automata.IReadOnlyDfa<TState,TSymbol>.Minimize(Of TResultState)(IStateCombiner(Of TState, TResultState), IEnumerable(Of (TState, TState)))
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyDfa<TState, TSymbol>.Minimize<TResultState>(Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>, IEnumerable<System.ValueTuple<TState, TState>>)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyDfa<TState,TSymbol>.Minimize(Of TResultState)(Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState), IEnumerable(Of System.ValueTuple(Of TState, TState)))
  nameWithType: DenseDfa<TState, TSymbol>.IReadOnlyDfa<TState, TSymbol>.Minimize<TResultState>(IStateCombiner<TState, TResultState>, IEnumerable<(TState, TState)>)
  nameWithType.vb: DenseDfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyDfa<TState,TSymbol>.Minimize(Of TResultState)(IStateCombiner(Of TState, TResultState), IEnumerable(Of (TState, TState)))
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#AcceptingStates
  name: IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_TState_TSymbol__AcceptingStates
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseDfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#AcceptingStates
  name.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
  nameWithType: DenseDfa<TState, TSymbol>.IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  nameWithType.vb: DenseDfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#AcceptingStates*
  name: IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_TState_TSymbol__AcceptingStates_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#AcceptingStates
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
  nameWithType: DenseDfa<TState, TSymbol>.IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  nameWithType.vb: DenseDfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#States
  name: IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_TState_TSymbol__States
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseDfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#States
  name.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
  nameWithType: DenseDfa<TState, TSymbol>.IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  nameWithType.vb: DenseDfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
- uid: Yoakke.SynKit.Automata.Dense.DenseDfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#States*
  name: IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  href: api/Yoakke.SynKit.Automata.Dense.DenseDfa-2.html#Yoakke_SynKit_Automata_Dense_DenseDfa_2_Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_TState_TSymbol__States_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseDfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#States
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
  fullName: Yoakke.SynKit.Automata.Dense.DenseDfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseDfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
  nameWithType: DenseDfa<TState, TSymbol>.IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  nameWithType.vb: DenseDfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2
  name: DenseNfa<TState, TSymbol>
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html
  commentId: T:Yoakke.SynKit.Automata.Dense.DenseNfa`2
  name.vb: DenseNfa(Of TState, TSymbol)
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol)
  nameWithType: DenseNfa<TState, TSymbol>
  nameWithType.vb: DenseNfa(Of TState, TSymbol)
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.#ctor
  name: DenseNfa()
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2__ctor
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseNfa`2.#ctor
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.DenseNfa()
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).DenseNfa()
  nameWithType: DenseNfa<TState, TSymbol>.DenseNfa()
  nameWithType.vb: DenseNfa(Of TState, TSymbol).DenseNfa()
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.#ctor(IEqualityComparer{`0},Yoakke.Collections.Intervals.IntervalComparer{`1})
  name: DenseNfa(IEqualityComparer<TState>, IntervalComparer<TSymbol>)
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2__ctor_IEqualityComparer__0__Yoakke_Collections_Intervals_IntervalComparer__1__
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseNfa`2.#ctor(IEqualityComparer{`0},Yoakke.Collections.Intervals.IntervalComparer{`1})
  name.vb: DenseNfa(IEqualityComparer(Of TState), IntervalComparer(Of TSymbol))
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.DenseNfa(IEqualityComparer<TState>, Yoakke.Collections.Intervals.IntervalComparer<TSymbol>)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).DenseNfa(IEqualityComparer(Of TState), Yoakke.Collections.Intervals.IntervalComparer(Of TSymbol))
  nameWithType: DenseNfa<TState, TSymbol>.DenseNfa(IEqualityComparer<TState>, IntervalComparer<TSymbol>)
  nameWithType.vb: DenseNfa(Of TState, TSymbol).DenseNfa(IEqualityComparer(Of TState), IntervalComparer(Of TSymbol))
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.#ctor*
  name: DenseNfa
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2__ctor_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.DenseNfa
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).DenseNfa
  nameWithType: DenseNfa<TState, TSymbol>.DenseNfa
  nameWithType.vb: DenseNfa(Of TState, TSymbol).DenseNfa
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.AcceptingStates
  name: AcceptingStates
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_AcceptingStates
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseNfa`2.AcceptingStates
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.AcceptingStates
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).AcceptingStates
  nameWithType: DenseNfa<TState, TSymbol>.AcceptingStates
  nameWithType.vb: DenseNfa(Of TState, TSymbol).AcceptingStates
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.AcceptingStates*
  name: AcceptingStates
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_AcceptingStates_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.AcceptingStates
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.AcceptingStates
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).AcceptingStates
  nameWithType: DenseNfa<TState, TSymbol>.AcceptingStates
  nameWithType.vb: DenseNfa(Of TState, TSymbol).AcceptingStates
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.Accepts(IEnumerable{`1})
  name: Accepts(IEnumerable<TSymbol>)
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_Accepts_IEnumerable__1__
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseNfa`2.Accepts(IEnumerable{`1})
  name.vb: Accepts(IEnumerable(Of TSymbol))
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.Accepts(IEnumerable<TSymbol>)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).Accepts(IEnumerable(Of TSymbol))
  nameWithType: DenseNfa<TState, TSymbol>.Accepts(IEnumerable<TSymbol>)
  nameWithType.vb: DenseNfa(Of TState, TSymbol).Accepts(IEnumerable(Of TSymbol))
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.Accepts*
  name: Accepts
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_Accepts_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.Accepts
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.Accepts
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).Accepts
  nameWithType: DenseNfa<TState, TSymbol>.Accepts
  nameWithType.vb: DenseNfa(Of TState, TSymbol).Accepts
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.AddEpsilonTransition(`0,`0)
  name: AddEpsilonTransition(TState, TState)
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_AddEpsilonTransition__0__0_
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseNfa`2.AddEpsilonTransition(`0,`0)
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.AddEpsilonTransition(TState, TState)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).AddEpsilonTransition(TState, TState)
  nameWithType: DenseNfa<TState, TSymbol>.AddEpsilonTransition(TState, TState)
  nameWithType.vb: DenseNfa(Of TState, TSymbol).AddEpsilonTransition(TState, TState)
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.AddEpsilonTransition*
  name: AddEpsilonTransition
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_AddEpsilonTransition_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.AddEpsilonTransition
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.AddEpsilonTransition
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).AddEpsilonTransition
  nameWithType: DenseNfa<TState, TSymbol>.AddEpsilonTransition
  nameWithType.vb: DenseNfa(Of TState, TSymbol).AddEpsilonTransition
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.AddTransition(`0,`1,`0)
  name: AddTransition(TState, TSymbol, TState)
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_AddTransition__0__1__0_
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseNfa`2.AddTransition(`0,`1,`0)
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.AddTransition(TState, TSymbol, TState)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).AddTransition(TState, TSymbol, TState)
  nameWithType: DenseNfa<TState, TSymbol>.AddTransition(TState, TSymbol, TState)
  nameWithType.vb: DenseNfa(Of TState, TSymbol).AddTransition(TState, TSymbol, TState)
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.AddTransition(`0,Yoakke.Collections.Intervals.Interval{`1},`0)
  name: AddTransition(TState, Interval<TSymbol>, TState)
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_AddTransition__0_Yoakke_Collections_Intervals_Interval__1___0_
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseNfa`2.AddTransition(`0,Yoakke.Collections.Intervals.Interval{`1},`0)
  name.vb: AddTransition(TState, Interval(Of TSymbol), TState)
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.AddTransition(TState, Yoakke.Collections.Intervals.Interval<TSymbol>, TState)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).AddTransition(TState, Yoakke.Collections.Intervals.Interval(Of TSymbol), TState)
  nameWithType: DenseNfa<TState, TSymbol>.AddTransition(TState, Interval<TSymbol>, TState)
  nameWithType.vb: DenseNfa(Of TState, TSymbol).AddTransition(TState, Interval(Of TSymbol), TState)
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.AddTransition*
  name: AddTransition
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_AddTransition_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.AddTransition
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.AddTransition
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).AddTransition
  nameWithType: DenseNfa<TState, TSymbol>.AddTransition
  nameWithType.vb: DenseNfa(Of TState, TSymbol).AddTransition
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.Alphabet
  name: Alphabet
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_Alphabet
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseNfa`2.Alphabet
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).Alphabet
  nameWithType: DenseNfa<TState, TSymbol>.Alphabet
  nameWithType.vb: DenseNfa(Of TState, TSymbol).Alphabet
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.Alphabet*
  name: Alphabet
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_Alphabet_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.Alphabet
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).Alphabet
  nameWithType: DenseNfa<TState, TSymbol>.Alphabet
  nameWithType.vb: DenseNfa(Of TState, TSymbol).Alphabet
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.Determinize*
  name: Determinize
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_Determinize_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.Determinize
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.Determinize
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).Determinize
  nameWithType: DenseNfa<TState, TSymbol>.Determinize
  nameWithType.vb: DenseNfa(Of TState, TSymbol).Determinize
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.Determinize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0})
  name: Determinize<TResultState>(IStateCombiner<TState, TResultState>)
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_Determinize__1_Yoakke_SynKit_Automata_IStateCombiner__0___0__
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseNfa`2.Determinize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0})
  name.vb: Determinize(Of TResultState)(IStateCombiner(Of TState, TResultState))
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.Determinize<TResultState>(Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).Determinize(Of TResultState)(Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState))
  nameWithType: DenseNfa<TState, TSymbol>.Determinize<TResultState>(IStateCombiner<TState, TResultState>)
  nameWithType.vb: DenseNfa(Of TState, TSymbol).Determinize(Of TResultState)(IStateCombiner(Of TState, TResultState))
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.EliminateEpsilonTransitions
  name: EliminateEpsilonTransitions()
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_EliminateEpsilonTransitions
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseNfa`2.EliminateEpsilonTransitions
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.EliminateEpsilonTransitions()
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).EliminateEpsilonTransitions()
  nameWithType: DenseNfa<TState, TSymbol>.EliminateEpsilonTransitions()
  nameWithType.vb: DenseNfa(Of TState, TSymbol).EliminateEpsilonTransitions()
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.EliminateEpsilonTransitions*
  name: EliminateEpsilonTransitions
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_EliminateEpsilonTransitions_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.EliminateEpsilonTransitions
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.EliminateEpsilonTransitions
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).EliminateEpsilonTransitions
  nameWithType: DenseNfa<TState, TSymbol>.EliminateEpsilonTransitions
  nameWithType.vb: DenseNfa(Of TState, TSymbol).EliminateEpsilonTransitions
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.EpsilonClosure(`0)
  name: EpsilonClosure(TState)
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_EpsilonClosure__0_
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseNfa`2.EpsilonClosure(`0)
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.EpsilonClosure(TState)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).EpsilonClosure(TState)
  nameWithType: DenseNfa<TState, TSymbol>.EpsilonClosure(TState)
  nameWithType.vb: DenseNfa(Of TState, TSymbol).EpsilonClosure(TState)
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.EpsilonClosure*
  name: EpsilonClosure
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_EpsilonClosure_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.EpsilonClosure
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.EpsilonClosure
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).EpsilonClosure
  nameWithType: DenseNfa<TState, TSymbol>.EpsilonClosure
  nameWithType.vb: DenseNfa(Of TState, TSymbol).EpsilonClosure
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.EpsilonTransitions
  name: EpsilonTransitions
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_EpsilonTransitions
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseNfa`2.EpsilonTransitions
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.EpsilonTransitions
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).EpsilonTransitions
  nameWithType: DenseNfa<TState, TSymbol>.EpsilonTransitions
  nameWithType.vb: DenseNfa(Of TState, TSymbol).EpsilonTransitions
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.EpsilonTransitions*
  name: EpsilonTransitions
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_EpsilonTransitions_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.EpsilonTransitions
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.EpsilonTransitions
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).EpsilonTransitions
  nameWithType: DenseNfa<TState, TSymbol>.EpsilonTransitions
  nameWithType.vb: DenseNfa(Of TState, TSymbol).EpsilonTransitions
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.GetTransitions(`0,`1)
  name: GetTransitions(TState, TSymbol)
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_GetTransitions__0__1_
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseNfa`2.GetTransitions(`0,`1)
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.GetTransitions(TState, TSymbol)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).GetTransitions(TState, TSymbol)
  nameWithType: DenseNfa<TState, TSymbol>.GetTransitions(TState, TSymbol)
  nameWithType.vb: DenseNfa(Of TState, TSymbol).GetTransitions(TState, TSymbol)
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.GetTransitions*
  name: GetTransitions
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_GetTransitions_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.GetTransitions
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.GetTransitions
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).GetTransitions
  nameWithType: DenseNfa<TState, TSymbol>.GetTransitions
  nameWithType.vb: DenseNfa(Of TState, TSymbol).GetTransitions
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.InitialStates
  name: InitialStates
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_InitialStates
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseNfa`2.InitialStates
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.InitialStates
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).InitialStates
  nameWithType: DenseNfa<TState, TSymbol>.InitialStates
  nameWithType.vb: DenseNfa(Of TState, TSymbol).InitialStates
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.InitialStates*
  name: InitialStates
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_InitialStates_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.InitialStates
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.InitialStates
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).InitialStates
  nameWithType: DenseNfa<TState, TSymbol>.InitialStates
  nameWithType.vb: DenseNfa(Of TState, TSymbol).InitialStates
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.ReachableStates
  name: ReachableStates
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_ReachableStates
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseNfa`2.ReachableStates
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.ReachableStates
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).ReachableStates
  nameWithType: DenseNfa<TState, TSymbol>.ReachableStates
  nameWithType.vb: DenseNfa(Of TState, TSymbol).ReachableStates
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.ReachableStates*
  name: ReachableStates
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_ReachableStates_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.ReachableStates
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.ReachableStates
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).ReachableStates
  nameWithType: DenseNfa<TState, TSymbol>.ReachableStates
  nameWithType.vb: DenseNfa(Of TState, TSymbol).ReachableStates
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.RemoveEpsilonTransition(`0,`0)
  name: RemoveEpsilonTransition(TState, TState)
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_RemoveEpsilonTransition__0__0_
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseNfa`2.RemoveEpsilonTransition(`0,`0)
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.RemoveEpsilonTransition(TState, TState)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).RemoveEpsilonTransition(TState, TState)
  nameWithType: DenseNfa<TState, TSymbol>.RemoveEpsilonTransition(TState, TState)
  nameWithType.vb: DenseNfa(Of TState, TSymbol).RemoveEpsilonTransition(TState, TState)
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.RemoveEpsilonTransition*
  name: RemoveEpsilonTransition
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_RemoveEpsilonTransition_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.RemoveEpsilonTransition
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.RemoveEpsilonTransition
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).RemoveEpsilonTransition
  nameWithType: DenseNfa<TState, TSymbol>.RemoveEpsilonTransition
  nameWithType.vb: DenseNfa(Of TState, TSymbol).RemoveEpsilonTransition
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.RemoveTransition(`0,`1,`0)
  name: RemoveTransition(TState, TSymbol, TState)
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_RemoveTransition__0__1__0_
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseNfa`2.RemoveTransition(`0,`1,`0)
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.RemoveTransition(TState, TSymbol, TState)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).RemoveTransition(TState, TSymbol, TState)
  nameWithType: DenseNfa<TState, TSymbol>.RemoveTransition(TState, TSymbol, TState)
  nameWithType.vb: DenseNfa(Of TState, TSymbol).RemoveTransition(TState, TSymbol, TState)
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.RemoveTransition(`0,Yoakke.Collections.Intervals.Interval{`1},`0)
  name: RemoveTransition(TState, Interval<TSymbol>, TState)
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_RemoveTransition__0_Yoakke_Collections_Intervals_Interval__1___0_
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseNfa`2.RemoveTransition(`0,Yoakke.Collections.Intervals.Interval{`1},`0)
  name.vb: RemoveTransition(TState, Interval(Of TSymbol), TState)
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.RemoveTransition(TState, Yoakke.Collections.Intervals.Interval<TSymbol>, TState)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).RemoveTransition(TState, Yoakke.Collections.Intervals.Interval(Of TSymbol), TState)
  nameWithType: DenseNfa<TState, TSymbol>.RemoveTransition(TState, Interval<TSymbol>, TState)
  nameWithType.vb: DenseNfa(Of TState, TSymbol).RemoveTransition(TState, Interval(Of TSymbol), TState)
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.RemoveTransition*
  name: RemoveTransition
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_RemoveTransition_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.RemoveTransition
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.RemoveTransition
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).RemoveTransition
  nameWithType: DenseNfa<TState, TSymbol>.RemoveTransition
  nameWithType.vb: DenseNfa(Of TState, TSymbol).RemoveTransition
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.RemoveUnreachable
  name: RemoveUnreachable()
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_RemoveUnreachable
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseNfa`2.RemoveUnreachable
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.RemoveUnreachable()
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).RemoveUnreachable()
  nameWithType: DenseNfa<TState, TSymbol>.RemoveUnreachable()
  nameWithType.vb: DenseNfa(Of TState, TSymbol).RemoveUnreachable()
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.RemoveUnreachable*
  name: RemoveUnreachable
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_RemoveUnreachable_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.RemoveUnreachable
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.RemoveUnreachable
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).RemoveUnreachable
  nameWithType: DenseNfa<TState, TSymbol>.RemoveUnreachable
  nameWithType.vb: DenseNfa(Of TState, TSymbol).RemoveUnreachable
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.StateComparer
  name: StateComparer
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_StateComparer
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseNfa`2.StateComparer
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.StateComparer
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).StateComparer
  nameWithType: DenseNfa<TState, TSymbol>.StateComparer
  nameWithType.vb: DenseNfa(Of TState, TSymbol).StateComparer
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.StateComparer*
  name: StateComparer
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_StateComparer_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.StateComparer
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.StateComparer
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).StateComparer
  nameWithType: DenseNfa<TState, TSymbol>.StateComparer
  nameWithType.vb: DenseNfa(Of TState, TSymbol).StateComparer
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.States
  name: States
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_States
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseNfa`2.States
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.States
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).States
  nameWithType: DenseNfa<TState, TSymbol>.States
  nameWithType.vb: DenseNfa(Of TState, TSymbol).States
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.States*
  name: States
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_States_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.States
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.States
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).States
  nameWithType: DenseNfa<TState, TSymbol>.States
  nameWithType.vb: DenseNfa(Of TState, TSymbol).States
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.SymbolIntervalComparer
  name: SymbolIntervalComparer
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_SymbolIntervalComparer
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseNfa`2.SymbolIntervalComparer
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.SymbolIntervalComparer
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).SymbolIntervalComparer
  nameWithType: DenseNfa<TState, TSymbol>.SymbolIntervalComparer
  nameWithType.vb: DenseNfa(Of TState, TSymbol).SymbolIntervalComparer
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.SymbolIntervalComparer*
  name: SymbolIntervalComparer
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_SymbolIntervalComparer_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.SymbolIntervalComparer
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.SymbolIntervalComparer
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).SymbolIntervalComparer
  nameWithType: DenseNfa<TState, TSymbol>.SymbolIntervalComparer
  nameWithType.vb: DenseNfa(Of TState, TSymbol).SymbolIntervalComparer
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.ToDot
  name: ToDot()
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_ToDot
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseNfa`2.ToDot
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.ToDot()
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).ToDot()
  nameWithType: DenseNfa<TState, TSymbol>.ToDot()
  nameWithType.vb: DenseNfa(Of TState, TSymbol).ToDot()
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.ToDot*
  name: ToDot
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_ToDot_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.ToDot
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.ToDot
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).ToDot
  nameWithType: DenseNfa<TState, TSymbol>.ToDot
  nameWithType.vb: DenseNfa(Of TState, TSymbol).ToDot
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.Transitions
  name: Transitions
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_Transitions
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseNfa`2.Transitions
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).Transitions
  nameWithType: DenseNfa<TState, TSymbol>.Transitions
  nameWithType.vb: DenseNfa(Of TState, TSymbol).Transitions
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.Transitions*
  name: Transitions
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_Transitions_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.Transitions
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).Transitions
  nameWithType: DenseNfa<TState, TSymbol>.Transitions
  nameWithType.vb: DenseNfa(Of TState, TSymbol).Transitions
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#Dense#IReadOnlyDenseFiniteAutomaton{TState,TSymbol}#Alphabet
  name: IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Alphabet
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_Yoakke_SynKit_Automata_Dense_IReadOnlyDenseFiniteAutomaton_TState_TSymbol__Alphabet
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#Dense#IReadOnlyDenseFiniteAutomaton{TState,TSymbol}#Alphabet
  name.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Alphabet
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Alphabet
  nameWithType: DenseNfa<TState, TSymbol>.IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Alphabet
  nameWithType.vb: DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Alphabet
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#Dense#IReadOnlyDenseFiniteAutomaton{TState,TSymbol}#Alphabet*
  name: IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Alphabet
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_Yoakke_SynKit_Automata_Dense_IReadOnlyDenseFiniteAutomaton_TState_TSymbol__Alphabet_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#Dense#IReadOnlyDenseFiniteAutomaton{TState,TSymbol}#Alphabet
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Alphabet
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Alphabet
  nameWithType: DenseNfa<TState, TSymbol>.IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Alphabet
  nameWithType.vb: DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Alphabet
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#Dense#IReadOnlyDenseFiniteAutomaton{TState,TSymbol}#Transitions
  name: IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Transitions
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_Yoakke_SynKit_Automata_Dense_IReadOnlyDenseFiniteAutomaton_TState_TSymbol__Transitions
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#Dense#IReadOnlyDenseFiniteAutomaton{TState,TSymbol}#Transitions
  name.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Transitions
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Transitions
  nameWithType: DenseNfa<TState, TSymbol>.IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Transitions
  nameWithType.vb: DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Transitions
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#Dense#IReadOnlyDenseFiniteAutomaton{TState,TSymbol}#Transitions*
  name: IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Transitions
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_Yoakke_SynKit_Automata_Dense_IReadOnlyDenseFiniteAutomaton_TState_TSymbol__Transitions_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#Dense#IReadOnlyDenseFiniteAutomaton{TState,TSymbol}#Transitions
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Transitions
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Transitions
  nameWithType: DenseNfa<TState, TSymbol>.IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Transitions
  nameWithType.vb: DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState,TSymbol>.Transitions
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#AcceptingStates
  name: IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_TState_TSymbol__AcceptingStates
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#AcceptingStates
  name.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
  nameWithType: DenseNfa<TState, TSymbol>.IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  nameWithType.vb: DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#AcceptingStates*
  name: IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_TState_TSymbol__AcceptingStates_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#AcceptingStates
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
  nameWithType: DenseNfa<TState, TSymbol>.IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  nameWithType.vb: DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#States
  name: IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_TState_TSymbol__States
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#States
  name.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
  nameWithType: DenseNfa<TState, TSymbol>.IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  nameWithType.vb: DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#States*
  name: IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_TState_TSymbol__States_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#States
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
  nameWithType: DenseNfa<TState, TSymbol>.IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  nameWithType.vb: DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#IReadOnlyNfa{TState,TSymbol}#Determinize*
  name: IReadOnlyNfa<TState, TSymbol>.Determinize
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_Yoakke_SynKit_Automata_IReadOnlyNfa_TState_TSymbol__Determinize_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#IReadOnlyNfa{TState,TSymbol}#Determinize
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.Determinize
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>.Determinize
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.Determinize
  nameWithType: DenseNfa<TState, TSymbol>.IReadOnlyNfa<TState, TSymbol>.Determinize
  nameWithType.vb: DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.Determinize
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#IReadOnlyNfa{TState,TSymbol}#Determinize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0})
  name: IReadOnlyNfa<TState, TSymbol>.Determinize<TResultState>(IStateCombiner<TState, TResultState>)
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_Yoakke_SynKit_Automata_IReadOnlyNfa_TState_TSymbol__Determinize__1_Yoakke_SynKit_Automata_IStateCombiner__0___0__
  commentId: M:Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#IReadOnlyNfa{TState,TSymbol}#Determinize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0})
  name.vb: Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.Determinize(Of TResultState)(IStateCombiner(Of TState, TResultState))
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>.Determinize<TResultState>(Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>)
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.Determinize(Of TResultState)(Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState))
  nameWithType: DenseNfa<TState, TSymbol>.IReadOnlyNfa<TState, TSymbol>.Determinize<TResultState>(IStateCombiner<TState, TResultState>)
  nameWithType.vb: DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.Determinize(Of TResultState)(IStateCombiner(Of TState, TResultState))
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#IReadOnlyNfa{TState,TSymbol}#EpsilonTransitions
  name: IReadOnlyNfa<TState, TSymbol>.EpsilonTransitions
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_Yoakke_SynKit_Automata_IReadOnlyNfa_TState_TSymbol__EpsilonTransitions
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#IReadOnlyNfa{TState,TSymbol}#EpsilonTransitions
  name.vb: Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.EpsilonTransitions
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>.EpsilonTransitions
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.EpsilonTransitions
  nameWithType: DenseNfa<TState, TSymbol>.IReadOnlyNfa<TState, TSymbol>.EpsilonTransitions
  nameWithType.vb: DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.EpsilonTransitions
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#IReadOnlyNfa{TState,TSymbol}#EpsilonTransitions*
  name: IReadOnlyNfa<TState, TSymbol>.EpsilonTransitions
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_Yoakke_SynKit_Automata_IReadOnlyNfa_TState_TSymbol__EpsilonTransitions_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#IReadOnlyNfa{TState,TSymbol}#EpsilonTransitions
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.EpsilonTransitions
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>.EpsilonTransitions
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.EpsilonTransitions
  nameWithType: DenseNfa<TState, TSymbol>.IReadOnlyNfa<TState, TSymbol>.EpsilonTransitions
  nameWithType.vb: DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.EpsilonTransitions
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#IReadOnlyNfa{TState,TSymbol}#InitialStates
  name: IReadOnlyNfa<TState, TSymbol>.InitialStates
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_Yoakke_SynKit_Automata_IReadOnlyNfa_TState_TSymbol__InitialStates
  commentId: P:Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#IReadOnlyNfa{TState,TSymbol}#InitialStates
  name.vb: Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.InitialStates
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>.InitialStates
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.InitialStates
  nameWithType: DenseNfa<TState, TSymbol>.IReadOnlyNfa<TState, TSymbol>.InitialStates
  nameWithType.vb: DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.InitialStates
- uid: Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#IReadOnlyNfa{TState,TSymbol}#InitialStates*
  name: IReadOnlyNfa<TState, TSymbol>.InitialStates
  href: api/Yoakke.SynKit.Automata.Dense.DenseNfa-2.html#Yoakke_SynKit_Automata_Dense_DenseNfa_2_Yoakke_SynKit_Automata_IReadOnlyNfa_TState_TSymbol__InitialStates_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.DenseNfa`2.Yoakke#SynKit#Automata#IReadOnlyNfa{TState,TSymbol}#InitialStates
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.InitialStates
  fullName: Yoakke.SynKit.Automata.Dense.DenseNfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>.InitialStates
  fullName.vb: Yoakke.SynKit.Automata.Dense.DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.InitialStates
  nameWithType: DenseNfa<TState, TSymbol>.IReadOnlyNfa<TState, TSymbol>.InitialStates
  nameWithType.vb: DenseNfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.InitialStates
- uid: Yoakke.SynKit.Automata.Dense.IDenseDfa`2
  name: IDenseDfa<TState, TSymbol>
  href: api/Yoakke.SynKit.Automata.Dense.IDenseDfa-2.html
  commentId: T:Yoakke.SynKit.Automata.Dense.IDenseDfa`2
  name.vb: IDenseDfa(Of TState, TSymbol)
  fullName: Yoakke.SynKit.Automata.Dense.IDenseDfa<TState, TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.Dense.IDenseDfa(Of TState, TSymbol)
  nameWithType: IDenseDfa<TState, TSymbol>
  nameWithType.vb: IDenseDfa(Of TState, TSymbol)
- uid: Yoakke.SynKit.Automata.Dense.IDenseDfa`2.Complete(IEnumerable{Yoakke.Collections.Intervals.Interval{`1}},`0)
  name: Complete(IEnumerable<Interval<TSymbol>>, TState)
  href: api/Yoakke.SynKit.Automata.Dense.IDenseDfa-2.html#Yoakke_SynKit_Automata_Dense_IDenseDfa_2_Complete_IEnumerable_Yoakke_Collections_Intervals_Interval__1____0_
  commentId: M:Yoakke.SynKit.Automata.Dense.IDenseDfa`2.Complete(IEnumerable{Yoakke.Collections.Intervals.Interval{`1}},`0)
  name.vb: Complete(IEnumerable(Of Interval(Of TSymbol)), TState)
  fullName: Yoakke.SynKit.Automata.Dense.IDenseDfa<TState, TSymbol>.Complete(IEnumerable<Yoakke.Collections.Intervals.Interval<TSymbol>>, TState)
  fullName.vb: Yoakke.SynKit.Automata.Dense.IDenseDfa(Of TState, TSymbol).Complete(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of TSymbol)), TState)
  nameWithType: IDenseDfa<TState, TSymbol>.Complete(IEnumerable<Interval<TSymbol>>, TState)
  nameWithType.vb: IDenseDfa(Of TState, TSymbol).Complete(IEnumerable(Of Interval(Of TSymbol)), TState)
- uid: Yoakke.SynKit.Automata.Dense.IDenseDfa`2.Complete*
  name: Complete
  href: api/Yoakke.SynKit.Automata.Dense.IDenseDfa-2.html#Yoakke_SynKit_Automata_Dense_IDenseDfa_2_Complete_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.IDenseDfa`2.Complete
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.IDenseDfa<TState, TSymbol>.Complete
  fullName.vb: Yoakke.SynKit.Automata.Dense.IDenseDfa(Of TState, TSymbol).Complete
  nameWithType: IDenseDfa<TState, TSymbol>.Complete
  nameWithType.vb: IDenseDfa(Of TState, TSymbol).Complete
- uid: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton`2
  name: IDenseFiniteAutomaton<TState, TSymbol>
  href: api/Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton-2.html
  commentId: T:Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton`2
  name.vb: IDenseFiniteAutomaton(Of TState, TSymbol)
  fullName: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton<TState, TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton(Of TState, TSymbol)
  nameWithType: IDenseFiniteAutomaton<TState, TSymbol>
  nameWithType.vb: IDenseFiniteAutomaton(Of TState, TSymbol)
- uid: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton`2.AddTransition(`0,Yoakke.Collections.Intervals.Interval{`1},`0)
  name: AddTransition(TState, Interval<TSymbol>, TState)
  href: api/Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton-2.html#Yoakke_SynKit_Automata_Dense_IDenseFiniteAutomaton_2_AddTransition__0_Yoakke_Collections_Intervals_Interval__1___0_
  commentId: M:Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton`2.AddTransition(`0,Yoakke.Collections.Intervals.Interval{`1},`0)
  name.vb: AddTransition(TState, Interval(Of TSymbol), TState)
  fullName: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton<TState, TSymbol>.AddTransition(TState, Yoakke.Collections.Intervals.Interval<TSymbol>, TState)
  fullName.vb: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton(Of TState, TSymbol).AddTransition(TState, Yoakke.Collections.Intervals.Interval(Of TSymbol), TState)
  nameWithType: IDenseFiniteAutomaton<TState, TSymbol>.AddTransition(TState, Interval<TSymbol>, TState)
  nameWithType.vb: IDenseFiniteAutomaton(Of TState, TSymbol).AddTransition(TState, Interval(Of TSymbol), TState)
- uid: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton`2.AddTransition*
  name: AddTransition
  href: api/Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton-2.html#Yoakke_SynKit_Automata_Dense_IDenseFiniteAutomaton_2_AddTransition_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton`2.AddTransition
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton<TState, TSymbol>.AddTransition
  fullName.vb: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton(Of TState, TSymbol).AddTransition
  nameWithType: IDenseFiniteAutomaton<TState, TSymbol>.AddTransition
  nameWithType.vb: IDenseFiniteAutomaton(Of TState, TSymbol).AddTransition
- uid: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton`2.Alphabet
  name: Alphabet
  href: api/Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton-2.html#Yoakke_SynKit_Automata_Dense_IDenseFiniteAutomaton_2_Alphabet
  commentId: P:Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton`2.Alphabet
  fullName: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton(Of TState, TSymbol).Alphabet
  nameWithType: IDenseFiniteAutomaton<TState, TSymbol>.Alphabet
  nameWithType.vb: IDenseFiniteAutomaton(Of TState, TSymbol).Alphabet
- uid: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton`2.Alphabet*
  name: Alphabet
  href: api/Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton-2.html#Yoakke_SynKit_Automata_Dense_IDenseFiniteAutomaton_2_Alphabet_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton`2.Alphabet
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton(Of TState, TSymbol).Alphabet
  nameWithType: IDenseFiniteAutomaton<TState, TSymbol>.Alphabet
  nameWithType.vb: IDenseFiniteAutomaton(Of TState, TSymbol).Alphabet
- uid: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton`2.RemoveTransition(`0,Yoakke.Collections.Intervals.Interval{`1},`0)
  name: RemoveTransition(TState, Interval<TSymbol>, TState)
  href: api/Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton-2.html#Yoakke_SynKit_Automata_Dense_IDenseFiniteAutomaton_2_RemoveTransition__0_Yoakke_Collections_Intervals_Interval__1___0_
  commentId: M:Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton`2.RemoveTransition(`0,Yoakke.Collections.Intervals.Interval{`1},`0)
  name.vb: RemoveTransition(TState, Interval(Of TSymbol), TState)
  fullName: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton<TState, TSymbol>.RemoveTransition(TState, Yoakke.Collections.Intervals.Interval<TSymbol>, TState)
  fullName.vb: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton(Of TState, TSymbol).RemoveTransition(TState, Yoakke.Collections.Intervals.Interval(Of TSymbol), TState)
  nameWithType: IDenseFiniteAutomaton<TState, TSymbol>.RemoveTransition(TState, Interval<TSymbol>, TState)
  nameWithType.vb: IDenseFiniteAutomaton(Of TState, TSymbol).RemoveTransition(TState, Interval(Of TSymbol), TState)
- uid: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton`2.RemoveTransition*
  name: RemoveTransition
  href: api/Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton-2.html#Yoakke_SynKit_Automata_Dense_IDenseFiniteAutomaton_2_RemoveTransition_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton`2.RemoveTransition
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton<TState, TSymbol>.RemoveTransition
  fullName.vb: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton(Of TState, TSymbol).RemoveTransition
  nameWithType: IDenseFiniteAutomaton<TState, TSymbol>.RemoveTransition
  nameWithType.vb: IDenseFiniteAutomaton(Of TState, TSymbol).RemoveTransition
- uid: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton`2.Transitions
  name: Transitions
  href: api/Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton-2.html#Yoakke_SynKit_Automata_Dense_IDenseFiniteAutomaton_2_Transitions
  commentId: P:Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton`2.Transitions
  fullName: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton(Of TState, TSymbol).Transitions
  nameWithType: IDenseFiniteAutomaton<TState, TSymbol>.Transitions
  nameWithType.vb: IDenseFiniteAutomaton(Of TState, TSymbol).Transitions
- uid: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton`2.Transitions*
  name: Transitions
  href: api/Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton-2.html#Yoakke_SynKit_Automata_Dense_IDenseFiniteAutomaton_2_Transitions_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton`2.Transitions
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Dense.IDenseFiniteAutomaton(Of TState, TSymbol).Transitions
  nameWithType: IDenseFiniteAutomaton<TState, TSymbol>.Transitions
  nameWithType.vb: IDenseFiniteAutomaton(Of TState, TSymbol).Transitions
- uid: Yoakke.SynKit.Automata.Dense.IDenseNfa`2
  name: IDenseNfa<TState, TSymbol>
  href: api/Yoakke.SynKit.Automata.Dense.IDenseNfa-2.html
  commentId: T:Yoakke.SynKit.Automata.Dense.IDenseNfa`2
  name.vb: IDenseNfa(Of TState, TSymbol)
  fullName: Yoakke.SynKit.Automata.Dense.IDenseNfa<TState, TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.Dense.IDenseNfa(Of TState, TSymbol)
  nameWithType: IDenseNfa<TState, TSymbol>
  nameWithType.vb: IDenseNfa(Of TState, TSymbol)
- uid: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa`2
  name: IReadOnlyDenseDfa<TState, TSymbol>
  href: api/Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa-2.html
  commentId: T:Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa`2
  name.vb: IReadOnlyDenseDfa(Of TState, TSymbol)
  fullName: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa<TState, TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa(Of TState, TSymbol)
  nameWithType: IReadOnlyDenseDfa<TState, TSymbol>
  nameWithType.vb: IReadOnlyDenseDfa(Of TState, TSymbol)
- uid: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa`2.IsComplete(IEnumerable{Yoakke.Collections.Intervals.Interval{`1}})
  name: IsComplete(IEnumerable<Interval<TSymbol>>)
  href: api/Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa-2.html#Yoakke_SynKit_Automata_Dense_IReadOnlyDenseDfa_2_IsComplete_IEnumerable_Yoakke_Collections_Intervals_Interval__1___
  commentId: M:Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa`2.IsComplete(IEnumerable{Yoakke.Collections.Intervals.Interval{`1}})
  name.vb: IsComplete(IEnumerable(Of Interval(Of TSymbol)))
  fullName: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa<TState, TSymbol>.IsComplete(IEnumerable<Yoakke.Collections.Intervals.Interval<TSymbol>>)
  fullName.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa(Of TState, TSymbol).IsComplete(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of TSymbol)))
  nameWithType: IReadOnlyDenseDfa<TState, TSymbol>.IsComplete(IEnumerable<Interval<TSymbol>>)
  nameWithType.vb: IReadOnlyDenseDfa(Of TState, TSymbol).IsComplete(IEnumerable(Of Interval(Of TSymbol)))
- uid: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa`2.IsComplete*
  name: IsComplete
  href: api/Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa-2.html#Yoakke_SynKit_Automata_Dense_IReadOnlyDenseDfa_2_IsComplete_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa`2.IsComplete
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa<TState, TSymbol>.IsComplete
  fullName.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa(Of TState, TSymbol).IsComplete
  nameWithType: IReadOnlyDenseDfa<TState, TSymbol>.IsComplete
  nameWithType.vb: IReadOnlyDenseDfa(Of TState, TSymbol).IsComplete
- uid: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa`2.Minimize*
  name: Minimize
  href: api/Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa-2.html#Yoakke_SynKit_Automata_Dense_IReadOnlyDenseDfa_2_Minimize_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa`2.Minimize
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa<TState, TSymbol>.Minimize
  fullName.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa(Of TState, TSymbol).Minimize
  nameWithType: IReadOnlyDenseDfa<TState, TSymbol>.Minimize
  nameWithType.vb: IReadOnlyDenseDfa(Of TState, TSymbol).Minimize
- uid: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa`2.Minimize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0},IEnumerable{System.ValueTuple{`0,`0}})
  name: Minimize<TResultState>(IStateCombiner<TState, TResultState>, IEnumerable<(TState, TState)>)
  href: api/Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa-2.html#Yoakke_SynKit_Automata_Dense_IReadOnlyDenseDfa_2_Minimize__1_Yoakke_SynKit_Automata_IStateCombiner__0___0__IEnumerable_System_ValueTuple__0__0___
  commentId: M:Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa`2.Minimize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0},IEnumerable{System.ValueTuple{`0,`0}})
  name.vb: Minimize(Of TResultState)(IStateCombiner(Of TState, TResultState), IEnumerable(Of (TState, TState)))
  fullName: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa<TState, TSymbol>.Minimize<TResultState>(Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>, IEnumerable<System.ValueTuple<TState, TState>>)
  fullName.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa(Of TState, TSymbol).Minimize(Of TResultState)(Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState), IEnumerable(Of System.ValueTuple(Of TState, TState)))
  nameWithType: IReadOnlyDenseDfa<TState, TSymbol>.Minimize<TResultState>(IStateCombiner<TState, TResultState>, IEnumerable<(TState, TState)>)
  nameWithType.vb: IReadOnlyDenseDfa(Of TState, TSymbol).Minimize(Of TResultState)(IStateCombiner(Of TState, TResultState), IEnumerable(Of (TState, TState)))
- uid: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton`2
  name: IReadOnlyDenseFiniteAutomaton<TState, TSymbol>
  href: api/Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton-2.html
  commentId: T:Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton`2
  name.vb: IReadOnlyDenseFiniteAutomaton(Of TState, TSymbol)
  fullName: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState, TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton(Of TState, TSymbol)
  nameWithType: IReadOnlyDenseFiniteAutomaton<TState, TSymbol>
  nameWithType.vb: IReadOnlyDenseFiniteAutomaton(Of TState, TSymbol)
- uid: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton`2.Alphabet
  name: Alphabet
  href: api/Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton-2.html#Yoakke_SynKit_Automata_Dense_IReadOnlyDenseFiniteAutomaton_2_Alphabet
  commentId: P:Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton`2.Alphabet
  fullName: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton(Of TState, TSymbol).Alphabet
  nameWithType: IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Alphabet
  nameWithType.vb: IReadOnlyDenseFiniteAutomaton(Of TState, TSymbol).Alphabet
- uid: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton`2.Alphabet*
  name: Alphabet
  href: api/Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton-2.html#Yoakke_SynKit_Automata_Dense_IReadOnlyDenseFiniteAutomaton_2_Alphabet_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton`2.Alphabet
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton(Of TState, TSymbol).Alphabet
  nameWithType: IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Alphabet
  nameWithType.vb: IReadOnlyDenseFiniteAutomaton(Of TState, TSymbol).Alphabet
- uid: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton`2.Transitions
  name: Transitions
  href: api/Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton-2.html#Yoakke_SynKit_Automata_Dense_IReadOnlyDenseFiniteAutomaton_2_Transitions
  commentId: P:Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton`2.Transitions
  fullName: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton(Of TState, TSymbol).Transitions
  nameWithType: IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Transitions
  nameWithType.vb: IReadOnlyDenseFiniteAutomaton(Of TState, TSymbol).Transitions
- uid: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton`2.Transitions*
  name: Transitions
  href: api/Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton-2.html#Yoakke_SynKit_Automata_Dense_IReadOnlyDenseFiniteAutomaton_2_Transitions_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton`2.Transitions
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseFiniteAutomaton(Of TState, TSymbol).Transitions
  nameWithType: IReadOnlyDenseFiniteAutomaton<TState, TSymbol>.Transitions
  nameWithType.vb: IReadOnlyDenseFiniteAutomaton(Of TState, TSymbol).Transitions
- uid: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa`2
  name: IReadOnlyDenseNfa<TState, TSymbol>
  href: api/Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa-2.html
  commentId: T:Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa`2
  name.vb: IReadOnlyDenseNfa(Of TState, TSymbol)
  fullName: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa<TState, TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa(Of TState, TSymbol)
  nameWithType: IReadOnlyDenseNfa<TState, TSymbol>
  nameWithType.vb: IReadOnlyDenseNfa(Of TState, TSymbol)
- uid: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa`2.Determinize*
  name: Determinize
  href: api/Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa-2.html#Yoakke_SynKit_Automata_Dense_IReadOnlyDenseNfa_2_Determinize_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa`2.Determinize
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa<TState, TSymbol>.Determinize
  fullName.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa(Of TState, TSymbol).Determinize
  nameWithType: IReadOnlyDenseNfa<TState, TSymbol>.Determinize
  nameWithType.vb: IReadOnlyDenseNfa(Of TState, TSymbol).Determinize
- uid: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa`2.Determinize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0})
  name: Determinize<TResultState>(IStateCombiner<TState, TResultState>)
  href: api/Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa-2.html#Yoakke_SynKit_Automata_Dense_IReadOnlyDenseNfa_2_Determinize__1_Yoakke_SynKit_Automata_IStateCombiner__0___0__
  commentId: M:Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa`2.Determinize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0})
  name.vb: Determinize(Of TResultState)(IStateCombiner(Of TState, TResultState))
  fullName: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa<TState, TSymbol>.Determinize<TResultState>(Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>)
  fullName.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa(Of TState, TSymbol).Determinize(Of TResultState)(Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState))
  nameWithType: IReadOnlyDenseNfa<TState, TSymbol>.Determinize<TResultState>(IStateCombiner<TState, TResultState>)
  nameWithType.vb: IReadOnlyDenseNfa(Of TState, TSymbol).Determinize(Of TResultState)(IStateCombiner(Of TState, TResultState))
- uid: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa`2.SymbolIntervalComparer
  name: SymbolIntervalComparer
  href: api/Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa-2.html#Yoakke_SynKit_Automata_Dense_IReadOnlyDenseNfa_2_SymbolIntervalComparer
  commentId: P:Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa`2.SymbolIntervalComparer
  fullName: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa<TState, TSymbol>.SymbolIntervalComparer
  fullName.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa(Of TState, TSymbol).SymbolIntervalComparer
  nameWithType: IReadOnlyDenseNfa<TState, TSymbol>.SymbolIntervalComparer
  nameWithType.vb: IReadOnlyDenseNfa(Of TState, TSymbol).SymbolIntervalComparer
- uid: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa`2.SymbolIntervalComparer*
  name: SymbolIntervalComparer
  href: api/Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa-2.html#Yoakke_SynKit_Automata_Dense_IReadOnlyDenseNfa_2_SymbolIntervalComparer_
  commentId: Overload:Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa`2.SymbolIntervalComparer
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa<TState, TSymbol>.SymbolIntervalComparer
  fullName.vb: Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa(Of TState, TSymbol).SymbolIntervalComparer
  nameWithType: IReadOnlyDenseNfa<TState, TSymbol>.SymbolIntervalComparer
  nameWithType.vb: IReadOnlyDenseNfa(Of TState, TSymbol).SymbolIntervalComparer
- uid: Yoakke.SynKit.Automata.DfaExtensions
  name: DfaExtensions
  href: api/Yoakke.SynKit.Automata.DfaExtensions.html
  commentId: T:Yoakke.SynKit.Automata.DfaExtensions
  fullName: Yoakke.SynKit.Automata.DfaExtensions
  nameWithType: DfaExtensions
- uid: Yoakke.SynKit.Automata.DfaExtensions.Minimize*
  name: Minimize
  href: api/Yoakke.SynKit.Automata.DfaExtensions.html#Yoakke_SynKit_Automata_DfaExtensions_Minimize_
  commentId: Overload:Yoakke.SynKit.Automata.DfaExtensions.Minimize
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.DfaExtensions.Minimize
  nameWithType: DfaExtensions.Minimize
- uid: Yoakke.SynKit.Automata.DfaExtensions.Minimize``2(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa{``0,``1})
  name: Minimize<TState, TSymbol>(IReadOnlyDenseDfa<TState, TSymbol>)
  href: api/Yoakke.SynKit.Automata.DfaExtensions.html#Yoakke_SynKit_Automata_DfaExtensions_Minimize__2_Yoakke_SynKit_Automata_Dense_IReadOnlyDenseDfa___0___1__
  commentId: M:Yoakke.SynKit.Automata.DfaExtensions.Minimize``2(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa{``0,``1})
  name.vb: Minimize(Of TState, TSymbol)(IReadOnlyDenseDfa(Of TState, TSymbol))
  fullName: Yoakke.SynKit.Automata.DfaExtensions.Minimize<TState, TSymbol>(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa<TState, TSymbol>)
  fullName.vb: Yoakke.SynKit.Automata.DfaExtensions.Minimize(Of TState, TSymbol)(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa(Of TState, TSymbol))
  nameWithType: DfaExtensions.Minimize<TState, TSymbol>(IReadOnlyDenseDfa<TState, TSymbol>)
  nameWithType.vb: DfaExtensions.Minimize(Of TState, TSymbol)(IReadOnlyDenseDfa(Of TState, TSymbol))
- uid: Yoakke.SynKit.Automata.DfaExtensions.Minimize``2(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa{``0,``1},IEnumerable{``0})
  name: Minimize<TState, TSymbol>(IReadOnlyDenseDfa<TState, TSymbol>, IEnumerable<TState>)
  href: api/Yoakke.SynKit.Automata.DfaExtensions.html#Yoakke_SynKit_Automata_DfaExtensions_Minimize__2_Yoakke_SynKit_Automata_Dense_IReadOnlyDenseDfa___0___1__IEnumerable___0__
  commentId: M:Yoakke.SynKit.Automata.DfaExtensions.Minimize``2(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa{``0,``1},IEnumerable{``0})
  name.vb: Minimize(Of TState, TSymbol)(IReadOnlyDenseDfa(Of TState, TSymbol), IEnumerable(Of TState))
  fullName: Yoakke.SynKit.Automata.DfaExtensions.Minimize<TState, TSymbol>(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa<TState, TSymbol>, IEnumerable<TState>)
  fullName.vb: Yoakke.SynKit.Automata.DfaExtensions.Minimize(Of TState, TSymbol)(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa(Of TState, TSymbol), IEnumerable(Of TState))
  nameWithType: DfaExtensions.Minimize<TState, TSymbol>(IReadOnlyDenseDfa<TState, TSymbol>, IEnumerable<TState>)
  nameWithType.vb: DfaExtensions.Minimize(Of TState, TSymbol)(IReadOnlyDenseDfa(Of TState, TSymbol), IEnumerable(Of TState))
- uid: Yoakke.SynKit.Automata.DfaExtensions.Minimize``2(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa{``0,``1},IEnumerable{System.ValueTuple{``0,``0}})
  name: Minimize<TState, TSymbol>(IReadOnlyDenseDfa<TState, TSymbol>, IEnumerable<(TState, TState)>)
  href: api/Yoakke.SynKit.Automata.DfaExtensions.html#Yoakke_SynKit_Automata_DfaExtensions_Minimize__2_Yoakke_SynKit_Automata_Dense_IReadOnlyDenseDfa___0___1__IEnumerable_System_ValueTuple___0___0___
  commentId: M:Yoakke.SynKit.Automata.DfaExtensions.Minimize``2(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa{``0,``1},IEnumerable{System.ValueTuple{``0,``0}})
  name.vb: Minimize(Of TState, TSymbol)(IReadOnlyDenseDfa(Of TState, TSymbol), IEnumerable(Of (TState, TState)))
  fullName: Yoakke.SynKit.Automata.DfaExtensions.Minimize<TState, TSymbol>(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa<TState, TSymbol>, IEnumerable<System.ValueTuple<TState, TState>>)
  fullName.vb: Yoakke.SynKit.Automata.DfaExtensions.Minimize(Of TState, TSymbol)(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa(Of TState, TSymbol), IEnumerable(Of System.ValueTuple(Of TState, TState)))
  nameWithType: DfaExtensions.Minimize<TState, TSymbol>(IReadOnlyDenseDfa<TState, TSymbol>, IEnumerable<(TState, TState)>)
  nameWithType.vb: DfaExtensions.Minimize(Of TState, TSymbol)(IReadOnlyDenseDfa(Of TState, TSymbol), IEnumerable(Of (TState, TState)))
- uid: Yoakke.SynKit.Automata.DfaExtensions.Minimize``2(Yoakke.SynKit.Automata.IReadOnlyDfa{``0,``1})
  name: Minimize<TState, TSymbol>(IReadOnlyDfa<TState, TSymbol>)
  href: api/Yoakke.SynKit.Automata.DfaExtensions.html#Yoakke_SynKit_Automata_DfaExtensions_Minimize__2_Yoakke_SynKit_Automata_IReadOnlyDfa___0___1__
  commentId: M:Yoakke.SynKit.Automata.DfaExtensions.Minimize``2(Yoakke.SynKit.Automata.IReadOnlyDfa{``0,``1})
  name.vb: Minimize(Of TState, TSymbol)(IReadOnlyDfa(Of TState, TSymbol))
  fullName: Yoakke.SynKit.Automata.DfaExtensions.Minimize<TState, TSymbol>(Yoakke.SynKit.Automata.IReadOnlyDfa<TState, TSymbol>)
  fullName.vb: Yoakke.SynKit.Automata.DfaExtensions.Minimize(Of TState, TSymbol)(Yoakke.SynKit.Automata.IReadOnlyDfa(Of TState, TSymbol))
  nameWithType: DfaExtensions.Minimize<TState, TSymbol>(IReadOnlyDfa<TState, TSymbol>)
  nameWithType.vb: DfaExtensions.Minimize(Of TState, TSymbol)(IReadOnlyDfa(Of TState, TSymbol))
- uid: Yoakke.SynKit.Automata.DfaExtensions.Minimize``2(Yoakke.SynKit.Automata.IReadOnlyDfa{``0,``1},IEnumerable{``0})
  name: Minimize<TState, TSymbol>(IReadOnlyDfa<TState, TSymbol>, IEnumerable<TState>)
  href: api/Yoakke.SynKit.Automata.DfaExtensions.html#Yoakke_SynKit_Automata_DfaExtensions_Minimize__2_Yoakke_SynKit_Automata_IReadOnlyDfa___0___1__IEnumerable___0__
  commentId: M:Yoakke.SynKit.Automata.DfaExtensions.Minimize``2(Yoakke.SynKit.Automata.IReadOnlyDfa{``0,``1},IEnumerable{``0})
  name.vb: Minimize(Of TState, TSymbol)(IReadOnlyDfa(Of TState, TSymbol), IEnumerable(Of TState))
  fullName: Yoakke.SynKit.Automata.DfaExtensions.Minimize<TState, TSymbol>(Yoakke.SynKit.Automata.IReadOnlyDfa<TState, TSymbol>, IEnumerable<TState>)
  fullName.vb: Yoakke.SynKit.Automata.DfaExtensions.Minimize(Of TState, TSymbol)(Yoakke.SynKit.Automata.IReadOnlyDfa(Of TState, TSymbol), IEnumerable(Of TState))
  nameWithType: DfaExtensions.Minimize<TState, TSymbol>(IReadOnlyDfa<TState, TSymbol>, IEnumerable<TState>)
  nameWithType.vb: DfaExtensions.Minimize(Of TState, TSymbol)(IReadOnlyDfa(Of TState, TSymbol), IEnumerable(Of TState))
- uid: Yoakke.SynKit.Automata.DfaExtensions.Minimize``2(Yoakke.SynKit.Automata.IReadOnlyDfa{``0,``1},IEnumerable{System.ValueTuple{``0,``0}})
  name: Minimize<TState, TSymbol>(IReadOnlyDfa<TState, TSymbol>, IEnumerable<(TState, TState)>)
  href: api/Yoakke.SynKit.Automata.DfaExtensions.html#Yoakke_SynKit_Automata_DfaExtensions_Minimize__2_Yoakke_SynKit_Automata_IReadOnlyDfa___0___1__IEnumerable_System_ValueTuple___0___0___
  commentId: M:Yoakke.SynKit.Automata.DfaExtensions.Minimize``2(Yoakke.SynKit.Automata.IReadOnlyDfa{``0,``1},IEnumerable{System.ValueTuple{``0,``0}})
  name.vb: Minimize(Of TState, TSymbol)(IReadOnlyDfa(Of TState, TSymbol), IEnumerable(Of (TState, TState)))
  fullName: Yoakke.SynKit.Automata.DfaExtensions.Minimize<TState, TSymbol>(Yoakke.SynKit.Automata.IReadOnlyDfa<TState, TSymbol>, IEnumerable<System.ValueTuple<TState, TState>>)
  fullName.vb: Yoakke.SynKit.Automata.DfaExtensions.Minimize(Of TState, TSymbol)(Yoakke.SynKit.Automata.IReadOnlyDfa(Of TState, TSymbol), IEnumerable(Of System.ValueTuple(Of TState, TState)))
  nameWithType: DfaExtensions.Minimize<TState, TSymbol>(IReadOnlyDfa<TState, TSymbol>, IEnumerable<(TState, TState)>)
  nameWithType.vb: DfaExtensions.Minimize(Of TState, TSymbol)(IReadOnlyDfa(Of TState, TSymbol), IEnumerable(Of (TState, TState)))
- uid: Yoakke.SynKit.Automata.DfaExtensions.Minimize``2(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa{``0,``1})
  name: Minimize<TState, TSymbol>(IReadOnlySparseDfa<TState, TSymbol>)
  href: api/Yoakke.SynKit.Automata.DfaExtensions.html#Yoakke_SynKit_Automata_DfaExtensions_Minimize__2_Yoakke_SynKit_Automata_Sparse_IReadOnlySparseDfa___0___1__
  commentId: M:Yoakke.SynKit.Automata.DfaExtensions.Minimize``2(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa{``0,``1})
  name.vb: Minimize(Of TState, TSymbol)(IReadOnlySparseDfa(Of TState, TSymbol))
  fullName: Yoakke.SynKit.Automata.DfaExtensions.Minimize<TState, TSymbol>(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa<TState, TSymbol>)
  fullName.vb: Yoakke.SynKit.Automata.DfaExtensions.Minimize(Of TState, TSymbol)(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa(Of TState, TSymbol))
  nameWithType: DfaExtensions.Minimize<TState, TSymbol>(IReadOnlySparseDfa<TState, TSymbol>)
  nameWithType.vb: DfaExtensions.Minimize(Of TState, TSymbol)(IReadOnlySparseDfa(Of TState, TSymbol))
- uid: Yoakke.SynKit.Automata.DfaExtensions.Minimize``2(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa{``0,``1},IEnumerable{``0})
  name: Minimize<TState, TSymbol>(IReadOnlySparseDfa<TState, TSymbol>, IEnumerable<TState>)
  href: api/Yoakke.SynKit.Automata.DfaExtensions.html#Yoakke_SynKit_Automata_DfaExtensions_Minimize__2_Yoakke_SynKit_Automata_Sparse_IReadOnlySparseDfa___0___1__IEnumerable___0__
  commentId: M:Yoakke.SynKit.Automata.DfaExtensions.Minimize``2(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa{``0,``1},IEnumerable{``0})
  name.vb: Minimize(Of TState, TSymbol)(IReadOnlySparseDfa(Of TState, TSymbol), IEnumerable(Of TState))
  fullName: Yoakke.SynKit.Automata.DfaExtensions.Minimize<TState, TSymbol>(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa<TState, TSymbol>, IEnumerable<TState>)
  fullName.vb: Yoakke.SynKit.Automata.DfaExtensions.Minimize(Of TState, TSymbol)(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa(Of TState, TSymbol), IEnumerable(Of TState))
  nameWithType: DfaExtensions.Minimize<TState, TSymbol>(IReadOnlySparseDfa<TState, TSymbol>, IEnumerable<TState>)
  nameWithType.vb: DfaExtensions.Minimize(Of TState, TSymbol)(IReadOnlySparseDfa(Of TState, TSymbol), IEnumerable(Of TState))
- uid: Yoakke.SynKit.Automata.DfaExtensions.Minimize``2(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa{``0,``1},IEnumerable{System.ValueTuple{``0,``0}})
  name: Minimize<TState, TSymbol>(IReadOnlySparseDfa<TState, TSymbol>, IEnumerable<(TState, TState)>)
  href: api/Yoakke.SynKit.Automata.DfaExtensions.html#Yoakke_SynKit_Automata_DfaExtensions_Minimize__2_Yoakke_SynKit_Automata_Sparse_IReadOnlySparseDfa___0___1__IEnumerable_System_ValueTuple___0___0___
  commentId: M:Yoakke.SynKit.Automata.DfaExtensions.Minimize``2(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa{``0,``1},IEnumerable{System.ValueTuple{``0,``0}})
  name.vb: Minimize(Of TState, TSymbol)(IReadOnlySparseDfa(Of TState, TSymbol), IEnumerable(Of (TState, TState)))
  fullName: Yoakke.SynKit.Automata.DfaExtensions.Minimize<TState, TSymbol>(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa<TState, TSymbol>, IEnumerable<System.ValueTuple<TState, TState>>)
  fullName.vb: Yoakke.SynKit.Automata.DfaExtensions.Minimize(Of TState, TSymbol)(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa(Of TState, TSymbol), IEnumerable(Of System.ValueTuple(Of TState, TState)))
  nameWithType: DfaExtensions.Minimize<TState, TSymbol>(IReadOnlySparseDfa<TState, TSymbol>, IEnumerable<(TState, TState)>)
  nameWithType.vb: DfaExtensions.Minimize(Of TState, TSymbol)(IReadOnlySparseDfa(Of TState, TSymbol), IEnumerable(Of (TState, TState)))
- uid: Yoakke.SynKit.Automata.DfaExtensions.Minimize``3(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa{``0,``1},Yoakke.SynKit.Automata.IStateCombiner{``0,``2})
  name: Minimize<TState, TSymbol, TResultState>(IReadOnlyDenseDfa<TState, TSymbol>, IStateCombiner<TState, TResultState>)
  href: api/Yoakke.SynKit.Automata.DfaExtensions.html#Yoakke_SynKit_Automata_DfaExtensions_Minimize__3_Yoakke_SynKit_Automata_Dense_IReadOnlyDenseDfa___0___1__Yoakke_SynKit_Automata_IStateCombiner___0___2__
  commentId: M:Yoakke.SynKit.Automata.DfaExtensions.Minimize``3(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa{``0,``1},Yoakke.SynKit.Automata.IStateCombiner{``0,``2})
  name.vb: Minimize(Of TState, TSymbol, TResultState)(IReadOnlyDenseDfa(Of TState, TSymbol), IStateCombiner(Of TState, TResultState))
  fullName: Yoakke.SynKit.Automata.DfaExtensions.Minimize<TState, TSymbol, TResultState>(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa<TState, TSymbol>, Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>)
  fullName.vb: Yoakke.SynKit.Automata.DfaExtensions.Minimize(Of TState, TSymbol, TResultState)(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa(Of TState, TSymbol), Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState))
  nameWithType: DfaExtensions.Minimize<TState, TSymbol, TResultState>(IReadOnlyDenseDfa<TState, TSymbol>, IStateCombiner<TState, TResultState>)
  nameWithType.vb: DfaExtensions.Minimize(Of TState, TSymbol, TResultState)(IReadOnlyDenseDfa(Of TState, TSymbol), IStateCombiner(Of TState, TResultState))
- uid: Yoakke.SynKit.Automata.DfaExtensions.Minimize``3(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa{``0,``1},Yoakke.SynKit.Automata.IStateCombiner{``0,``2},IEnumerable{``0})
  name: Minimize<TState, TSymbol, TResultState>(IReadOnlyDenseDfa<TState, TSymbol>, IStateCombiner<TState, TResultState>, IEnumerable<TState>)
  href: api/Yoakke.SynKit.Automata.DfaExtensions.html#Yoakke_SynKit_Automata_DfaExtensions_Minimize__3_Yoakke_SynKit_Automata_Dense_IReadOnlyDenseDfa___0___1__Yoakke_SynKit_Automata_IStateCombiner___0___2__IEnumerable___0__
  commentId: M:Yoakke.SynKit.Automata.DfaExtensions.Minimize``3(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa{``0,``1},Yoakke.SynKit.Automata.IStateCombiner{``0,``2},IEnumerable{``0})
  name.vb: Minimize(Of TState, TSymbol, TResultState)(IReadOnlyDenseDfa(Of TState, TSymbol), IStateCombiner(Of TState, TResultState), IEnumerable(Of TState))
  fullName: Yoakke.SynKit.Automata.DfaExtensions.Minimize<TState, TSymbol, TResultState>(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa<TState, TSymbol>, Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>, IEnumerable<TState>)
  fullName.vb: Yoakke.SynKit.Automata.DfaExtensions.Minimize(Of TState, TSymbol, TResultState)(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseDfa(Of TState, TSymbol), Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState), IEnumerable(Of TState))
  nameWithType: DfaExtensions.Minimize<TState, TSymbol, TResultState>(IReadOnlyDenseDfa<TState, TSymbol>, IStateCombiner<TState, TResultState>, IEnumerable<TState>)
  nameWithType.vb: DfaExtensions.Minimize(Of TState, TSymbol, TResultState)(IReadOnlyDenseDfa(Of TState, TSymbol), IStateCombiner(Of TState, TResultState), IEnumerable(Of TState))
- uid: Yoakke.SynKit.Automata.DfaExtensions.Minimize``3(Yoakke.SynKit.Automata.IReadOnlyDfa{``0,``1},Yoakke.SynKit.Automata.IStateCombiner{``0,``2})
  name: Minimize<TState, TSymbol, TResultState>(IReadOnlyDfa<TState, TSymbol>, IStateCombiner<TState, TResultState>)
  href: api/Yoakke.SynKit.Automata.DfaExtensions.html#Yoakke_SynKit_Automata_DfaExtensions_Minimize__3_Yoakke_SynKit_Automata_IReadOnlyDfa___0___1__Yoakke_SynKit_Automata_IStateCombiner___0___2__
  commentId: M:Yoakke.SynKit.Automata.DfaExtensions.Minimize``3(Yoakke.SynKit.Automata.IReadOnlyDfa{``0,``1},Yoakke.SynKit.Automata.IStateCombiner{``0,``2})
  name.vb: Minimize(Of TState, TSymbol, TResultState)(IReadOnlyDfa(Of TState, TSymbol), IStateCombiner(Of TState, TResultState))
  fullName: Yoakke.SynKit.Automata.DfaExtensions.Minimize<TState, TSymbol, TResultState>(Yoakke.SynKit.Automata.IReadOnlyDfa<TState, TSymbol>, Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>)
  fullName.vb: Yoakke.SynKit.Automata.DfaExtensions.Minimize(Of TState, TSymbol, TResultState)(Yoakke.SynKit.Automata.IReadOnlyDfa(Of TState, TSymbol), Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState))
  nameWithType: DfaExtensions.Minimize<TState, TSymbol, TResultState>(IReadOnlyDfa<TState, TSymbol>, IStateCombiner<TState, TResultState>)
  nameWithType.vb: DfaExtensions.Minimize(Of TState, TSymbol, TResultState)(IReadOnlyDfa(Of TState, TSymbol), IStateCombiner(Of TState, TResultState))
- uid: Yoakke.SynKit.Automata.DfaExtensions.Minimize``3(Yoakke.SynKit.Automata.IReadOnlyDfa{``0,``1},Yoakke.SynKit.Automata.IStateCombiner{``0,``2},IEnumerable{``0})
  name: Minimize<TState, TSymbol, TResultState>(IReadOnlyDfa<TState, TSymbol>, IStateCombiner<TState, TResultState>, IEnumerable<TState>)
  href: api/Yoakke.SynKit.Automata.DfaExtensions.html#Yoakke_SynKit_Automata_DfaExtensions_Minimize__3_Yoakke_SynKit_Automata_IReadOnlyDfa___0___1__Yoakke_SynKit_Automata_IStateCombiner___0___2__IEnumerable___0__
  commentId: M:Yoakke.SynKit.Automata.DfaExtensions.Minimize``3(Yoakke.SynKit.Automata.IReadOnlyDfa{``0,``1},Yoakke.SynKit.Automata.IStateCombiner{``0,``2},IEnumerable{``0})
  name.vb: Minimize(Of TState, TSymbol, TResultState)(IReadOnlyDfa(Of TState, TSymbol), IStateCombiner(Of TState, TResultState), IEnumerable(Of TState))
  fullName: Yoakke.SynKit.Automata.DfaExtensions.Minimize<TState, TSymbol, TResultState>(Yoakke.SynKit.Automata.IReadOnlyDfa<TState, TSymbol>, Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>, IEnumerable<TState>)
  fullName.vb: Yoakke.SynKit.Automata.DfaExtensions.Minimize(Of TState, TSymbol, TResultState)(Yoakke.SynKit.Automata.IReadOnlyDfa(Of TState, TSymbol), Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState), IEnumerable(Of TState))
  nameWithType: DfaExtensions.Minimize<TState, TSymbol, TResultState>(IReadOnlyDfa<TState, TSymbol>, IStateCombiner<TState, TResultState>, IEnumerable<TState>)
  nameWithType.vb: DfaExtensions.Minimize(Of TState, TSymbol, TResultState)(IReadOnlyDfa(Of TState, TSymbol), IStateCombiner(Of TState, TResultState), IEnumerable(Of TState))
- uid: Yoakke.SynKit.Automata.DfaExtensions.Minimize``3(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa{``0,``1},Yoakke.SynKit.Automata.IStateCombiner{``0,``2})
  name: Minimize<TState, TSymbol, TResultState>(IReadOnlySparseDfa<TState, TSymbol>, IStateCombiner<TState, TResultState>)
  href: api/Yoakke.SynKit.Automata.DfaExtensions.html#Yoakke_SynKit_Automata_DfaExtensions_Minimize__3_Yoakke_SynKit_Automata_Sparse_IReadOnlySparseDfa___0___1__Yoakke_SynKit_Automata_IStateCombiner___0___2__
  commentId: M:Yoakke.SynKit.Automata.DfaExtensions.Minimize``3(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa{``0,``1},Yoakke.SynKit.Automata.IStateCombiner{``0,``2})
  name.vb: Minimize(Of TState, TSymbol, TResultState)(IReadOnlySparseDfa(Of TState, TSymbol), IStateCombiner(Of TState, TResultState))
  fullName: Yoakke.SynKit.Automata.DfaExtensions.Minimize<TState, TSymbol, TResultState>(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa<TState, TSymbol>, Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>)
  fullName.vb: Yoakke.SynKit.Automata.DfaExtensions.Minimize(Of TState, TSymbol, TResultState)(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa(Of TState, TSymbol), Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState))
  nameWithType: DfaExtensions.Minimize<TState, TSymbol, TResultState>(IReadOnlySparseDfa<TState, TSymbol>, IStateCombiner<TState, TResultState>)
  nameWithType.vb: DfaExtensions.Minimize(Of TState, TSymbol, TResultState)(IReadOnlySparseDfa(Of TState, TSymbol), IStateCombiner(Of TState, TResultState))
- uid: Yoakke.SynKit.Automata.DfaExtensions.Minimize``3(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa{``0,``1},Yoakke.SynKit.Automata.IStateCombiner{``0,``2},IEnumerable{``0})
  name: Minimize<TState, TSymbol, TResultState>(IReadOnlySparseDfa<TState, TSymbol>, IStateCombiner<TState, TResultState>, IEnumerable<TState>)
  href: api/Yoakke.SynKit.Automata.DfaExtensions.html#Yoakke_SynKit_Automata_DfaExtensions_Minimize__3_Yoakke_SynKit_Automata_Sparse_IReadOnlySparseDfa___0___1__Yoakke_SynKit_Automata_IStateCombiner___0___2__IEnumerable___0__
  commentId: M:Yoakke.SynKit.Automata.DfaExtensions.Minimize``3(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa{``0,``1},Yoakke.SynKit.Automata.IStateCombiner{``0,``2},IEnumerable{``0})
  name.vb: Minimize(Of TState, TSymbol, TResultState)(IReadOnlySparseDfa(Of TState, TSymbol), IStateCombiner(Of TState, TResultState), IEnumerable(Of TState))
  fullName: Yoakke.SynKit.Automata.DfaExtensions.Minimize<TState, TSymbol, TResultState>(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa<TState, TSymbol>, Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>, IEnumerable<TState>)
  fullName.vb: Yoakke.SynKit.Automata.DfaExtensions.Minimize(Of TState, TSymbol, TResultState)(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa(Of TState, TSymbol), Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState), IEnumerable(Of TState))
  nameWithType: DfaExtensions.Minimize<TState, TSymbol, TResultState>(IReadOnlySparseDfa<TState, TSymbol>, IStateCombiner<TState, TResultState>, IEnumerable<TState>)
  nameWithType.vb: DfaExtensions.Minimize(Of TState, TSymbol, TResultState)(IReadOnlySparseDfa(Of TState, TSymbol), IStateCombiner(Of TState, TResultState), IEnumerable(Of TState))
- uid: Yoakke.SynKit.Automata.IDfa`2
  name: IDfa<TState, TSymbol>
  href: api/Yoakke.SynKit.Automata.IDfa-2.html
  commentId: T:Yoakke.SynKit.Automata.IDfa`2
  name.vb: IDfa(Of TState, TSymbol)
  fullName: Yoakke.SynKit.Automata.IDfa<TState, TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.IDfa(Of TState, TSymbol)
  nameWithType: IDfa<TState, TSymbol>
  nameWithType.vb: IDfa(Of TState, TSymbol)
- uid: Yoakke.SynKit.Automata.IDfa`2.InitialState
  name: InitialState
  href: api/Yoakke.SynKit.Automata.IDfa-2.html#Yoakke_SynKit_Automata_IDfa_2_InitialState
  commentId: P:Yoakke.SynKit.Automata.IDfa`2.InitialState
  fullName: Yoakke.SynKit.Automata.IDfa<TState, TSymbol>.InitialState
  fullName.vb: Yoakke.SynKit.Automata.IDfa(Of TState, TSymbol).InitialState
  nameWithType: IDfa<TState, TSymbol>.InitialState
  nameWithType.vb: IDfa(Of TState, TSymbol).InitialState
- uid: Yoakke.SynKit.Automata.IDfa`2.InitialState*
  name: InitialState
  href: api/Yoakke.SynKit.Automata.IDfa-2.html#Yoakke_SynKit_Automata_IDfa_2_InitialState_
  commentId: Overload:Yoakke.SynKit.Automata.IDfa`2.InitialState
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.IDfa<TState, TSymbol>.InitialState
  fullName.vb: Yoakke.SynKit.Automata.IDfa(Of TState, TSymbol).InitialState
  nameWithType: IDfa<TState, TSymbol>.InitialState
  nameWithType.vb: IDfa(Of TState, TSymbol).InitialState
- uid: Yoakke.SynKit.Automata.IFiniteAutomaton`2
  name: IFiniteAutomaton<TState, TSymbol>
  href: api/Yoakke.SynKit.Automata.IFiniteAutomaton-2.html
  commentId: T:Yoakke.SynKit.Automata.IFiniteAutomaton`2
  name.vb: IFiniteAutomaton(Of TState, TSymbol)
  fullName: Yoakke.SynKit.Automata.IFiniteAutomaton<TState, TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.IFiniteAutomaton(Of TState, TSymbol)
  nameWithType: IFiniteAutomaton<TState, TSymbol>
  nameWithType.vb: IFiniteAutomaton(Of TState, TSymbol)
- uid: Yoakke.SynKit.Automata.IFiniteAutomaton`2.AcceptingStates
  name: AcceptingStates
  href: api/Yoakke.SynKit.Automata.IFiniteAutomaton-2.html#Yoakke_SynKit_Automata_IFiniteAutomaton_2_AcceptingStates
  commentId: P:Yoakke.SynKit.Automata.IFiniteAutomaton`2.AcceptingStates
  fullName: Yoakke.SynKit.Automata.IFiniteAutomaton<TState, TSymbol>.AcceptingStates
  fullName.vb: Yoakke.SynKit.Automata.IFiniteAutomaton(Of TState, TSymbol).AcceptingStates
  nameWithType: IFiniteAutomaton<TState, TSymbol>.AcceptingStates
  nameWithType.vb: IFiniteAutomaton(Of TState, TSymbol).AcceptingStates
- uid: Yoakke.SynKit.Automata.IFiniteAutomaton`2.AcceptingStates*
  name: AcceptingStates
  href: api/Yoakke.SynKit.Automata.IFiniteAutomaton-2.html#Yoakke_SynKit_Automata_IFiniteAutomaton_2_AcceptingStates_
  commentId: Overload:Yoakke.SynKit.Automata.IFiniteAutomaton`2.AcceptingStates
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.IFiniteAutomaton<TState, TSymbol>.AcceptingStates
  fullName.vb: Yoakke.SynKit.Automata.IFiniteAutomaton(Of TState, TSymbol).AcceptingStates
  nameWithType: IFiniteAutomaton<TState, TSymbol>.AcceptingStates
  nameWithType.vb: IFiniteAutomaton(Of TState, TSymbol).AcceptingStates
- uid: Yoakke.SynKit.Automata.IFiniteAutomaton`2.AddTransition(`0,`1,`0)
  name: AddTransition(TState, TSymbol, TState)
  href: api/Yoakke.SynKit.Automata.IFiniteAutomaton-2.html#Yoakke_SynKit_Automata_IFiniteAutomaton_2_AddTransition__0__1__0_
  commentId: M:Yoakke.SynKit.Automata.IFiniteAutomaton`2.AddTransition(`0,`1,`0)
  fullName: Yoakke.SynKit.Automata.IFiniteAutomaton<TState, TSymbol>.AddTransition(TState, TSymbol, TState)
  fullName.vb: Yoakke.SynKit.Automata.IFiniteAutomaton(Of TState, TSymbol).AddTransition(TState, TSymbol, TState)
  nameWithType: IFiniteAutomaton<TState, TSymbol>.AddTransition(TState, TSymbol, TState)
  nameWithType.vb: IFiniteAutomaton(Of TState, TSymbol).AddTransition(TState, TSymbol, TState)
- uid: Yoakke.SynKit.Automata.IFiniteAutomaton`2.AddTransition*
  name: AddTransition
  href: api/Yoakke.SynKit.Automata.IFiniteAutomaton-2.html#Yoakke_SynKit_Automata_IFiniteAutomaton_2_AddTransition_
  commentId: Overload:Yoakke.SynKit.Automata.IFiniteAutomaton`2.AddTransition
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.IFiniteAutomaton<TState, TSymbol>.AddTransition
  fullName.vb: Yoakke.SynKit.Automata.IFiniteAutomaton(Of TState, TSymbol).AddTransition
  nameWithType: IFiniteAutomaton<TState, TSymbol>.AddTransition
  nameWithType.vb: IFiniteAutomaton(Of TState, TSymbol).AddTransition
- uid: Yoakke.SynKit.Automata.IFiniteAutomaton`2.RemoveTransition(`0,`1,`0)
  name: RemoveTransition(TState, TSymbol, TState)
  href: api/Yoakke.SynKit.Automata.IFiniteAutomaton-2.html#Yoakke_SynKit_Automata_IFiniteAutomaton_2_RemoveTransition__0__1__0_
  commentId: M:Yoakke.SynKit.Automata.IFiniteAutomaton`2.RemoveTransition(`0,`1,`0)
  fullName: Yoakke.SynKit.Automata.IFiniteAutomaton<TState, TSymbol>.RemoveTransition(TState, TSymbol, TState)
  fullName.vb: Yoakke.SynKit.Automata.IFiniteAutomaton(Of TState, TSymbol).RemoveTransition(TState, TSymbol, TState)
  nameWithType: IFiniteAutomaton<TState, TSymbol>.RemoveTransition(TState, TSymbol, TState)
  nameWithType.vb: IFiniteAutomaton(Of TState, TSymbol).RemoveTransition(TState, TSymbol, TState)
- uid: Yoakke.SynKit.Automata.IFiniteAutomaton`2.RemoveTransition*
  name: RemoveTransition
  href: api/Yoakke.SynKit.Automata.IFiniteAutomaton-2.html#Yoakke_SynKit_Automata_IFiniteAutomaton_2_RemoveTransition_
  commentId: Overload:Yoakke.SynKit.Automata.IFiniteAutomaton`2.RemoveTransition
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.IFiniteAutomaton<TState, TSymbol>.RemoveTransition
  fullName.vb: Yoakke.SynKit.Automata.IFiniteAutomaton(Of TState, TSymbol).RemoveTransition
  nameWithType: IFiniteAutomaton<TState, TSymbol>.RemoveTransition
  nameWithType.vb: IFiniteAutomaton(Of TState, TSymbol).RemoveTransition
- uid: Yoakke.SynKit.Automata.IFiniteAutomaton`2.RemoveUnreachable
  name: RemoveUnreachable()
  href: api/Yoakke.SynKit.Automata.IFiniteAutomaton-2.html#Yoakke_SynKit_Automata_IFiniteAutomaton_2_RemoveUnreachable
  commentId: M:Yoakke.SynKit.Automata.IFiniteAutomaton`2.RemoveUnreachable
  fullName: Yoakke.SynKit.Automata.IFiniteAutomaton<TState, TSymbol>.RemoveUnreachable()
  fullName.vb: Yoakke.SynKit.Automata.IFiniteAutomaton(Of TState, TSymbol).RemoveUnreachable()
  nameWithType: IFiniteAutomaton<TState, TSymbol>.RemoveUnreachable()
  nameWithType.vb: IFiniteAutomaton(Of TState, TSymbol).RemoveUnreachable()
- uid: Yoakke.SynKit.Automata.IFiniteAutomaton`2.RemoveUnreachable*
  name: RemoveUnreachable
  href: api/Yoakke.SynKit.Automata.IFiniteAutomaton-2.html#Yoakke_SynKit_Automata_IFiniteAutomaton_2_RemoveUnreachable_
  commentId: Overload:Yoakke.SynKit.Automata.IFiniteAutomaton`2.RemoveUnreachable
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.IFiniteAutomaton<TState, TSymbol>.RemoveUnreachable
  fullName.vb: Yoakke.SynKit.Automata.IFiniteAutomaton(Of TState, TSymbol).RemoveUnreachable
  nameWithType: IFiniteAutomaton<TState, TSymbol>.RemoveUnreachable
  nameWithType.vb: IFiniteAutomaton(Of TState, TSymbol).RemoveUnreachable
- uid: Yoakke.SynKit.Automata.IFiniteAutomaton`2.States
  name: States
  href: api/Yoakke.SynKit.Automata.IFiniteAutomaton-2.html#Yoakke_SynKit_Automata_IFiniteAutomaton_2_States
  commentId: P:Yoakke.SynKit.Automata.IFiniteAutomaton`2.States
  fullName: Yoakke.SynKit.Automata.IFiniteAutomaton<TState, TSymbol>.States
  fullName.vb: Yoakke.SynKit.Automata.IFiniteAutomaton(Of TState, TSymbol).States
  nameWithType: IFiniteAutomaton<TState, TSymbol>.States
  nameWithType.vb: IFiniteAutomaton(Of TState, TSymbol).States
- uid: Yoakke.SynKit.Automata.IFiniteAutomaton`2.States*
  name: States
  href: api/Yoakke.SynKit.Automata.IFiniteAutomaton-2.html#Yoakke_SynKit_Automata_IFiniteAutomaton_2_States_
  commentId: Overload:Yoakke.SynKit.Automata.IFiniteAutomaton`2.States
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.IFiniteAutomaton<TState, TSymbol>.States
  fullName.vb: Yoakke.SynKit.Automata.IFiniteAutomaton(Of TState, TSymbol).States
  nameWithType: IFiniteAutomaton<TState, TSymbol>.States
  nameWithType.vb: IFiniteAutomaton(Of TState, TSymbol).States
- uid: Yoakke.SynKit.Automata.INfa`2
  name: INfa<TState, TSymbol>
  href: api/Yoakke.SynKit.Automata.INfa-2.html
  commentId: T:Yoakke.SynKit.Automata.INfa`2
  name.vb: INfa(Of TState, TSymbol)
  fullName: Yoakke.SynKit.Automata.INfa<TState, TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.INfa(Of TState, TSymbol)
  nameWithType: INfa<TState, TSymbol>
  nameWithType.vb: INfa(Of TState, TSymbol)
- uid: Yoakke.SynKit.Automata.INfa`2.AddEpsilonTransition(`0,`0)
  name: AddEpsilonTransition(TState, TState)
  href: api/Yoakke.SynKit.Automata.INfa-2.html#Yoakke_SynKit_Automata_INfa_2_AddEpsilonTransition__0__0_
  commentId: M:Yoakke.SynKit.Automata.INfa`2.AddEpsilonTransition(`0,`0)
  fullName: Yoakke.SynKit.Automata.INfa<TState, TSymbol>.AddEpsilonTransition(TState, TState)
  fullName.vb: Yoakke.SynKit.Automata.INfa(Of TState, TSymbol).AddEpsilonTransition(TState, TState)
  nameWithType: INfa<TState, TSymbol>.AddEpsilonTransition(TState, TState)
  nameWithType.vb: INfa(Of TState, TSymbol).AddEpsilonTransition(TState, TState)
- uid: Yoakke.SynKit.Automata.INfa`2.AddEpsilonTransition*
  name: AddEpsilonTransition
  href: api/Yoakke.SynKit.Automata.INfa-2.html#Yoakke_SynKit_Automata_INfa_2_AddEpsilonTransition_
  commentId: Overload:Yoakke.SynKit.Automata.INfa`2.AddEpsilonTransition
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.INfa<TState, TSymbol>.AddEpsilonTransition
  fullName.vb: Yoakke.SynKit.Automata.INfa(Of TState, TSymbol).AddEpsilonTransition
  nameWithType: INfa<TState, TSymbol>.AddEpsilonTransition
  nameWithType.vb: INfa(Of TState, TSymbol).AddEpsilonTransition
- uid: Yoakke.SynKit.Automata.INfa`2.EliminateEpsilonTransitions
  name: EliminateEpsilonTransitions()
  href: api/Yoakke.SynKit.Automata.INfa-2.html#Yoakke_SynKit_Automata_INfa_2_EliminateEpsilonTransitions
  commentId: M:Yoakke.SynKit.Automata.INfa`2.EliminateEpsilonTransitions
  fullName: Yoakke.SynKit.Automata.INfa<TState, TSymbol>.EliminateEpsilonTransitions()
  fullName.vb: Yoakke.SynKit.Automata.INfa(Of TState, TSymbol).EliminateEpsilonTransitions()
  nameWithType: INfa<TState, TSymbol>.EliminateEpsilonTransitions()
  nameWithType.vb: INfa(Of TState, TSymbol).EliminateEpsilonTransitions()
- uid: Yoakke.SynKit.Automata.INfa`2.EliminateEpsilonTransitions*
  name: EliminateEpsilonTransitions
  href: api/Yoakke.SynKit.Automata.INfa-2.html#Yoakke_SynKit_Automata_INfa_2_EliminateEpsilonTransitions_
  commentId: Overload:Yoakke.SynKit.Automata.INfa`2.EliminateEpsilonTransitions
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.INfa<TState, TSymbol>.EliminateEpsilonTransitions
  fullName.vb: Yoakke.SynKit.Automata.INfa(Of TState, TSymbol).EliminateEpsilonTransitions
  nameWithType: INfa<TState, TSymbol>.EliminateEpsilonTransitions
  nameWithType.vb: INfa(Of TState, TSymbol).EliminateEpsilonTransitions
- uid: Yoakke.SynKit.Automata.INfa`2.EpsilonTransitions
  name: EpsilonTransitions
  href: api/Yoakke.SynKit.Automata.INfa-2.html#Yoakke_SynKit_Automata_INfa_2_EpsilonTransitions
  commentId: P:Yoakke.SynKit.Automata.INfa`2.EpsilonTransitions
  fullName: Yoakke.SynKit.Automata.INfa<TState, TSymbol>.EpsilonTransitions
  fullName.vb: Yoakke.SynKit.Automata.INfa(Of TState, TSymbol).EpsilonTransitions
  nameWithType: INfa<TState, TSymbol>.EpsilonTransitions
  nameWithType.vb: INfa(Of TState, TSymbol).EpsilonTransitions
- uid: Yoakke.SynKit.Automata.INfa`2.EpsilonTransitions*
  name: EpsilonTransitions
  href: api/Yoakke.SynKit.Automata.INfa-2.html#Yoakke_SynKit_Automata_INfa_2_EpsilonTransitions_
  commentId: Overload:Yoakke.SynKit.Automata.INfa`2.EpsilonTransitions
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.INfa<TState, TSymbol>.EpsilonTransitions
  fullName.vb: Yoakke.SynKit.Automata.INfa(Of TState, TSymbol).EpsilonTransitions
  nameWithType: INfa<TState, TSymbol>.EpsilonTransitions
  nameWithType.vb: INfa(Of TState, TSymbol).EpsilonTransitions
- uid: Yoakke.SynKit.Automata.INfa`2.InitialStates
  name: InitialStates
  href: api/Yoakke.SynKit.Automata.INfa-2.html#Yoakke_SynKit_Automata_INfa_2_InitialStates
  commentId: P:Yoakke.SynKit.Automata.INfa`2.InitialStates
  fullName: Yoakke.SynKit.Automata.INfa<TState, TSymbol>.InitialStates
  fullName.vb: Yoakke.SynKit.Automata.INfa(Of TState, TSymbol).InitialStates
  nameWithType: INfa<TState, TSymbol>.InitialStates
  nameWithType.vb: INfa(Of TState, TSymbol).InitialStates
- uid: Yoakke.SynKit.Automata.INfa`2.InitialStates*
  name: InitialStates
  href: api/Yoakke.SynKit.Automata.INfa-2.html#Yoakke_SynKit_Automata_INfa_2_InitialStates_
  commentId: Overload:Yoakke.SynKit.Automata.INfa`2.InitialStates
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.INfa<TState, TSymbol>.InitialStates
  fullName.vb: Yoakke.SynKit.Automata.INfa(Of TState, TSymbol).InitialStates
  nameWithType: INfa<TState, TSymbol>.InitialStates
  nameWithType.vb: INfa(Of TState, TSymbol).InitialStates
- uid: Yoakke.SynKit.Automata.INfa`2.RemoveEpsilonTransition(`0,`0)
  name: RemoveEpsilonTransition(TState, TState)
  href: api/Yoakke.SynKit.Automata.INfa-2.html#Yoakke_SynKit_Automata_INfa_2_RemoveEpsilonTransition__0__0_
  commentId: M:Yoakke.SynKit.Automata.INfa`2.RemoveEpsilonTransition(`0,`0)
  fullName: Yoakke.SynKit.Automata.INfa<TState, TSymbol>.RemoveEpsilonTransition(TState, TState)
  fullName.vb: Yoakke.SynKit.Automata.INfa(Of TState, TSymbol).RemoveEpsilonTransition(TState, TState)
  nameWithType: INfa<TState, TSymbol>.RemoveEpsilonTransition(TState, TState)
  nameWithType.vb: INfa(Of TState, TSymbol).RemoveEpsilonTransition(TState, TState)
- uid: Yoakke.SynKit.Automata.INfa`2.RemoveEpsilonTransition*
  name: RemoveEpsilonTransition
  href: api/Yoakke.SynKit.Automata.INfa-2.html#Yoakke_SynKit_Automata_INfa_2_RemoveEpsilonTransition_
  commentId: Overload:Yoakke.SynKit.Automata.INfa`2.RemoveEpsilonTransition
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.INfa<TState, TSymbol>.RemoveEpsilonTransition
  fullName.vb: Yoakke.SynKit.Automata.INfa(Of TState, TSymbol).RemoveEpsilonTransition
  nameWithType: INfa<TState, TSymbol>.RemoveEpsilonTransition
  nameWithType.vb: INfa(Of TState, TSymbol).RemoveEpsilonTransition
- uid: Yoakke.SynKit.Automata.IReadOnlyDfa`2
  name: IReadOnlyDfa<TState, TSymbol>
  href: api/Yoakke.SynKit.Automata.IReadOnlyDfa-2.html
  commentId: T:Yoakke.SynKit.Automata.IReadOnlyDfa`2
  name.vb: IReadOnlyDfa(Of TState, TSymbol)
  fullName: Yoakke.SynKit.Automata.IReadOnlyDfa<TState, TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyDfa(Of TState, TSymbol)
  nameWithType: IReadOnlyDfa<TState, TSymbol>
  nameWithType.vb: IReadOnlyDfa(Of TState, TSymbol)
- uid: Yoakke.SynKit.Automata.IReadOnlyDfa`2.InitialState
  name: InitialState
  href: api/Yoakke.SynKit.Automata.IReadOnlyDfa-2.html#Yoakke_SynKit_Automata_IReadOnlyDfa_2_InitialState
  commentId: P:Yoakke.SynKit.Automata.IReadOnlyDfa`2.InitialState
  fullName: Yoakke.SynKit.Automata.IReadOnlyDfa<TState, TSymbol>.InitialState
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyDfa(Of TState, TSymbol).InitialState
  nameWithType: IReadOnlyDfa<TState, TSymbol>.InitialState
  nameWithType.vb: IReadOnlyDfa(Of TState, TSymbol).InitialState
- uid: Yoakke.SynKit.Automata.IReadOnlyDfa`2.InitialState*
  name: InitialState
  href: api/Yoakke.SynKit.Automata.IReadOnlyDfa-2.html#Yoakke_SynKit_Automata_IReadOnlyDfa_2_InitialState_
  commentId: Overload:Yoakke.SynKit.Automata.IReadOnlyDfa`2.InitialState
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.IReadOnlyDfa<TState, TSymbol>.InitialState
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyDfa(Of TState, TSymbol).InitialState
  nameWithType: IReadOnlyDfa<TState, TSymbol>.InitialState
  nameWithType.vb: IReadOnlyDfa(Of TState, TSymbol).InitialState
- uid: Yoakke.SynKit.Automata.IReadOnlyDfa`2.Minimize*
  name: Minimize
  href: api/Yoakke.SynKit.Automata.IReadOnlyDfa-2.html#Yoakke_SynKit_Automata_IReadOnlyDfa_2_Minimize_
  commentId: Overload:Yoakke.SynKit.Automata.IReadOnlyDfa`2.Minimize
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.IReadOnlyDfa<TState, TSymbol>.Minimize
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyDfa(Of TState, TSymbol).Minimize
  nameWithType: IReadOnlyDfa<TState, TSymbol>.Minimize
  nameWithType.vb: IReadOnlyDfa(Of TState, TSymbol).Minimize
- uid: Yoakke.SynKit.Automata.IReadOnlyDfa`2.Minimize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0},IEnumerable{System.ValueTuple{`0,`0}})
  name: Minimize<TResultState>(IStateCombiner<TState, TResultState>, IEnumerable<(TState, TState)>)
  href: api/Yoakke.SynKit.Automata.IReadOnlyDfa-2.html#Yoakke_SynKit_Automata_IReadOnlyDfa_2_Minimize__1_Yoakke_SynKit_Automata_IStateCombiner__0___0__IEnumerable_System_ValueTuple__0__0___
  commentId: M:Yoakke.SynKit.Automata.IReadOnlyDfa`2.Minimize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0},IEnumerable{System.ValueTuple{`0,`0}})
  name.vb: Minimize(Of TResultState)(IStateCombiner(Of TState, TResultState), IEnumerable(Of (TState, TState)))
  fullName: Yoakke.SynKit.Automata.IReadOnlyDfa<TState, TSymbol>.Minimize<TResultState>(Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>, IEnumerable<System.ValueTuple<TState, TState>>)
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyDfa(Of TState, TSymbol).Minimize(Of TResultState)(Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState), IEnumerable(Of System.ValueTuple(Of TState, TState)))
  nameWithType: IReadOnlyDfa<TState, TSymbol>.Minimize<TResultState>(IStateCombiner<TState, TResultState>, IEnumerable<(TState, TState)>)
  nameWithType.vb: IReadOnlyDfa(Of TState, TSymbol).Minimize(Of TResultState)(IStateCombiner(Of TState, TResultState), IEnumerable(Of (TState, TState)))
- uid: Yoakke.SynKit.Automata.IReadOnlyDfa`2.TryGetTransition(`0,`1,`0@)
  name: TryGetTransition(TState, TSymbol, out TState)
  href: api/Yoakke.SynKit.Automata.IReadOnlyDfa-2.html#Yoakke_SynKit_Automata_IReadOnlyDfa_2_TryGetTransition__0__1__0__
  commentId: M:Yoakke.SynKit.Automata.IReadOnlyDfa`2.TryGetTransition(`0,`1,`0@)
  name.vb: TryGetTransition(TState, TSymbol, ByRef TState)
  fullName: Yoakke.SynKit.Automata.IReadOnlyDfa<TState, TSymbol>.TryGetTransition(TState, TSymbol, out TState)
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyDfa(Of TState, TSymbol).TryGetTransition(TState, TSymbol, ByRef TState)
  nameWithType: IReadOnlyDfa<TState, TSymbol>.TryGetTransition(TState, TSymbol, out TState)
  nameWithType.vb: IReadOnlyDfa(Of TState, TSymbol).TryGetTransition(TState, TSymbol, ByRef TState)
- uid: Yoakke.SynKit.Automata.IReadOnlyDfa`2.TryGetTransition*
  name: TryGetTransition
  href: api/Yoakke.SynKit.Automata.IReadOnlyDfa-2.html#Yoakke_SynKit_Automata_IReadOnlyDfa_2_TryGetTransition_
  commentId: Overload:Yoakke.SynKit.Automata.IReadOnlyDfa`2.TryGetTransition
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.IReadOnlyDfa<TState, TSymbol>.TryGetTransition
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyDfa(Of TState, TSymbol).TryGetTransition
  nameWithType: IReadOnlyDfa<TState, TSymbol>.TryGetTransition
  nameWithType.vb: IReadOnlyDfa(Of TState, TSymbol).TryGetTransition
- uid: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2
  name: IReadOnlyFiniteAutomaton<TState, TSymbol>
  href: api/Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton-2.html
  commentId: T:Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2
  name.vb: IReadOnlyFiniteAutomaton(Of TState, TSymbol)
  fullName: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton(Of TState, TSymbol)
  nameWithType: IReadOnlyFiniteAutomaton<TState, TSymbol>
  nameWithType.vb: IReadOnlyFiniteAutomaton(Of TState, TSymbol)
- uid: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.AcceptingStates
  name: AcceptingStates
  href: api/Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton-2.html#Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_2_AcceptingStates
  commentId: P:Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.AcceptingStates
  fullName: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton(Of TState, TSymbol).AcceptingStates
  nameWithType: IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  nameWithType.vb: IReadOnlyFiniteAutomaton(Of TState, TSymbol).AcceptingStates
- uid: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.AcceptingStates*
  name: AcceptingStates
  href: api/Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton-2.html#Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_2_AcceptingStates_
  commentId: Overload:Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.AcceptingStates
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton(Of TState, TSymbol).AcceptingStates
  nameWithType: IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  nameWithType.vb: IReadOnlyFiniteAutomaton(Of TState, TSymbol).AcceptingStates
- uid: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.Accepts(IEnumerable{`1})
  name: Accepts(IEnumerable<TSymbol>)
  href: api/Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton-2.html#Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_2_Accepts_IEnumerable__1__
  commentId: M:Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.Accepts(IEnumerable{`1})
  name.vb: Accepts(IEnumerable(Of TSymbol))
  fullName: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.Accepts(IEnumerable<TSymbol>)
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton(Of TState, TSymbol).Accepts(IEnumerable(Of TSymbol))
  nameWithType: IReadOnlyFiniteAutomaton<TState, TSymbol>.Accepts(IEnumerable<TSymbol>)
  nameWithType.vb: IReadOnlyFiniteAutomaton(Of TState, TSymbol).Accepts(IEnumerable(Of TSymbol))
- uid: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.Accepts*
  name: Accepts
  href: api/Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton-2.html#Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_2_Accepts_
  commentId: Overload:Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.Accepts
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.Accepts
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton(Of TState, TSymbol).Accepts
  nameWithType: IReadOnlyFiniteAutomaton<TState, TSymbol>.Accepts
  nameWithType.vb: IReadOnlyFiniteAutomaton(Of TState, TSymbol).Accepts
- uid: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.ReachableStates
  name: ReachableStates
  href: api/Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton-2.html#Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_2_ReachableStates
  commentId: P:Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.ReachableStates
  fullName: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.ReachableStates
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton(Of TState, TSymbol).ReachableStates
  nameWithType: IReadOnlyFiniteAutomaton<TState, TSymbol>.ReachableStates
  nameWithType.vb: IReadOnlyFiniteAutomaton(Of TState, TSymbol).ReachableStates
- uid: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.ReachableStates*
  name: ReachableStates
  href: api/Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton-2.html#Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_2_ReachableStates_
  commentId: Overload:Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.ReachableStates
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.ReachableStates
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton(Of TState, TSymbol).ReachableStates
  nameWithType: IReadOnlyFiniteAutomaton<TState, TSymbol>.ReachableStates
  nameWithType.vb: IReadOnlyFiniteAutomaton(Of TState, TSymbol).ReachableStates
- uid: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.StateComparer
  name: StateComparer
  href: api/Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton-2.html#Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_2_StateComparer
  commentId: P:Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.StateComparer
  fullName: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.StateComparer
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton(Of TState, TSymbol).StateComparer
  nameWithType: IReadOnlyFiniteAutomaton<TState, TSymbol>.StateComparer
  nameWithType.vb: IReadOnlyFiniteAutomaton(Of TState, TSymbol).StateComparer
- uid: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.StateComparer*
  name: StateComparer
  href: api/Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton-2.html#Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_2_StateComparer_
  commentId: Overload:Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.StateComparer
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.StateComparer
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton(Of TState, TSymbol).StateComparer
  nameWithType: IReadOnlyFiniteAutomaton<TState, TSymbol>.StateComparer
  nameWithType.vb: IReadOnlyFiniteAutomaton(Of TState, TSymbol).StateComparer
- uid: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.States
  name: States
  href: api/Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton-2.html#Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_2_States
  commentId: P:Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.States
  fullName: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton(Of TState, TSymbol).States
  nameWithType: IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  nameWithType.vb: IReadOnlyFiniteAutomaton(Of TState, TSymbol).States
- uid: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.States*
  name: States
  href: api/Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton-2.html#Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_2_States_
  commentId: Overload:Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.States
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton(Of TState, TSymbol).States
  nameWithType: IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  nameWithType.vb: IReadOnlyFiniteAutomaton(Of TState, TSymbol).States
- uid: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.ToDot
  name: ToDot()
  href: api/Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton-2.html#Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_2_ToDot
  commentId: M:Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.ToDot
  fullName: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.ToDot()
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton(Of TState, TSymbol).ToDot()
  nameWithType: IReadOnlyFiniteAutomaton<TState, TSymbol>.ToDot()
  nameWithType.vb: IReadOnlyFiniteAutomaton(Of TState, TSymbol).ToDot()
- uid: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.ToDot*
  name: ToDot
  href: api/Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton-2.html#Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_2_ToDot_
  commentId: Overload:Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton`2.ToDot
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.ToDot
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton(Of TState, TSymbol).ToDot
  nameWithType: IReadOnlyFiniteAutomaton<TState, TSymbol>.ToDot
  nameWithType.vb: IReadOnlyFiniteAutomaton(Of TState, TSymbol).ToDot
- uid: Yoakke.SynKit.Automata.IReadOnlyNfa`2
  name: IReadOnlyNfa<TState, TSymbol>
  href: api/Yoakke.SynKit.Automata.IReadOnlyNfa-2.html
  commentId: T:Yoakke.SynKit.Automata.IReadOnlyNfa`2
  name.vb: IReadOnlyNfa(Of TState, TSymbol)
  fullName: Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyNfa(Of TState, TSymbol)
  nameWithType: IReadOnlyNfa<TState, TSymbol>
  nameWithType.vb: IReadOnlyNfa(Of TState, TSymbol)
- uid: Yoakke.SynKit.Automata.IReadOnlyNfa`2.Determinize*
  name: Determinize
  href: api/Yoakke.SynKit.Automata.IReadOnlyNfa-2.html#Yoakke_SynKit_Automata_IReadOnlyNfa_2_Determinize_
  commentId: Overload:Yoakke.SynKit.Automata.IReadOnlyNfa`2.Determinize
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>.Determinize
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyNfa(Of TState, TSymbol).Determinize
  nameWithType: IReadOnlyNfa<TState, TSymbol>.Determinize
  nameWithType.vb: IReadOnlyNfa(Of TState, TSymbol).Determinize
- uid: Yoakke.SynKit.Automata.IReadOnlyNfa`2.Determinize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0})
  name: Determinize<TResultState>(IStateCombiner<TState, TResultState>)
  href: api/Yoakke.SynKit.Automata.IReadOnlyNfa-2.html#Yoakke_SynKit_Automata_IReadOnlyNfa_2_Determinize__1_Yoakke_SynKit_Automata_IStateCombiner__0___0__
  commentId: M:Yoakke.SynKit.Automata.IReadOnlyNfa`2.Determinize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0})
  name.vb: Determinize(Of TResultState)(IStateCombiner(Of TState, TResultState))
  fullName: Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>.Determinize<TResultState>(Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>)
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyNfa(Of TState, TSymbol).Determinize(Of TResultState)(Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState))
  nameWithType: IReadOnlyNfa<TState, TSymbol>.Determinize<TResultState>(IStateCombiner<TState, TResultState>)
  nameWithType.vb: IReadOnlyNfa(Of TState, TSymbol).Determinize(Of TResultState)(IStateCombiner(Of TState, TResultState))
- uid: Yoakke.SynKit.Automata.IReadOnlyNfa`2.EpsilonClosure(`0)
  name: EpsilonClosure(TState)
  href: api/Yoakke.SynKit.Automata.IReadOnlyNfa-2.html#Yoakke_SynKit_Automata_IReadOnlyNfa_2_EpsilonClosure__0_
  commentId: M:Yoakke.SynKit.Automata.IReadOnlyNfa`2.EpsilonClosure(`0)
  fullName: Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>.EpsilonClosure(TState)
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyNfa(Of TState, TSymbol).EpsilonClosure(TState)
  nameWithType: IReadOnlyNfa<TState, TSymbol>.EpsilonClosure(TState)
  nameWithType.vb: IReadOnlyNfa(Of TState, TSymbol).EpsilonClosure(TState)
- uid: Yoakke.SynKit.Automata.IReadOnlyNfa`2.EpsilonClosure*
  name: EpsilonClosure
  href: api/Yoakke.SynKit.Automata.IReadOnlyNfa-2.html#Yoakke_SynKit_Automata_IReadOnlyNfa_2_EpsilonClosure_
  commentId: Overload:Yoakke.SynKit.Automata.IReadOnlyNfa`2.EpsilonClosure
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>.EpsilonClosure
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyNfa(Of TState, TSymbol).EpsilonClosure
  nameWithType: IReadOnlyNfa<TState, TSymbol>.EpsilonClosure
  nameWithType.vb: IReadOnlyNfa(Of TState, TSymbol).EpsilonClosure
- uid: Yoakke.SynKit.Automata.IReadOnlyNfa`2.EpsilonTransitions
  name: EpsilonTransitions
  href: api/Yoakke.SynKit.Automata.IReadOnlyNfa-2.html#Yoakke_SynKit_Automata_IReadOnlyNfa_2_EpsilonTransitions
  commentId: P:Yoakke.SynKit.Automata.IReadOnlyNfa`2.EpsilonTransitions
  fullName: Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>.EpsilonTransitions
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyNfa(Of TState, TSymbol).EpsilonTransitions
  nameWithType: IReadOnlyNfa<TState, TSymbol>.EpsilonTransitions
  nameWithType.vb: IReadOnlyNfa(Of TState, TSymbol).EpsilonTransitions
- uid: Yoakke.SynKit.Automata.IReadOnlyNfa`2.EpsilonTransitions*
  name: EpsilonTransitions
  href: api/Yoakke.SynKit.Automata.IReadOnlyNfa-2.html#Yoakke_SynKit_Automata_IReadOnlyNfa_2_EpsilonTransitions_
  commentId: Overload:Yoakke.SynKit.Automata.IReadOnlyNfa`2.EpsilonTransitions
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>.EpsilonTransitions
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyNfa(Of TState, TSymbol).EpsilonTransitions
  nameWithType: IReadOnlyNfa<TState, TSymbol>.EpsilonTransitions
  nameWithType.vb: IReadOnlyNfa(Of TState, TSymbol).EpsilonTransitions
- uid: Yoakke.SynKit.Automata.IReadOnlyNfa`2.GetTransitions(`0,`1)
  name: GetTransitions(TState, TSymbol)
  href: api/Yoakke.SynKit.Automata.IReadOnlyNfa-2.html#Yoakke_SynKit_Automata_IReadOnlyNfa_2_GetTransitions__0__1_
  commentId: M:Yoakke.SynKit.Automata.IReadOnlyNfa`2.GetTransitions(`0,`1)
  fullName: Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>.GetTransitions(TState, TSymbol)
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyNfa(Of TState, TSymbol).GetTransitions(TState, TSymbol)
  nameWithType: IReadOnlyNfa<TState, TSymbol>.GetTransitions(TState, TSymbol)
  nameWithType.vb: IReadOnlyNfa(Of TState, TSymbol).GetTransitions(TState, TSymbol)
- uid: Yoakke.SynKit.Automata.IReadOnlyNfa`2.GetTransitions*
  name: GetTransitions
  href: api/Yoakke.SynKit.Automata.IReadOnlyNfa-2.html#Yoakke_SynKit_Automata_IReadOnlyNfa_2_GetTransitions_
  commentId: Overload:Yoakke.SynKit.Automata.IReadOnlyNfa`2.GetTransitions
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>.GetTransitions
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyNfa(Of TState, TSymbol).GetTransitions
  nameWithType: IReadOnlyNfa<TState, TSymbol>.GetTransitions
  nameWithType.vb: IReadOnlyNfa(Of TState, TSymbol).GetTransitions
- uid: Yoakke.SynKit.Automata.IReadOnlyNfa`2.InitialStates
  name: InitialStates
  href: api/Yoakke.SynKit.Automata.IReadOnlyNfa-2.html#Yoakke_SynKit_Automata_IReadOnlyNfa_2_InitialStates
  commentId: P:Yoakke.SynKit.Automata.IReadOnlyNfa`2.InitialStates
  fullName: Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>.InitialStates
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyNfa(Of TState, TSymbol).InitialStates
  nameWithType: IReadOnlyNfa<TState, TSymbol>.InitialStates
  nameWithType.vb: IReadOnlyNfa(Of TState, TSymbol).InitialStates
- uid: Yoakke.SynKit.Automata.IReadOnlyNfa`2.InitialStates*
  name: InitialStates
  href: api/Yoakke.SynKit.Automata.IReadOnlyNfa-2.html#Yoakke_SynKit_Automata_IReadOnlyNfa_2_InitialStates_
  commentId: Overload:Yoakke.SynKit.Automata.IReadOnlyNfa`2.InitialStates
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>.InitialStates
  fullName.vb: Yoakke.SynKit.Automata.IReadOnlyNfa(Of TState, TSymbol).InitialStates
  nameWithType: IReadOnlyNfa<TState, TSymbol>.InitialStates
  nameWithType.vb: IReadOnlyNfa(Of TState, TSymbol).InitialStates
- uid: Yoakke.SynKit.Automata.IStateCombiner`2
  name: IStateCombiner<TState, TResultState>
  href: api/Yoakke.SynKit.Automata.IStateCombiner-2.html
  commentId: T:Yoakke.SynKit.Automata.IStateCombiner`2
  name.vb: IStateCombiner(Of TState, TResultState)
  fullName: Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>
  fullName.vb: Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState)
  nameWithType: IStateCombiner<TState, TResultState>
  nameWithType.vb: IStateCombiner(Of TState, TResultState)
- uid: Yoakke.SynKit.Automata.IStateCombiner`2.Combine(IEnumerable{`0})
  name: Combine(IEnumerable<TState>)
  href: api/Yoakke.SynKit.Automata.IStateCombiner-2.html#Yoakke_SynKit_Automata_IStateCombiner_2_Combine_IEnumerable__0__
  commentId: M:Yoakke.SynKit.Automata.IStateCombiner`2.Combine(IEnumerable{`0})
  name.vb: Combine(IEnumerable(Of TState))
  fullName: Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>.Combine(IEnumerable<TState>)
  fullName.vb: Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState).Combine(IEnumerable(Of TState))
  nameWithType: IStateCombiner<TState, TResultState>.Combine(IEnumerable<TState>)
  nameWithType.vb: IStateCombiner(Of TState, TResultState).Combine(IEnumerable(Of TState))
- uid: Yoakke.SynKit.Automata.IStateCombiner`2.Combine*
  name: Combine
  href: api/Yoakke.SynKit.Automata.IStateCombiner-2.html#Yoakke_SynKit_Automata_IStateCombiner_2_Combine_
  commentId: Overload:Yoakke.SynKit.Automata.IStateCombiner`2.Combine
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>.Combine
  fullName.vb: Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState).Combine
  nameWithType: IStateCombiner<TState, TResultState>.Combine
  nameWithType.vb: IStateCombiner(Of TState, TResultState).Combine
- uid: Yoakke.SynKit.Automata.IStateCombiner`2.ResultComparer
  name: ResultComparer
  href: api/Yoakke.SynKit.Automata.IStateCombiner-2.html#Yoakke_SynKit_Automata_IStateCombiner_2_ResultComparer
  commentId: P:Yoakke.SynKit.Automata.IStateCombiner`2.ResultComparer
  fullName: Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>.ResultComparer
  fullName.vb: Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState).ResultComparer
  nameWithType: IStateCombiner<TState, TResultState>.ResultComparer
  nameWithType.vb: IStateCombiner(Of TState, TResultState).ResultComparer
- uid: Yoakke.SynKit.Automata.IStateCombiner`2.ResultComparer*
  name: ResultComparer
  href: api/Yoakke.SynKit.Automata.IStateCombiner-2.html#Yoakke_SynKit_Automata_IStateCombiner_2_ResultComparer_
  commentId: Overload:Yoakke.SynKit.Automata.IStateCombiner`2.ResultComparer
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>.ResultComparer
  fullName.vb: Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState).ResultComparer
  nameWithType: IStateCombiner<TState, TResultState>.ResultComparer
  nameWithType.vb: IStateCombiner(Of TState, TResultState).ResultComparer
- uid: Yoakke.SynKit.Automata.NfaExtensions
  name: NfaExtensions
  href: api/Yoakke.SynKit.Automata.NfaExtensions.html
  commentId: T:Yoakke.SynKit.Automata.NfaExtensions
  fullName: Yoakke.SynKit.Automata.NfaExtensions
  nameWithType: NfaExtensions
- uid: Yoakke.SynKit.Automata.NfaExtensions.Determinize*
  name: Determinize
  href: api/Yoakke.SynKit.Automata.NfaExtensions.html#Yoakke_SynKit_Automata_NfaExtensions_Determinize_
  commentId: Overload:Yoakke.SynKit.Automata.NfaExtensions.Determinize
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.NfaExtensions.Determinize
  nameWithType: NfaExtensions.Determinize
- uid: Yoakke.SynKit.Automata.NfaExtensions.Determinize``2(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa{``0,``1})
  name: Determinize<TState, TSymbol>(IReadOnlyDenseNfa<TState, TSymbol>)
  href: api/Yoakke.SynKit.Automata.NfaExtensions.html#Yoakke_SynKit_Automata_NfaExtensions_Determinize__2_Yoakke_SynKit_Automata_Dense_IReadOnlyDenseNfa___0___1__
  commentId: M:Yoakke.SynKit.Automata.NfaExtensions.Determinize``2(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa{``0,``1})
  name.vb: Determinize(Of TState, TSymbol)(IReadOnlyDenseNfa(Of TState, TSymbol))
  fullName: Yoakke.SynKit.Automata.NfaExtensions.Determinize<TState, TSymbol>(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa<TState, TSymbol>)
  fullName.vb: Yoakke.SynKit.Automata.NfaExtensions.Determinize(Of TState, TSymbol)(Yoakke.SynKit.Automata.Dense.IReadOnlyDenseNfa(Of TState, TSymbol))
  nameWithType: NfaExtensions.Determinize<TState, TSymbol>(IReadOnlyDenseNfa<TState, TSymbol>)
  nameWithType.vb: NfaExtensions.Determinize(Of TState, TSymbol)(IReadOnlyDenseNfa(Of TState, TSymbol))
- uid: Yoakke.SynKit.Automata.NfaExtensions.Determinize``2(Yoakke.SynKit.Automata.IReadOnlyNfa{``0,``1})
  name: Determinize<TState, TSymbol>(IReadOnlyNfa<TState, TSymbol>)
  href: api/Yoakke.SynKit.Automata.NfaExtensions.html#Yoakke_SynKit_Automata_NfaExtensions_Determinize__2_Yoakke_SynKit_Automata_IReadOnlyNfa___0___1__
  commentId: M:Yoakke.SynKit.Automata.NfaExtensions.Determinize``2(Yoakke.SynKit.Automata.IReadOnlyNfa{``0,``1})
  name.vb: Determinize(Of TState, TSymbol)(IReadOnlyNfa(Of TState, TSymbol))
  fullName: Yoakke.SynKit.Automata.NfaExtensions.Determinize<TState, TSymbol>(Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>)
  fullName.vb: Yoakke.SynKit.Automata.NfaExtensions.Determinize(Of TState, TSymbol)(Yoakke.SynKit.Automata.IReadOnlyNfa(Of TState, TSymbol))
  nameWithType: NfaExtensions.Determinize<TState, TSymbol>(IReadOnlyNfa<TState, TSymbol>)
  nameWithType.vb: NfaExtensions.Determinize(Of TState, TSymbol)(IReadOnlyNfa(Of TState, TSymbol))
- uid: Yoakke.SynKit.Automata.NfaExtensions.Determinize``2(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseNfa{``0,``1})
  name: Determinize<TState, TSymbol>(IReadOnlySparseNfa<TState, TSymbol>)
  href: api/Yoakke.SynKit.Automata.NfaExtensions.html#Yoakke_SynKit_Automata_NfaExtensions_Determinize__2_Yoakke_SynKit_Automata_Sparse_IReadOnlySparseNfa___0___1__
  commentId: M:Yoakke.SynKit.Automata.NfaExtensions.Determinize``2(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseNfa{``0,``1})
  name.vb: Determinize(Of TState, TSymbol)(IReadOnlySparseNfa(Of TState, TSymbol))
  fullName: Yoakke.SynKit.Automata.NfaExtensions.Determinize<TState, TSymbol>(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseNfa<TState, TSymbol>)
  fullName.vb: Yoakke.SynKit.Automata.NfaExtensions.Determinize(Of TState, TSymbol)(Yoakke.SynKit.Automata.Sparse.IReadOnlySparseNfa(Of TState, TSymbol))
  nameWithType: NfaExtensions.Determinize<TState, TSymbol>(IReadOnlySparseNfa<TState, TSymbol>)
  nameWithType.vb: NfaExtensions.Determinize(Of TState, TSymbol)(IReadOnlySparseNfa(Of TState, TSymbol))
- uid: Yoakke.SynKit.Automata.NfaExtensions.GetTransitions*
  name: GetTransitions
  href: api/Yoakke.SynKit.Automata.NfaExtensions.html#Yoakke_SynKit_Automata_NfaExtensions_GetTransitions_
  commentId: Overload:Yoakke.SynKit.Automata.NfaExtensions.GetTransitions
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.NfaExtensions.GetTransitions
  nameWithType: NfaExtensions.GetTransitions
- uid: Yoakke.SynKit.Automata.NfaExtensions.GetTransitions``2(Yoakke.SynKit.Automata.IReadOnlyNfa{``0,``1},Yoakke.SynKit.Automata.StateSet{``0},``1)
  name: GetTransitions<TState, TSymbol>(IReadOnlyNfa<TState, TSymbol>, StateSet<TState>, TSymbol)
  href: api/Yoakke.SynKit.Automata.NfaExtensions.html#Yoakke_SynKit_Automata_NfaExtensions_GetTransitions__2_Yoakke_SynKit_Automata_IReadOnlyNfa___0___1__Yoakke_SynKit_Automata_StateSet___0____1_
  commentId: M:Yoakke.SynKit.Automata.NfaExtensions.GetTransitions``2(Yoakke.SynKit.Automata.IReadOnlyNfa{``0,``1},Yoakke.SynKit.Automata.StateSet{``0},``1)
  name.vb: GetTransitions(Of TState, TSymbol)(IReadOnlyNfa(Of TState, TSymbol), StateSet(Of TState), TSymbol)
  fullName: Yoakke.SynKit.Automata.NfaExtensions.GetTransitions<TState, TSymbol>(Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>, Yoakke.SynKit.Automata.StateSet<TState>, TSymbol)
  fullName.vb: Yoakke.SynKit.Automata.NfaExtensions.GetTransitions(Of TState, TSymbol)(Yoakke.SynKit.Automata.IReadOnlyNfa(Of TState, TSymbol), Yoakke.SynKit.Automata.StateSet(Of TState), TSymbol)
  nameWithType: NfaExtensions.GetTransitions<TState, TSymbol>(IReadOnlyNfa<TState, TSymbol>, StateSet<TState>, TSymbol)
  nameWithType.vb: NfaExtensions.GetTransitions(Of TState, TSymbol)(IReadOnlyNfa(Of TState, TSymbol), StateSet(Of TState), TSymbol)
- uid: Yoakke.SynKit.Automata.RegExAst
  name: Yoakke.SynKit.Automata.RegExAst
  href: api/Yoakke.SynKit.Automata.RegExAst.html
  commentId: N:Yoakke.SynKit.Automata.RegExAst
  fullName: Yoakke.SynKit.Automata.RegExAst
  nameWithType: Yoakke.SynKit.Automata.RegExAst
- uid: Yoakke.SynKit.Automata.RegExAst.IRegExNode`1
  name: IRegExNode<TSymbol>
  href: api/Yoakke.SynKit.Automata.RegExAst.IRegExNode-1.html
  commentId: T:Yoakke.SynKit.Automata.RegExAst.IRegExNode`1
  name.vb: IRegExNode(Of TSymbol)
  fullName: Yoakke.SynKit.Automata.RegExAst.IRegExNode<TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.IRegExNode(Of TSymbol)
  nameWithType: IRegExNode<TSymbol>
  nameWithType.vb: IRegExNode(Of TSymbol)
- uid: Yoakke.SynKit.Automata.RegExAst.IRegExNode`1.Desugar
  name: Desugar()
  href: api/Yoakke.SynKit.Automata.RegExAst.IRegExNode-1.html#Yoakke_SynKit_Automata_RegExAst_IRegExNode_1_Desugar
  commentId: M:Yoakke.SynKit.Automata.RegExAst.IRegExNode`1.Desugar
  fullName: Yoakke.SynKit.Automata.RegExAst.IRegExNode<TSymbol>.Desugar()
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.IRegExNode(Of TSymbol).Desugar()
  nameWithType: IRegExNode<TSymbol>.Desugar()
  nameWithType.vb: IRegExNode(Of TSymbol).Desugar()
- uid: Yoakke.SynKit.Automata.RegExAst.IRegExNode`1.Desugar*
  name: Desugar
  href: api/Yoakke.SynKit.Automata.RegExAst.IRegExNode-1.html#Yoakke_SynKit_Automata_RegExAst_IRegExNode_1_Desugar_
  commentId: Overload:Yoakke.SynKit.Automata.RegExAst.IRegExNode`1.Desugar
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.RegExAst.IRegExNode<TSymbol>.Desugar
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.IRegExNode(Of TSymbol).Desugar
  nameWithType: IRegExNode<TSymbol>.Desugar
  nameWithType.vb: IRegExNode(Of TSymbol).Desugar
- uid: Yoakke.SynKit.Automata.RegExAst.IRegExNode`1.ThompsonsConstruct*
  name: ThompsonsConstruct
  href: api/Yoakke.SynKit.Automata.RegExAst.IRegExNode-1.html#Yoakke_SynKit_Automata_RegExAst_IRegExNode_1_ThompsonsConstruct_
  commentId: Overload:Yoakke.SynKit.Automata.RegExAst.IRegExNode`1.ThompsonsConstruct
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.RegExAst.IRegExNode<TSymbol>.ThompsonsConstruct
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.IRegExNode(Of TSymbol).ThompsonsConstruct
  nameWithType: IRegExNode<TSymbol>.ThompsonsConstruct
  nameWithType.vb: IRegExNode(Of TSymbol).ThompsonsConstruct
- uid: Yoakke.SynKit.Automata.RegExAst.IRegExNode`1.ThompsonsConstruct``1(Yoakke.SynKit.Automata.INfa{``0,`0},Func{``0})
  name: ThompsonsConstruct<TState>(INfa<TState, TSymbol>, Func<TState>)
  href: api/Yoakke.SynKit.Automata.RegExAst.IRegExNode-1.html#Yoakke_SynKit_Automata_RegExAst_IRegExNode_1_ThompsonsConstruct__1_Yoakke_SynKit_Automata_INfa___0__0__Func___0__
  commentId: M:Yoakke.SynKit.Automata.RegExAst.IRegExNode`1.ThompsonsConstruct``1(Yoakke.SynKit.Automata.INfa{``0,`0},Func{``0})
  name.vb: ThompsonsConstruct(Of TState)(INfa(Of TState, TSymbol), Func(Of TState))
  fullName: Yoakke.SynKit.Automata.RegExAst.IRegExNode<TSymbol>.ThompsonsConstruct<TState>(Yoakke.SynKit.Automata.INfa<TState, TSymbol>, Func<TState>)
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.IRegExNode(Of TSymbol).ThompsonsConstruct(Of TState)(Yoakke.SynKit.Automata.INfa(Of TState, TSymbol), Func(Of TState))
  nameWithType: IRegExNode<TSymbol>.ThompsonsConstruct<TState>(INfa<TState, TSymbol>, Func<TState>)
  nameWithType.vb: IRegExNode(Of TSymbol).ThompsonsConstruct(Of TState)(INfa(Of TState, TSymbol), Func(Of TState))
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx
  name: RegEx
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html
  commentId: T:Yoakke.SynKit.Automata.RegExAst.RegEx
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx
  nameWithType: RegEx
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Any*
  name: Any
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Any_
  commentId: Overload:Yoakke.SynKit.Automata.RegExAst.RegEx.Any
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Any
  nameWithType: RegEx.Any
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Any``1
  name: Any<TSymbol>()
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Any__1
  commentId: M:Yoakke.SynKit.Automata.RegExAst.RegEx.Any``1
  name.vb: Any(Of TSymbol)()
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Any<TSymbol>()
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.RegEx.Any(Of TSymbol)()
  nameWithType: RegEx.Any<TSymbol>()
  nameWithType.vb: RegEx.Any(Of TSymbol)()
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.AtLeast*
  name: AtLeast
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_AtLeast_
  commentId: Overload:Yoakke.SynKit.Automata.RegExAst.RegEx.AtLeast
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.AtLeast
  nameWithType: RegEx.AtLeast
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.AtLeast``1(System.Int32,Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0})
  name: AtLeast<TSymbol>(Int32, IRegExNode<TSymbol>)
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_AtLeast__1_System_Int32_Yoakke_SynKit_Automata_RegExAst_IRegExNode___0__
  commentId: M:Yoakke.SynKit.Automata.RegExAst.RegEx.AtLeast``1(System.Int32,Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0})
  name.vb: AtLeast(Of TSymbol)(Int32, IRegExNode(Of TSymbol))
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.AtLeast<TSymbol>(System.Int32, Yoakke.SynKit.Automata.RegExAst.IRegExNode<TSymbol>)
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.RegEx.AtLeast(Of TSymbol)(System.Int32, Yoakke.SynKit.Automata.RegExAst.IRegExNode(Of TSymbol))
  nameWithType: RegEx.AtLeast<TSymbol>(Int32, IRegExNode<TSymbol>)
  nameWithType.vb: RegEx.AtLeast(Of TSymbol)(Int32, IRegExNode(Of TSymbol))
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.AtMost*
  name: AtMost
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_AtMost_
  commentId: Overload:Yoakke.SynKit.Automata.RegExAst.RegEx.AtMost
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.AtMost
  nameWithType: RegEx.AtMost
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.AtMost``1(System.Int32,Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0})
  name: AtMost<TSymbol>(Int32, IRegExNode<TSymbol>)
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_AtMost__1_System_Int32_Yoakke_SynKit_Automata_RegExAst_IRegExNode___0__
  commentId: M:Yoakke.SynKit.Automata.RegExAst.RegEx.AtMost``1(System.Int32,Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0})
  name.vb: AtMost(Of TSymbol)(Int32, IRegExNode(Of TSymbol))
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.AtMost<TSymbol>(System.Int32, Yoakke.SynKit.Automata.RegExAst.IRegExNode<TSymbol>)
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.RegEx.AtMost(Of TSymbol)(System.Int32, Yoakke.SynKit.Automata.RegExAst.IRegExNode(Of TSymbol))
  nameWithType: RegEx.AtMost<TSymbol>(Int32, IRegExNode<TSymbol>)
  nameWithType.vb: RegEx.AtMost(Of TSymbol)(Int32, IRegExNode(Of TSymbol))
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Between*
  name: Between
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Between_
  commentId: Overload:Yoakke.SynKit.Automata.RegExAst.RegEx.Between
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Between
  nameWithType: RegEx.Between
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Between``1(System.Int32,System.Int32,Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0})
  name: Between<TSymbol>(Int32, Int32, IRegExNode<TSymbol>)
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Between__1_System_Int32_System_Int32_Yoakke_SynKit_Automata_RegExAst_IRegExNode___0__
  commentId: M:Yoakke.SynKit.Automata.RegExAst.RegEx.Between``1(System.Int32,System.Int32,Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0})
  name.vb: Between(Of TSymbol)(Int32, Int32, IRegExNode(Of TSymbol))
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Between<TSymbol>(System.Int32, System.Int32, Yoakke.SynKit.Automata.RegExAst.IRegExNode<TSymbol>)
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.RegEx.Between(Of TSymbol)(System.Int32, System.Int32, Yoakke.SynKit.Automata.RegExAst.IRegExNode(Of TSymbol))
  nameWithType: RegEx.Between<TSymbol>(Int32, Int32, IRegExNode<TSymbol>)
  nameWithType.vb: RegEx.Between(Of TSymbol)(Int32, Int32, IRegExNode(Of TSymbol))
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Exactly*
  name: Exactly
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Exactly_
  commentId: Overload:Yoakke.SynKit.Automata.RegExAst.RegEx.Exactly
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Exactly
  nameWithType: RegEx.Exactly
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Exactly``1(System.Int32,Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0})
  name: Exactly<TSymbol>(Int32, IRegExNode<TSymbol>)
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Exactly__1_System_Int32_Yoakke_SynKit_Automata_RegExAst_IRegExNode___0__
  commentId: M:Yoakke.SynKit.Automata.RegExAst.RegEx.Exactly``1(System.Int32,Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0})
  name.vb: Exactly(Of TSymbol)(Int32, IRegExNode(Of TSymbol))
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Exactly<TSymbol>(System.Int32, Yoakke.SynKit.Automata.RegExAst.IRegExNode<TSymbol>)
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.RegEx.Exactly(Of TSymbol)(System.Int32, Yoakke.SynKit.Automata.RegExAst.IRegExNode(Of TSymbol))
  nameWithType: RegEx.Exactly<TSymbol>(Int32, IRegExNode<TSymbol>)
  nameWithType.vb: RegEx.Exactly(Of TSymbol)(Int32, IRegExNode(Of TSymbol))
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Lit*
  name: Lit
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Lit_
  commentId: Overload:Yoakke.SynKit.Automata.RegExAst.RegEx.Lit
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Lit
  nameWithType: RegEx.Lit
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Lit``1(``0)
  name: Lit<TSymbol>(TSymbol)
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Lit__1___0_
  commentId: M:Yoakke.SynKit.Automata.RegExAst.RegEx.Lit``1(``0)
  name.vb: Lit(Of TSymbol)(TSymbol)
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Lit<TSymbol>(TSymbol)
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.RegEx.Lit(Of TSymbol)(TSymbol)
  nameWithType: RegEx.Lit<TSymbol>(TSymbol)
  nameWithType.vb: RegEx.Lit(Of TSymbol)(TSymbol)
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.NotRange*
  name: NotRange
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_NotRange_
  commentId: Overload:Yoakke.SynKit.Automata.RegExAst.RegEx.NotRange
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.NotRange
  nameWithType: RegEx.NotRange
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.NotRange``1(IEnumerable{Yoakke.Collections.Intervals.Interval{``0}})
  name: NotRange<TSymbol>(IEnumerable<Interval<TSymbol>>)
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_NotRange__1_IEnumerable_Yoakke_Collections_Intervals_Interval___0___
  commentId: M:Yoakke.SynKit.Automata.RegExAst.RegEx.NotRange``1(IEnumerable{Yoakke.Collections.Intervals.Interval{``0}})
  name.vb: NotRange(Of TSymbol)(IEnumerable(Of Interval(Of TSymbol)))
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.NotRange<TSymbol>(IEnumerable<Yoakke.Collections.Intervals.Interval<TSymbol>>)
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.RegEx.NotRange(Of TSymbol)(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of TSymbol)))
  nameWithType: RegEx.NotRange<TSymbol>(IEnumerable<Interval<TSymbol>>)
  nameWithType.vb: RegEx.NotRange(Of TSymbol)(IEnumerable(Of Interval(Of TSymbol)))
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.NotRange``1(Yoakke.Collections.Intervals.Interval{``0}[])
  name: NotRange<TSymbol>(Interval<TSymbol>[])
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_NotRange__1_Yoakke_Collections_Intervals_Interval___0____
  commentId: M:Yoakke.SynKit.Automata.RegExAst.RegEx.NotRange``1(Yoakke.Collections.Intervals.Interval{``0}[])
  name.vb: NotRange(Of TSymbol)(Interval(Of TSymbol)())
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.NotRange<TSymbol>(Yoakke.Collections.Intervals.Interval<TSymbol>[])
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.RegEx.NotRange(Of TSymbol)(Yoakke.Collections.Intervals.Interval(Of TSymbol)())
  nameWithType: RegEx.NotRange<TSymbol>(Interval<TSymbol>[])
  nameWithType.vb: RegEx.NotRange(Of TSymbol)(Interval(Of TSymbol)())
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Opt*
  name: Opt
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Opt_
  commentId: Overload:Yoakke.SynKit.Automata.RegExAst.RegEx.Opt
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Opt
  nameWithType: RegEx.Opt
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Opt``1(Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0})
  name: Opt<TSymbol>(IRegExNode<TSymbol>)
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Opt__1_Yoakke_SynKit_Automata_RegExAst_IRegExNode___0__
  commentId: M:Yoakke.SynKit.Automata.RegExAst.RegEx.Opt``1(Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0})
  name.vb: Opt(Of TSymbol)(IRegExNode(Of TSymbol))
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Opt<TSymbol>(Yoakke.SynKit.Automata.RegExAst.IRegExNode<TSymbol>)
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.RegEx.Opt(Of TSymbol)(Yoakke.SynKit.Automata.RegExAst.IRegExNode(Of TSymbol))
  nameWithType: RegEx.Opt<TSymbol>(IRegExNode<TSymbol>)
  nameWithType.vb: RegEx.Opt(Of TSymbol)(IRegExNode(Of TSymbol))
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Or*
  name: Or
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Or_
  commentId: Overload:Yoakke.SynKit.Automata.RegExAst.RegEx.Or
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Or
  nameWithType: RegEx.Or
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Or``1(Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0},IEnumerable{Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0}})
  name: Or<TSymbol>(IRegExNode<TSymbol>, IEnumerable<IRegExNode<TSymbol>>)
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Or__1_Yoakke_SynKit_Automata_RegExAst_IRegExNode___0__IEnumerable_Yoakke_SynKit_Automata_RegExAst_IRegExNode___0___
  commentId: M:Yoakke.SynKit.Automata.RegExAst.RegEx.Or``1(Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0},IEnumerable{Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0}})
  name.vb: Or(Of TSymbol)(IRegExNode(Of TSymbol), IEnumerable(Of IRegExNode(Of TSymbol)))
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Or<TSymbol>(Yoakke.SynKit.Automata.RegExAst.IRegExNode<TSymbol>, IEnumerable<Yoakke.SynKit.Automata.RegExAst.IRegExNode<TSymbol>>)
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.RegEx.Or(Of TSymbol)(Yoakke.SynKit.Automata.RegExAst.IRegExNode(Of TSymbol), IEnumerable(Of Yoakke.SynKit.Automata.RegExAst.IRegExNode(Of TSymbol)))
  nameWithType: RegEx.Or<TSymbol>(IRegExNode<TSymbol>, IEnumerable<IRegExNode<TSymbol>>)
  nameWithType.vb: RegEx.Or(Of TSymbol)(IRegExNode(Of TSymbol), IEnumerable(Of IRegExNode(Of TSymbol)))
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Or``1(Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0},Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0}[])
  name: Or<TSymbol>(IRegExNode<TSymbol>, IRegExNode<TSymbol>[])
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Or__1_Yoakke_SynKit_Automata_RegExAst_IRegExNode___0__Yoakke_SynKit_Automata_RegExAst_IRegExNode___0____
  commentId: M:Yoakke.SynKit.Automata.RegExAst.RegEx.Or``1(Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0},Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0}[])
  name.vb: Or(Of TSymbol)(IRegExNode(Of TSymbol), IRegExNode(Of TSymbol)())
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Or<TSymbol>(Yoakke.SynKit.Automata.RegExAst.IRegExNode<TSymbol>, Yoakke.SynKit.Automata.RegExAst.IRegExNode<TSymbol>[])
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.RegEx.Or(Of TSymbol)(Yoakke.SynKit.Automata.RegExAst.IRegExNode(Of TSymbol), Yoakke.SynKit.Automata.RegExAst.IRegExNode(Of TSymbol)())
  nameWithType: RegEx.Or<TSymbol>(IRegExNode<TSymbol>, IRegExNode<TSymbol>[])
  nameWithType.vb: RegEx.Or(Of TSymbol)(IRegExNode(Of TSymbol), IRegExNode(Of TSymbol)())
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Range*
  name: Range
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Range_
  commentId: Overload:Yoakke.SynKit.Automata.RegExAst.RegEx.Range
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Range
  nameWithType: RegEx.Range
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Range``1(IEnumerable{Yoakke.Collections.Intervals.Interval{``0}})
  name: Range<TSymbol>(IEnumerable<Interval<TSymbol>>)
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Range__1_IEnumerable_Yoakke_Collections_Intervals_Interval___0___
  commentId: M:Yoakke.SynKit.Automata.RegExAst.RegEx.Range``1(IEnumerable{Yoakke.Collections.Intervals.Interval{``0}})
  name.vb: Range(Of TSymbol)(IEnumerable(Of Interval(Of TSymbol)))
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Range<TSymbol>(IEnumerable<Yoakke.Collections.Intervals.Interval<TSymbol>>)
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.RegEx.Range(Of TSymbol)(IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of TSymbol)))
  nameWithType: RegEx.Range<TSymbol>(IEnumerable<Interval<TSymbol>>)
  nameWithType.vb: RegEx.Range(Of TSymbol)(IEnumerable(Of Interval(Of TSymbol)))
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Range``1(System.Boolean,IEnumerable{Yoakke.Collections.Intervals.Interval{``0}})
  name: Range<TSymbol>(Boolean, IEnumerable<Interval<TSymbol>>)
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Range__1_System_Boolean_IEnumerable_Yoakke_Collections_Intervals_Interval___0___
  commentId: M:Yoakke.SynKit.Automata.RegExAst.RegEx.Range``1(System.Boolean,IEnumerable{Yoakke.Collections.Intervals.Interval{``0}})
  name.vb: Range(Of TSymbol)(Boolean, IEnumerable(Of Interval(Of TSymbol)))
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Range<TSymbol>(System.Boolean, IEnumerable<Yoakke.Collections.Intervals.Interval<TSymbol>>)
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.RegEx.Range(Of TSymbol)(System.Boolean, IEnumerable(Of Yoakke.Collections.Intervals.Interval(Of TSymbol)))
  nameWithType: RegEx.Range<TSymbol>(Boolean, IEnumerable<Interval<TSymbol>>)
  nameWithType.vb: RegEx.Range(Of TSymbol)(Boolean, IEnumerable(Of Interval(Of TSymbol)))
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Range``1(System.Boolean,Yoakke.Collections.Intervals.Interval{``0}[])
  name: Range<TSymbol>(Boolean, Interval<TSymbol>[])
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Range__1_System_Boolean_Yoakke_Collections_Intervals_Interval___0____
  commentId: M:Yoakke.SynKit.Automata.RegExAst.RegEx.Range``1(System.Boolean,Yoakke.Collections.Intervals.Interval{``0}[])
  name.vb: Range(Of TSymbol)(Boolean, Interval(Of TSymbol)())
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Range<TSymbol>(System.Boolean, Yoakke.Collections.Intervals.Interval<TSymbol>[])
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.RegEx.Range(Of TSymbol)(System.Boolean, Yoakke.Collections.Intervals.Interval(Of TSymbol)())
  nameWithType: RegEx.Range<TSymbol>(Boolean, Interval<TSymbol>[])
  nameWithType.vb: RegEx.Range(Of TSymbol)(Boolean, Interval(Of TSymbol)())
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Range``1(Yoakke.Collections.Intervals.Interval{``0}[])
  name: Range<TSymbol>(Interval<TSymbol>[])
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Range__1_Yoakke_Collections_Intervals_Interval___0____
  commentId: M:Yoakke.SynKit.Automata.RegExAst.RegEx.Range``1(Yoakke.Collections.Intervals.Interval{``0}[])
  name.vb: Range(Of TSymbol)(Interval(Of TSymbol)())
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Range<TSymbol>(Yoakke.Collections.Intervals.Interval<TSymbol>[])
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.RegEx.Range(Of TSymbol)(Yoakke.Collections.Intervals.Interval(Of TSymbol)())
  nameWithType: RegEx.Range<TSymbol>(Interval<TSymbol>[])
  nameWithType.vb: RegEx.Range(Of TSymbol)(Interval(Of TSymbol)())
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Rep0*
  name: Rep0
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Rep0_
  commentId: Overload:Yoakke.SynKit.Automata.RegExAst.RegEx.Rep0
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Rep0
  nameWithType: RegEx.Rep0
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Rep0``1(Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0})
  name: Rep0<TSymbol>(IRegExNode<TSymbol>)
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Rep0__1_Yoakke_SynKit_Automata_RegExAst_IRegExNode___0__
  commentId: M:Yoakke.SynKit.Automata.RegExAst.RegEx.Rep0``1(Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0})
  name.vb: Rep0(Of TSymbol)(IRegExNode(Of TSymbol))
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Rep0<TSymbol>(Yoakke.SynKit.Automata.RegExAst.IRegExNode<TSymbol>)
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.RegEx.Rep0(Of TSymbol)(Yoakke.SynKit.Automata.RegExAst.IRegExNode(Of TSymbol))
  nameWithType: RegEx.Rep0<TSymbol>(IRegExNode<TSymbol>)
  nameWithType.vb: RegEx.Rep0(Of TSymbol)(IRegExNode(Of TSymbol))
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Rep1*
  name: Rep1
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Rep1_
  commentId: Overload:Yoakke.SynKit.Automata.RegExAst.RegEx.Rep1
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Rep1
  nameWithType: RegEx.Rep1
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Rep1``1(Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0})
  name: Rep1<TSymbol>(IRegExNode<TSymbol>)
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Rep1__1_Yoakke_SynKit_Automata_RegExAst_IRegExNode___0__
  commentId: M:Yoakke.SynKit.Automata.RegExAst.RegEx.Rep1``1(Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0})
  name.vb: Rep1(Of TSymbol)(IRegExNode(Of TSymbol))
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Rep1<TSymbol>(Yoakke.SynKit.Automata.RegExAst.IRegExNode<TSymbol>)
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.RegEx.Rep1(Of TSymbol)(Yoakke.SynKit.Automata.RegExAst.IRegExNode(Of TSymbol))
  nameWithType: RegEx.Rep1<TSymbol>(IRegExNode<TSymbol>)
  nameWithType.vb: RegEx.Rep1(Of TSymbol)(IRegExNode(Of TSymbol))
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Seq*
  name: Seq
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Seq_
  commentId: Overload:Yoakke.SynKit.Automata.RegExAst.RegEx.Seq
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Seq
  nameWithType: RegEx.Seq
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Seq``1(Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0},IEnumerable{Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0}})
  name: Seq<TSymbol>(IRegExNode<TSymbol>, IEnumerable<IRegExNode<TSymbol>>)
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Seq__1_Yoakke_SynKit_Automata_RegExAst_IRegExNode___0__IEnumerable_Yoakke_SynKit_Automata_RegExAst_IRegExNode___0___
  commentId: M:Yoakke.SynKit.Automata.RegExAst.RegEx.Seq``1(Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0},IEnumerable{Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0}})
  name.vb: Seq(Of TSymbol)(IRegExNode(Of TSymbol), IEnumerable(Of IRegExNode(Of TSymbol)))
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Seq<TSymbol>(Yoakke.SynKit.Automata.RegExAst.IRegExNode<TSymbol>, IEnumerable<Yoakke.SynKit.Automata.RegExAst.IRegExNode<TSymbol>>)
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.RegEx.Seq(Of TSymbol)(Yoakke.SynKit.Automata.RegExAst.IRegExNode(Of TSymbol), IEnumerable(Of Yoakke.SynKit.Automata.RegExAst.IRegExNode(Of TSymbol)))
  nameWithType: RegEx.Seq<TSymbol>(IRegExNode<TSymbol>, IEnumerable<IRegExNode<TSymbol>>)
  nameWithType.vb: RegEx.Seq(Of TSymbol)(IRegExNode(Of TSymbol), IEnumerable(Of IRegExNode(Of TSymbol)))
- uid: Yoakke.SynKit.Automata.RegExAst.RegEx.Seq``1(Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0},Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0}[])
  name: Seq<TSymbol>(IRegExNode<TSymbol>, IRegExNode<TSymbol>[])
  href: api/Yoakke.SynKit.Automata.RegExAst.RegEx.html#Yoakke_SynKit_Automata_RegExAst_RegEx_Seq__1_Yoakke_SynKit_Automata_RegExAst_IRegExNode___0__Yoakke_SynKit_Automata_RegExAst_IRegExNode___0____
  commentId: M:Yoakke.SynKit.Automata.RegExAst.RegEx.Seq``1(Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0},Yoakke.SynKit.Automata.RegExAst.IRegExNode{``0}[])
  name.vb: Seq(Of TSymbol)(IRegExNode(Of TSymbol), IRegExNode(Of TSymbol)())
  fullName: Yoakke.SynKit.Automata.RegExAst.RegEx.Seq<TSymbol>(Yoakke.SynKit.Automata.RegExAst.IRegExNode<TSymbol>, Yoakke.SynKit.Automata.RegExAst.IRegExNode<TSymbol>[])
  fullName.vb: Yoakke.SynKit.Automata.RegExAst.RegEx.Seq(Of TSymbol)(Yoakke.SynKit.Automata.RegExAst.IRegExNode(Of TSymbol), Yoakke.SynKit.Automata.RegExAst.IRegExNode(Of TSymbol)())
  nameWithType: RegEx.Seq<TSymbol>(IRegExNode<TSymbol>, IRegExNode<TSymbol>[])
  nameWithType.vb: RegEx.Seq(Of TSymbol)(IRegExNode(Of TSymbol), IRegExNode(Of TSymbol)())
- uid: Yoakke.SynKit.Automata.Sparse
  name: Yoakke.SynKit.Automata.Sparse
  href: api/Yoakke.SynKit.Automata.Sparse.html
  commentId: N:Yoakke.SynKit.Automata.Sparse
  fullName: Yoakke.SynKit.Automata.Sparse
  nameWithType: Yoakke.SynKit.Automata.Sparse
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2
  name: Dfa<TState, TSymbol>
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html
  commentId: T:Yoakke.SynKit.Automata.Sparse.Dfa`2
  name.vb: Dfa(Of TState, TSymbol)
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol)
  nameWithType: Dfa<TState, TSymbol>
  nameWithType.vb: Dfa(Of TState, TSymbol)
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.#ctor
  name: Dfa()
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2__ctor
  commentId: M:Yoakke.SynKit.Automata.Sparse.Dfa`2.#ctor
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Dfa()
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Dfa()
  nameWithType: Dfa<TState, TSymbol>.Dfa()
  nameWithType.vb: Dfa(Of TState, TSymbol).Dfa()
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.#ctor(IEqualityComparer{`0},IEqualityComparer{`1})
  name: Dfa(IEqualityComparer<TState>, IEqualityComparer<TSymbol>)
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2__ctor_IEqualityComparer__0__IEqualityComparer__1__
  commentId: M:Yoakke.SynKit.Automata.Sparse.Dfa`2.#ctor(IEqualityComparer{`0},IEqualityComparer{`1})
  name.vb: Dfa(IEqualityComparer(Of TState), IEqualityComparer(Of TSymbol))
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Dfa(IEqualityComparer<TState>, IEqualityComparer<TSymbol>)
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Dfa(IEqualityComparer(Of TState), IEqualityComparer(Of TSymbol))
  nameWithType: Dfa<TState, TSymbol>.Dfa(IEqualityComparer<TState>, IEqualityComparer<TSymbol>)
  nameWithType.vb: Dfa(Of TState, TSymbol).Dfa(IEqualityComparer(Of TState), IEqualityComparer(Of TSymbol))
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.#ctor*
  name: Dfa
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2__ctor_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Dfa
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Dfa
  nameWithType: Dfa<TState, TSymbol>.Dfa
  nameWithType.vb: Dfa(Of TState, TSymbol).Dfa
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.AcceptingStates
  name: AcceptingStates
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_AcceptingStates
  commentId: P:Yoakke.SynKit.Automata.Sparse.Dfa`2.AcceptingStates
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.AcceptingStates
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).AcceptingStates
  nameWithType: Dfa<TState, TSymbol>.AcceptingStates
  nameWithType.vb: Dfa(Of TState, TSymbol).AcceptingStates
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.AcceptingStates*
  name: AcceptingStates
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_AcceptingStates_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.AcceptingStates
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.AcceptingStates
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).AcceptingStates
  nameWithType: Dfa<TState, TSymbol>.AcceptingStates
  nameWithType.vb: Dfa(Of TState, TSymbol).AcceptingStates
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.Accepts(IEnumerable{`1})
  name: Accepts(IEnumerable<TSymbol>)
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_Accepts_IEnumerable__1__
  commentId: M:Yoakke.SynKit.Automata.Sparse.Dfa`2.Accepts(IEnumerable{`1})
  name.vb: Accepts(IEnumerable(Of TSymbol))
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Accepts(IEnumerable<TSymbol>)
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Accepts(IEnumerable(Of TSymbol))
  nameWithType: Dfa<TState, TSymbol>.Accepts(IEnumerable<TSymbol>)
  nameWithType.vb: Dfa(Of TState, TSymbol).Accepts(IEnumerable(Of TSymbol))
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.Accepts*
  name: Accepts
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_Accepts_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.Accepts
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Accepts
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Accepts
  nameWithType: Dfa<TState, TSymbol>.Accepts
  nameWithType.vb: Dfa(Of TState, TSymbol).Accepts
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.AddTransition(`0,`1,`0)
  name: AddTransition(TState, TSymbol, TState)
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_AddTransition__0__1__0_
  commentId: M:Yoakke.SynKit.Automata.Sparse.Dfa`2.AddTransition(`0,`1,`0)
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.AddTransition(TState, TSymbol, TState)
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).AddTransition(TState, TSymbol, TState)
  nameWithType: Dfa<TState, TSymbol>.AddTransition(TState, TSymbol, TState)
  nameWithType.vb: Dfa(Of TState, TSymbol).AddTransition(TState, TSymbol, TState)
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.AddTransition*
  name: AddTransition
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_AddTransition_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.AddTransition
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.AddTransition
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).AddTransition
  nameWithType: Dfa<TState, TSymbol>.AddTransition
  nameWithType.vb: Dfa(Of TState, TSymbol).AddTransition
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.Alphabet
  name: Alphabet
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_Alphabet
  commentId: P:Yoakke.SynKit.Automata.Sparse.Dfa`2.Alphabet
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Alphabet
  nameWithType: Dfa<TState, TSymbol>.Alphabet
  nameWithType.vb: Dfa(Of TState, TSymbol).Alphabet
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.Alphabet*
  name: Alphabet
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_Alphabet_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.Alphabet
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Alphabet
  nameWithType: Dfa<TState, TSymbol>.Alphabet
  nameWithType.vb: Dfa(Of TState, TSymbol).Alphabet
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.Complete(`0)
  name: Complete(TState)
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_Complete__0_
  commentId: M:Yoakke.SynKit.Automata.Sparse.Dfa`2.Complete(`0)
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Complete(TState)
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Complete(TState)
  nameWithType: Dfa<TState, TSymbol>.Complete(TState)
  nameWithType.vb: Dfa(Of TState, TSymbol).Complete(TState)
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.Complete*
  name: Complete
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_Complete_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.Complete
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Complete
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Complete
  nameWithType: Dfa<TState, TSymbol>.Complete
  nameWithType.vb: Dfa(Of TState, TSymbol).Complete
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.InitialState
  name: InitialState
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_InitialState
  commentId: P:Yoakke.SynKit.Automata.Sparse.Dfa`2.InitialState
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.InitialState
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).InitialState
  nameWithType: Dfa<TState, TSymbol>.InitialState
  nameWithType.vb: Dfa(Of TState, TSymbol).InitialState
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.InitialState*
  name: InitialState
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_InitialState_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.InitialState
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.InitialState
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).InitialState
  nameWithType: Dfa<TState, TSymbol>.InitialState
  nameWithType.vb: Dfa(Of TState, TSymbol).InitialState
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.IsComplete
  name: IsComplete
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_IsComplete
  commentId: P:Yoakke.SynKit.Automata.Sparse.Dfa`2.IsComplete
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.IsComplete
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).IsComplete
  nameWithType: Dfa<TState, TSymbol>.IsComplete
  nameWithType.vb: Dfa(Of TState, TSymbol).IsComplete
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.IsComplete*
  name: IsComplete
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_IsComplete_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.IsComplete
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.IsComplete
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).IsComplete
  nameWithType: Dfa<TState, TSymbol>.IsComplete
  nameWithType.vb: Dfa(Of TState, TSymbol).IsComplete
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.Minimize*
  name: Minimize
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_Minimize_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.Minimize
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Minimize
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Minimize
  nameWithType: Dfa<TState, TSymbol>.Minimize
  nameWithType.vb: Dfa(Of TState, TSymbol).Minimize
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.Minimize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0},IEnumerable{System.ValueTuple{`0,`0}})
  name: Minimize<TResultState>(IStateCombiner<TState, TResultState>, IEnumerable<(TState, TState)>)
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_Minimize__1_Yoakke_SynKit_Automata_IStateCombiner__0___0__IEnumerable_System_ValueTuple__0__0___
  commentId: M:Yoakke.SynKit.Automata.Sparse.Dfa`2.Minimize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0},IEnumerable{System.ValueTuple{`0,`0}})
  name.vb: Minimize(Of TResultState)(IStateCombiner(Of TState, TResultState), IEnumerable(Of (TState, TState)))
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Minimize<TResultState>(Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>, IEnumerable<System.ValueTuple<TState, TState>>)
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Minimize(Of TResultState)(Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState), IEnumerable(Of System.ValueTuple(Of TState, TState)))
  nameWithType: Dfa<TState, TSymbol>.Minimize<TResultState>(IStateCombiner<TState, TResultState>, IEnumerable<(TState, TState)>)
  nameWithType.vb: Dfa(Of TState, TSymbol).Minimize(Of TResultState)(IStateCombiner(Of TState, TResultState), IEnumerable(Of (TState, TState)))
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.ReachableStates
  name: ReachableStates
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_ReachableStates
  commentId: P:Yoakke.SynKit.Automata.Sparse.Dfa`2.ReachableStates
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.ReachableStates
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).ReachableStates
  nameWithType: Dfa<TState, TSymbol>.ReachableStates
  nameWithType.vb: Dfa(Of TState, TSymbol).ReachableStates
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.ReachableStates*
  name: ReachableStates
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_ReachableStates_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.ReachableStates
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.ReachableStates
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).ReachableStates
  nameWithType: Dfa<TState, TSymbol>.ReachableStates
  nameWithType.vb: Dfa(Of TState, TSymbol).ReachableStates
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.RemoveTransition(`0,`1,`0)
  name: RemoveTransition(TState, TSymbol, TState)
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_RemoveTransition__0__1__0_
  commentId: M:Yoakke.SynKit.Automata.Sparse.Dfa`2.RemoveTransition(`0,`1,`0)
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.RemoveTransition(TState, TSymbol, TState)
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).RemoveTransition(TState, TSymbol, TState)
  nameWithType: Dfa<TState, TSymbol>.RemoveTransition(TState, TSymbol, TState)
  nameWithType.vb: Dfa(Of TState, TSymbol).RemoveTransition(TState, TSymbol, TState)
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.RemoveTransition*
  name: RemoveTransition
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_RemoveTransition_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.RemoveTransition
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.RemoveTransition
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).RemoveTransition
  nameWithType: Dfa<TState, TSymbol>.RemoveTransition
  nameWithType.vb: Dfa(Of TState, TSymbol).RemoveTransition
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.RemoveUnreachable
  name: RemoveUnreachable()
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_RemoveUnreachable
  commentId: M:Yoakke.SynKit.Automata.Sparse.Dfa`2.RemoveUnreachable
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.RemoveUnreachable()
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).RemoveUnreachable()
  nameWithType: Dfa<TState, TSymbol>.RemoveUnreachable()
  nameWithType.vb: Dfa(Of TState, TSymbol).RemoveUnreachable()
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.RemoveUnreachable*
  name: RemoveUnreachable
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_RemoveUnreachable_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.RemoveUnreachable
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.RemoveUnreachable
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).RemoveUnreachable
  nameWithType: Dfa<TState, TSymbol>.RemoveUnreachable
  nameWithType.vb: Dfa(Of TState, TSymbol).RemoveUnreachable
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.StateComparer
  name: StateComparer
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_StateComparer
  commentId: P:Yoakke.SynKit.Automata.Sparse.Dfa`2.StateComparer
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.StateComparer
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).StateComparer
  nameWithType: Dfa<TState, TSymbol>.StateComparer
  nameWithType.vb: Dfa(Of TState, TSymbol).StateComparer
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.StateComparer*
  name: StateComparer
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_StateComparer_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.StateComparer
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.StateComparer
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).StateComparer
  nameWithType: Dfa<TState, TSymbol>.StateComparer
  nameWithType.vb: Dfa(Of TState, TSymbol).StateComparer
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.States
  name: States
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_States
  commentId: P:Yoakke.SynKit.Automata.Sparse.Dfa`2.States
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.States
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).States
  nameWithType: Dfa<TState, TSymbol>.States
  nameWithType.vb: Dfa(Of TState, TSymbol).States
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.States*
  name: States
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_States_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.States
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.States
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).States
  nameWithType: Dfa<TState, TSymbol>.States
  nameWithType.vb: Dfa(Of TState, TSymbol).States
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.SymbolComparer
  name: SymbolComparer
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_SymbolComparer
  commentId: P:Yoakke.SynKit.Automata.Sparse.Dfa`2.SymbolComparer
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.SymbolComparer
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).SymbolComparer
  nameWithType: Dfa<TState, TSymbol>.SymbolComparer
  nameWithType.vb: Dfa(Of TState, TSymbol).SymbolComparer
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.SymbolComparer*
  name: SymbolComparer
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_SymbolComparer_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.SymbolComparer
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.SymbolComparer
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).SymbolComparer
  nameWithType: Dfa<TState, TSymbol>.SymbolComparer
  nameWithType.vb: Dfa(Of TState, TSymbol).SymbolComparer
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.ToDot
  name: ToDot()
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_ToDot
  commentId: M:Yoakke.SynKit.Automata.Sparse.Dfa`2.ToDot
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.ToDot()
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).ToDot()
  nameWithType: Dfa<TState, TSymbol>.ToDot()
  nameWithType.vb: Dfa(Of TState, TSymbol).ToDot()
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.ToDot*
  name: ToDot
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_ToDot_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.ToDot
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.ToDot
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).ToDot
  nameWithType: Dfa<TState, TSymbol>.ToDot
  nameWithType.vb: Dfa(Of TState, TSymbol).ToDot
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.Transitions
  name: Transitions
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_Transitions
  commentId: P:Yoakke.SynKit.Automata.Sparse.Dfa`2.Transitions
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Transitions
  nameWithType: Dfa<TState, TSymbol>.Transitions
  nameWithType.vb: Dfa(Of TState, TSymbol).Transitions
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.Transitions*
  name: Transitions
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_Transitions_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.Transitions
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Transitions
  nameWithType: Dfa<TState, TSymbol>.Transitions
  nameWithType.vb: Dfa(Of TState, TSymbol).Transitions
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.TryGetTransition(`0,`1,`0@)
  name: TryGetTransition(TState, TSymbol, out TState)
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_TryGetTransition__0__1__0__
  commentId: M:Yoakke.SynKit.Automata.Sparse.Dfa`2.TryGetTransition(`0,`1,`0@)
  name.vb: TryGetTransition(TState, TSymbol, ByRef TState)
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.TryGetTransition(TState, TSymbol, out TState)
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).TryGetTransition(TState, TSymbol, ByRef TState)
  nameWithType: Dfa<TState, TSymbol>.TryGetTransition(TState, TSymbol, out TState)
  nameWithType.vb: Dfa(Of TState, TSymbol).TryGetTransition(TState, TSymbol, ByRef TState)
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.TryGetTransition*
  name: TryGetTransition
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_TryGetTransition_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.TryGetTransition
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.TryGetTransition
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).TryGetTransition
  nameWithType: Dfa<TState, TSymbol>.TryGetTransition
  nameWithType.vb: Dfa(Of TState, TSymbol).TryGetTransition
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.Yoakke#SynKit#Automata#IReadOnlyDfa{TState,TSymbol}#Minimize*
  name: IReadOnlyDfa<TState, TSymbol>.Minimize
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_Yoakke_SynKit_Automata_IReadOnlyDfa_TState_TSymbol__Minimize_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.Yoakke#SynKit#Automata#IReadOnlyDfa{TState,TSymbol}#Minimize
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.IReadOnlyDfa<TState,TSymbol>.Minimize
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyDfa<TState, TSymbol>.Minimize
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyDfa<TState,TSymbol>.Minimize
  nameWithType: Dfa<TState, TSymbol>.IReadOnlyDfa<TState, TSymbol>.Minimize
  nameWithType.vb: Dfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyDfa<TState,TSymbol>.Minimize
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.Yoakke#SynKit#Automata#IReadOnlyDfa{TState,TSymbol}#Minimize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0},IEnumerable{System.ValueTuple{`0,`0}})
  name: IReadOnlyDfa<TState, TSymbol>.Minimize<TResultState>(IStateCombiner<TState, TResultState>, IEnumerable<(TState, TState)>)
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_Yoakke_SynKit_Automata_IReadOnlyDfa_TState_TSymbol__Minimize__1_Yoakke_SynKit_Automata_IStateCombiner__0___0__IEnumerable_System_ValueTuple__0__0___
  commentId: M:Yoakke.SynKit.Automata.Sparse.Dfa`2.Yoakke#SynKit#Automata#IReadOnlyDfa{TState,TSymbol}#Minimize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0},IEnumerable{System.ValueTuple{`0,`0}})
  name.vb: Yoakke.SynKit.Automata.IReadOnlyDfa<TState,TSymbol>.Minimize(Of TResultState)(IStateCombiner(Of TState, TResultState), IEnumerable(Of (TState, TState)))
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyDfa<TState, TSymbol>.Minimize<TResultState>(Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>, IEnumerable<System.ValueTuple<TState, TState>>)
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyDfa<TState,TSymbol>.Minimize(Of TResultState)(Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState), IEnumerable(Of System.ValueTuple(Of TState, TState)))
  nameWithType: Dfa<TState, TSymbol>.IReadOnlyDfa<TState, TSymbol>.Minimize<TResultState>(IStateCombiner<TState, TResultState>, IEnumerable<(TState, TState)>)
  nameWithType.vb: Dfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyDfa<TState,TSymbol>.Minimize(Of TResultState)(IStateCombiner(Of TState, TResultState), IEnumerable(Of (TState, TState)))
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#AcceptingStates
  name: IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_TState_TSymbol__AcceptingStates
  commentId: P:Yoakke.SynKit.Automata.Sparse.Dfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#AcceptingStates
  name.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
  nameWithType: Dfa<TState, TSymbol>.IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  nameWithType.vb: Dfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#AcceptingStates*
  name: IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_TState_TSymbol__AcceptingStates_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#AcceptingStates
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
  nameWithType: Dfa<TState, TSymbol>.IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  nameWithType.vb: Dfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#States
  name: IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_TState_TSymbol__States
  commentId: P:Yoakke.SynKit.Automata.Sparse.Dfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#States
  name.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
  nameWithType: Dfa<TState, TSymbol>.IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  nameWithType.vb: Dfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#States*
  name: IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_TState_TSymbol__States_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#States
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
  nameWithType: Dfa<TState, TSymbol>.IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  nameWithType.vb: Dfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.Yoakke#SynKit#Automata#Sparse#IReadOnlySparseFiniteAutomaton{TState,TSymbol}#Alphabet
  name: IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Alphabet
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_Yoakke_SynKit_Automata_Sparse_IReadOnlySparseFiniteAutomaton_TState_TSymbol__Alphabet
  commentId: P:Yoakke.SynKit.Automata.Sparse.Dfa`2.Yoakke#SynKit#Automata#Sparse#IReadOnlySparseFiniteAutomaton{TState,TSymbol}#Alphabet
  name.vb: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Alphabet
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Alphabet
  nameWithType: Dfa<TState, TSymbol>.IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Alphabet
  nameWithType.vb: Dfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Alphabet
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.Yoakke#SynKit#Automata#Sparse#IReadOnlySparseFiniteAutomaton{TState,TSymbol}#Alphabet*
  name: IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Alphabet
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_Yoakke_SynKit_Automata_Sparse_IReadOnlySparseFiniteAutomaton_TState_TSymbol__Alphabet_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.Yoakke#SynKit#Automata#Sparse#IReadOnlySparseFiniteAutomaton{TState,TSymbol}#Alphabet
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Alphabet
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Alphabet
  nameWithType: Dfa<TState, TSymbol>.IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Alphabet
  nameWithType.vb: Dfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Alphabet
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.Yoakke#SynKit#Automata#Sparse#IReadOnlySparseFiniteAutomaton{TState,TSymbol}#Transitions
  name: IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Transitions
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_Yoakke_SynKit_Automata_Sparse_IReadOnlySparseFiniteAutomaton_TState_TSymbol__Transitions
  commentId: P:Yoakke.SynKit.Automata.Sparse.Dfa`2.Yoakke#SynKit#Automata#Sparse#IReadOnlySparseFiniteAutomaton{TState,TSymbol}#Transitions
  name.vb: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Transitions
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Transitions
  nameWithType: Dfa<TState, TSymbol>.IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Transitions
  nameWithType.vb: Dfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Transitions
- uid: Yoakke.SynKit.Automata.Sparse.Dfa`2.Yoakke#SynKit#Automata#Sparse#IReadOnlySparseFiniteAutomaton{TState,TSymbol}#Transitions*
  name: IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Transitions
  href: api/Yoakke.SynKit.Automata.Sparse.Dfa-2.html#Yoakke_SynKit_Automata_Sparse_Dfa_2_Yoakke_SynKit_Automata_Sparse_IReadOnlySparseFiniteAutomaton_TState_TSymbol__Transitions_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Dfa`2.Yoakke#SynKit#Automata#Sparse#IReadOnlySparseFiniteAutomaton{TState,TSymbol}#Transitions
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Transitions
  fullName: Yoakke.SynKit.Automata.Sparse.Dfa<TState, TSymbol>.Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Dfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Transitions
  nameWithType: Dfa<TState, TSymbol>.IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Transitions
  nameWithType.vb: Dfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Transitions
- uid: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa`2
  name: IReadOnlySparseDfa<TState, TSymbol>
  href: api/Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa-2.html
  commentId: T:Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa`2
  name.vb: IReadOnlySparseDfa(Of TState, TSymbol)
  fullName: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa<TState, TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa(Of TState, TSymbol)
  nameWithType: IReadOnlySparseDfa<TState, TSymbol>
  nameWithType.vb: IReadOnlySparseDfa(Of TState, TSymbol)
- uid: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa`2.IsComplete
  name: IsComplete
  href: api/Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa-2.html#Yoakke_SynKit_Automata_Sparse_IReadOnlySparseDfa_2_IsComplete
  commentId: P:Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa`2.IsComplete
  fullName: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa<TState, TSymbol>.IsComplete
  fullName.vb: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa(Of TState, TSymbol).IsComplete
  nameWithType: IReadOnlySparseDfa<TState, TSymbol>.IsComplete
  nameWithType.vb: IReadOnlySparseDfa(Of TState, TSymbol).IsComplete
- uid: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa`2.IsComplete*
  name: IsComplete
  href: api/Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa-2.html#Yoakke_SynKit_Automata_Sparse_IReadOnlySparseDfa_2_IsComplete_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa`2.IsComplete
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa<TState, TSymbol>.IsComplete
  fullName.vb: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa(Of TState, TSymbol).IsComplete
  nameWithType: IReadOnlySparseDfa<TState, TSymbol>.IsComplete
  nameWithType.vb: IReadOnlySparseDfa(Of TState, TSymbol).IsComplete
- uid: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa`2.Minimize*
  name: Minimize
  href: api/Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa-2.html#Yoakke_SynKit_Automata_Sparse_IReadOnlySparseDfa_2_Minimize_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa`2.Minimize
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa<TState, TSymbol>.Minimize
  fullName.vb: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa(Of TState, TSymbol).Minimize
  nameWithType: IReadOnlySparseDfa<TState, TSymbol>.Minimize
  nameWithType.vb: IReadOnlySparseDfa(Of TState, TSymbol).Minimize
- uid: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa`2.Minimize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0},IEnumerable{System.ValueTuple{`0,`0}})
  name: Minimize<TResultState>(IStateCombiner<TState, TResultState>, IEnumerable<(TState, TState)>)
  href: api/Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa-2.html#Yoakke_SynKit_Automata_Sparse_IReadOnlySparseDfa_2_Minimize__1_Yoakke_SynKit_Automata_IStateCombiner__0___0__IEnumerable_System_ValueTuple__0__0___
  commentId: M:Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa`2.Minimize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0},IEnumerable{System.ValueTuple{`0,`0}})
  name.vb: Minimize(Of TResultState)(IStateCombiner(Of TState, TResultState), IEnumerable(Of (TState, TState)))
  fullName: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa<TState, TSymbol>.Minimize<TResultState>(Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>, IEnumerable<System.ValueTuple<TState, TState>>)
  fullName.vb: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseDfa(Of TState, TSymbol).Minimize(Of TResultState)(Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState), IEnumerable(Of System.ValueTuple(Of TState, TState)))
  nameWithType: IReadOnlySparseDfa<TState, TSymbol>.Minimize<TResultState>(IStateCombiner<TState, TResultState>, IEnumerable<(TState, TState)>)
  nameWithType.vb: IReadOnlySparseDfa(Of TState, TSymbol).Minimize(Of TResultState)(IStateCombiner(Of TState, TResultState), IEnumerable(Of (TState, TState)))
- uid: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton`2
  name: IReadOnlySparseFiniteAutomaton<TState, TSymbol>
  href: api/Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton-2.html
  commentId: T:Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton`2
  name.vb: IReadOnlySparseFiniteAutomaton(Of TState, TSymbol)
  fullName: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState, TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton(Of TState, TSymbol)
  nameWithType: IReadOnlySparseFiniteAutomaton<TState, TSymbol>
  nameWithType.vb: IReadOnlySparseFiniteAutomaton(Of TState, TSymbol)
- uid: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton`2.Alphabet
  name: Alphabet
  href: api/Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton-2.html#Yoakke_SynKit_Automata_Sparse_IReadOnlySparseFiniteAutomaton_2_Alphabet
  commentId: P:Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton`2.Alphabet
  fullName: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton(Of TState, TSymbol).Alphabet
  nameWithType: IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Alphabet
  nameWithType.vb: IReadOnlySparseFiniteAutomaton(Of TState, TSymbol).Alphabet
- uid: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton`2.Alphabet*
  name: Alphabet
  href: api/Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton-2.html#Yoakke_SynKit_Automata_Sparse_IReadOnlySparseFiniteAutomaton_2_Alphabet_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton`2.Alphabet
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton(Of TState, TSymbol).Alphabet
  nameWithType: IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Alphabet
  nameWithType.vb: IReadOnlySparseFiniteAutomaton(Of TState, TSymbol).Alphabet
- uid: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton`2.Transitions
  name: Transitions
  href: api/Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton-2.html#Yoakke_SynKit_Automata_Sparse_IReadOnlySparseFiniteAutomaton_2_Transitions
  commentId: P:Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton`2.Transitions
  fullName: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton(Of TState, TSymbol).Transitions
  nameWithType: IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Transitions
  nameWithType.vb: IReadOnlySparseFiniteAutomaton(Of TState, TSymbol).Transitions
- uid: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton`2.Transitions*
  name: Transitions
  href: api/Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton-2.html#Yoakke_SynKit_Automata_Sparse_IReadOnlySparseFiniteAutomaton_2_Transitions_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton`2.Transitions
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton(Of TState, TSymbol).Transitions
  nameWithType: IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Transitions
  nameWithType.vb: IReadOnlySparseFiniteAutomaton(Of TState, TSymbol).Transitions
- uid: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseNfa`2
  name: IReadOnlySparseNfa<TState, TSymbol>
  href: api/Yoakke.SynKit.Automata.Sparse.IReadOnlySparseNfa-2.html
  commentId: T:Yoakke.SynKit.Automata.Sparse.IReadOnlySparseNfa`2
  name.vb: IReadOnlySparseNfa(Of TState, TSymbol)
  fullName: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseNfa<TState, TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseNfa(Of TState, TSymbol)
  nameWithType: IReadOnlySparseNfa<TState, TSymbol>
  nameWithType.vb: IReadOnlySparseNfa(Of TState, TSymbol)
- uid: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseNfa`2.Determinize*
  name: Determinize
  href: api/Yoakke.SynKit.Automata.Sparse.IReadOnlySparseNfa-2.html#Yoakke_SynKit_Automata_Sparse_IReadOnlySparseNfa_2_Determinize_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.IReadOnlySparseNfa`2.Determinize
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseNfa<TState, TSymbol>.Determinize
  fullName.vb: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseNfa(Of TState, TSymbol).Determinize
  nameWithType: IReadOnlySparseNfa<TState, TSymbol>.Determinize
  nameWithType.vb: IReadOnlySparseNfa(Of TState, TSymbol).Determinize
- uid: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseNfa`2.Determinize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0})
  name: Determinize<TResultState>(IStateCombiner<TState, TResultState>)
  href: api/Yoakke.SynKit.Automata.Sparse.IReadOnlySparseNfa-2.html#Yoakke_SynKit_Automata_Sparse_IReadOnlySparseNfa_2_Determinize__1_Yoakke_SynKit_Automata_IStateCombiner__0___0__
  commentId: M:Yoakke.SynKit.Automata.Sparse.IReadOnlySparseNfa`2.Determinize``1(Yoakke.SynKit.Automata.IStateCombiner{`0,``0})
  name.vb: Determinize(Of TResultState)(IStateCombiner(Of TState, TResultState))
  fullName: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseNfa<TState, TSymbol>.Determinize<TResultState>(Yoakke.SynKit.Automata.IStateCombiner<TState, TResultState>)
  fullName.vb: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseNfa(Of TState, TSymbol).Determinize(Of TResultState)(Yoakke.SynKit.Automata.IStateCombiner(Of TState, TResultState))
  nameWithType: IReadOnlySparseNfa<TState, TSymbol>.Determinize<TResultState>(IStateCombiner<TState, TResultState>)
  nameWithType.vb: IReadOnlySparseNfa(Of TState, TSymbol).Determinize(Of TResultState)(IStateCombiner(Of TState, TResultState))
- uid: Yoakke.SynKit.Automata.Sparse.ISparseDfa`2
  name: ISparseDfa<TState, TSymbol>
  href: api/Yoakke.SynKit.Automata.Sparse.ISparseDfa-2.html
  commentId: T:Yoakke.SynKit.Automata.Sparse.ISparseDfa`2
  name.vb: ISparseDfa(Of TState, TSymbol)
  fullName: Yoakke.SynKit.Automata.Sparse.ISparseDfa<TState, TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.Sparse.ISparseDfa(Of TState, TSymbol)
  nameWithType: ISparseDfa<TState, TSymbol>
  nameWithType.vb: ISparseDfa(Of TState, TSymbol)
- uid: Yoakke.SynKit.Automata.Sparse.ISparseDfa`2.Complete(`0)
  name: Complete(TState)
  href: api/Yoakke.SynKit.Automata.Sparse.ISparseDfa-2.html#Yoakke_SynKit_Automata_Sparse_ISparseDfa_2_Complete__0_
  commentId: M:Yoakke.SynKit.Automata.Sparse.ISparseDfa`2.Complete(`0)
  fullName: Yoakke.SynKit.Automata.Sparse.ISparseDfa<TState, TSymbol>.Complete(TState)
  fullName.vb: Yoakke.SynKit.Automata.Sparse.ISparseDfa(Of TState, TSymbol).Complete(TState)
  nameWithType: ISparseDfa<TState, TSymbol>.Complete(TState)
  nameWithType.vb: ISparseDfa(Of TState, TSymbol).Complete(TState)
- uid: Yoakke.SynKit.Automata.Sparse.ISparseDfa`2.Complete*
  name: Complete
  href: api/Yoakke.SynKit.Automata.Sparse.ISparseDfa-2.html#Yoakke_SynKit_Automata_Sparse_ISparseDfa_2_Complete_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.ISparseDfa`2.Complete
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.ISparseDfa<TState, TSymbol>.Complete
  fullName.vb: Yoakke.SynKit.Automata.Sparse.ISparseDfa(Of TState, TSymbol).Complete
  nameWithType: ISparseDfa<TState, TSymbol>.Complete
  nameWithType.vb: ISparseDfa(Of TState, TSymbol).Complete
- uid: Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton`2
  name: ISparseFiniteAutomaton<TState, TSymbol>
  href: api/Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton-2.html
  commentId: T:Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton`2
  name.vb: ISparseFiniteAutomaton(Of TState, TSymbol)
  fullName: Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton<TState, TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton(Of TState, TSymbol)
  nameWithType: ISparseFiniteAutomaton<TState, TSymbol>
  nameWithType.vb: ISparseFiniteAutomaton(Of TState, TSymbol)
- uid: Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton`2.Alphabet
  name: Alphabet
  href: api/Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton-2.html#Yoakke_SynKit_Automata_Sparse_ISparseFiniteAutomaton_2_Alphabet
  commentId: P:Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton`2.Alphabet
  fullName: Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton(Of TState, TSymbol).Alphabet
  nameWithType: ISparseFiniteAutomaton<TState, TSymbol>.Alphabet
  nameWithType.vb: ISparseFiniteAutomaton(Of TState, TSymbol).Alphabet
- uid: Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton`2.Alphabet*
  name: Alphabet
  href: api/Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton-2.html#Yoakke_SynKit_Automata_Sparse_ISparseFiniteAutomaton_2_Alphabet_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton`2.Alphabet
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton(Of TState, TSymbol).Alphabet
  nameWithType: ISparseFiniteAutomaton<TState, TSymbol>.Alphabet
  nameWithType.vb: ISparseFiniteAutomaton(Of TState, TSymbol).Alphabet
- uid: Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton`2.Transitions
  name: Transitions
  href: api/Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton-2.html#Yoakke_SynKit_Automata_Sparse_ISparseFiniteAutomaton_2_Transitions
  commentId: P:Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton`2.Transitions
  fullName: Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton(Of TState, TSymbol).Transitions
  nameWithType: ISparseFiniteAutomaton<TState, TSymbol>.Transitions
  nameWithType.vb: ISparseFiniteAutomaton(Of TState, TSymbol).Transitions
- uid: Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton`2.Transitions*
  name: Transitions
  href: api/Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton-2.html#Yoakke_SynKit_Automata_Sparse_ISparseFiniteAutomaton_2_Transitions_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton`2.Transitions
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Sparse.ISparseFiniteAutomaton(Of TState, TSymbol).Transitions
  nameWithType: ISparseFiniteAutomaton<TState, TSymbol>.Transitions
  nameWithType.vb: ISparseFiniteAutomaton(Of TState, TSymbol).Transitions
- uid: Yoakke.SynKit.Automata.Sparse.ISparseNfa`2
  name: ISparseNfa<TState, TSymbol>
  href: api/Yoakke.SynKit.Automata.Sparse.ISparseNfa-2.html
  commentId: T:Yoakke.SynKit.Automata.Sparse.ISparseNfa`2
  name.vb: ISparseNfa(Of TState, TSymbol)
  fullName: Yoakke.SynKit.Automata.Sparse.ISparseNfa<TState, TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.Sparse.ISparseNfa(Of TState, TSymbol)
  nameWithType: ISparseNfa<TState, TSymbol>
  nameWithType.vb: ISparseNfa(Of TState, TSymbol)
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2
  name: Nfa<TState, TSymbol>
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html
  commentId: T:Yoakke.SynKit.Automata.Sparse.Nfa`2
  name.vb: Nfa(Of TState, TSymbol)
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol)
  nameWithType: Nfa<TState, TSymbol>
  nameWithType.vb: Nfa(Of TState, TSymbol)
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.#ctor
  name: Nfa()
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2__ctor
  commentId: M:Yoakke.SynKit.Automata.Sparse.Nfa`2.#ctor
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.Nfa()
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).Nfa()
  nameWithType: Nfa<TState, TSymbol>.Nfa()
  nameWithType.vb: Nfa(Of TState, TSymbol).Nfa()
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.#ctor(IEqualityComparer{`0},IEqualityComparer{`1})
  name: Nfa(IEqualityComparer<TState>, IEqualityComparer<TSymbol>)
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2__ctor_IEqualityComparer__0__IEqualityComparer__1__
  commentId: M:Yoakke.SynKit.Automata.Sparse.Nfa`2.#ctor(IEqualityComparer{`0},IEqualityComparer{`1})
  name.vb: Nfa(IEqualityComparer(Of TState), IEqualityComparer(Of TSymbol))
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.Nfa(IEqualityComparer<TState>, IEqualityComparer<TSymbol>)
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).Nfa(IEqualityComparer(Of TState), IEqualityComparer(Of TSymbol))
  nameWithType: Nfa<TState, TSymbol>.Nfa(IEqualityComparer<TState>, IEqualityComparer<TSymbol>)
  nameWithType.vb: Nfa(Of TState, TSymbol).Nfa(IEqualityComparer(Of TState), IEqualityComparer(Of TSymbol))
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.#ctor*
  name: Nfa
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2__ctor_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.Nfa
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).Nfa
  nameWithType: Nfa<TState, TSymbol>.Nfa
  nameWithType.vb: Nfa(Of TState, TSymbol).Nfa
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.AcceptingStates
  name: AcceptingStates
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_AcceptingStates
  commentId: P:Yoakke.SynKit.Automata.Sparse.Nfa`2.AcceptingStates
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.AcceptingStates
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).AcceptingStates
  nameWithType: Nfa<TState, TSymbol>.AcceptingStates
  nameWithType.vb: Nfa(Of TState, TSymbol).AcceptingStates
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.AcceptingStates*
  name: AcceptingStates
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_AcceptingStates_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.AcceptingStates
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.AcceptingStates
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).AcceptingStates
  nameWithType: Nfa<TState, TSymbol>.AcceptingStates
  nameWithType.vb: Nfa(Of TState, TSymbol).AcceptingStates
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.Accepts(IEnumerable{`1})
  name: Accepts(IEnumerable<TSymbol>)
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_Accepts_IEnumerable__1__
  commentId: M:Yoakke.SynKit.Automata.Sparse.Nfa`2.Accepts(IEnumerable{`1})
  name.vb: Accepts(IEnumerable(Of TSymbol))
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.Accepts(IEnumerable<TSymbol>)
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).Accepts(IEnumerable(Of TSymbol))
  nameWithType: Nfa<TState, TSymbol>.Accepts(IEnumerable<TSymbol>)
  nameWithType.vb: Nfa(Of TState, TSymbol).Accepts(IEnumerable(Of TSymbol))
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.Accepts*
  name: Accepts
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_Accepts_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.Accepts
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.Accepts
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).Accepts
  nameWithType: Nfa<TState, TSymbol>.Accepts
  nameWithType.vb: Nfa(Of TState, TSymbol).Accepts
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.AddEpsilonTransition(`0,`0)
  name: AddEpsilonTransition(TState, TState)
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_AddEpsilonTransition__0__0_
  commentId: M:Yoakke.SynKit.Automata.Sparse.Nfa`2.AddEpsilonTransition(`0,`0)
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.AddEpsilonTransition(TState, TState)
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).AddEpsilonTransition(TState, TState)
  nameWithType: Nfa<TState, TSymbol>.AddEpsilonTransition(TState, TState)
  nameWithType.vb: Nfa(Of TState, TSymbol).AddEpsilonTransition(TState, TState)
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.AddEpsilonTransition*
  name: AddEpsilonTransition
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_AddEpsilonTransition_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.AddEpsilonTransition
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.AddEpsilonTransition
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).AddEpsilonTransition
  nameWithType: Nfa<TState, TSymbol>.AddEpsilonTransition
  nameWithType.vb: Nfa(Of TState, TSymbol).AddEpsilonTransition
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.AddTransition(`0,`1,`0)
  name: AddTransition(TState, TSymbol, TState)
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_AddTransition__0__1__0_
  commentId: M:Yoakke.SynKit.Automata.Sparse.Nfa`2.AddTransition(`0,`1,`0)
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.AddTransition(TState, TSymbol, TState)
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).AddTransition(TState, TSymbol, TState)
  nameWithType: Nfa<TState, TSymbol>.AddTransition(TState, TSymbol, TState)
  nameWithType.vb: Nfa(Of TState, TSymbol).AddTransition(TState, TSymbol, TState)
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.AddTransition*
  name: AddTransition
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_AddTransition_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.AddTransition
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.AddTransition
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).AddTransition
  nameWithType: Nfa<TState, TSymbol>.AddTransition
  nameWithType.vb: Nfa(Of TState, TSymbol).AddTransition
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.Alphabet
  name: Alphabet
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_Alphabet
  commentId: P:Yoakke.SynKit.Automata.Sparse.Nfa`2.Alphabet
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).Alphabet
  nameWithType: Nfa<TState, TSymbol>.Alphabet
  nameWithType.vb: Nfa(Of TState, TSymbol).Alphabet
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.Alphabet*
  name: Alphabet
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_Alphabet_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.Alphabet
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).Alphabet
  nameWithType: Nfa<TState, TSymbol>.Alphabet
  nameWithType.vb: Nfa(Of TState, TSymbol).Alphabet
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.EliminateEpsilonTransitions
  name: EliminateEpsilonTransitions()
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_EliminateEpsilonTransitions
  commentId: M:Yoakke.SynKit.Automata.Sparse.Nfa`2.EliminateEpsilonTransitions
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.EliminateEpsilonTransitions()
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).EliminateEpsilonTransitions()
  nameWithType: Nfa<TState, TSymbol>.EliminateEpsilonTransitions()
  nameWithType.vb: Nfa(Of TState, TSymbol).EliminateEpsilonTransitions()
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.EliminateEpsilonTransitions*
  name: EliminateEpsilonTransitions
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_EliminateEpsilonTransitions_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.EliminateEpsilonTransitions
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.EliminateEpsilonTransitions
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).EliminateEpsilonTransitions
  nameWithType: Nfa<TState, TSymbol>.EliminateEpsilonTransitions
  nameWithType.vb: Nfa(Of TState, TSymbol).EliminateEpsilonTransitions
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.EpsilonClosure(`0)
  name: EpsilonClosure(TState)
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_EpsilonClosure__0_
  commentId: M:Yoakke.SynKit.Automata.Sparse.Nfa`2.EpsilonClosure(`0)
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.EpsilonClosure(TState)
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).EpsilonClosure(TState)
  nameWithType: Nfa<TState, TSymbol>.EpsilonClosure(TState)
  nameWithType.vb: Nfa(Of TState, TSymbol).EpsilonClosure(TState)
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.EpsilonClosure*
  name: EpsilonClosure
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_EpsilonClosure_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.EpsilonClosure
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.EpsilonClosure
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).EpsilonClosure
  nameWithType: Nfa<TState, TSymbol>.EpsilonClosure
  nameWithType.vb: Nfa(Of TState, TSymbol).EpsilonClosure
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.EpsilonTransitions
  name: EpsilonTransitions
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_EpsilonTransitions
  commentId: P:Yoakke.SynKit.Automata.Sparse.Nfa`2.EpsilonTransitions
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.EpsilonTransitions
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).EpsilonTransitions
  nameWithType: Nfa<TState, TSymbol>.EpsilonTransitions
  nameWithType.vb: Nfa(Of TState, TSymbol).EpsilonTransitions
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.EpsilonTransitions*
  name: EpsilonTransitions
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_EpsilonTransitions_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.EpsilonTransitions
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.EpsilonTransitions
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).EpsilonTransitions
  nameWithType: Nfa<TState, TSymbol>.EpsilonTransitions
  nameWithType.vb: Nfa(Of TState, TSymbol).EpsilonTransitions
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.GetTransitions(`0,`1)
  name: GetTransitions(TState, TSymbol)
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_GetTransitions__0__1_
  commentId: M:Yoakke.SynKit.Automata.Sparse.Nfa`2.GetTransitions(`0,`1)
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.GetTransitions(TState, TSymbol)
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).GetTransitions(TState, TSymbol)
  nameWithType: Nfa<TState, TSymbol>.GetTransitions(TState, TSymbol)
  nameWithType.vb: Nfa(Of TState, TSymbol).GetTransitions(TState, TSymbol)
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.GetTransitions*
  name: GetTransitions
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_GetTransitions_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.GetTransitions
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.GetTransitions
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).GetTransitions
  nameWithType: Nfa<TState, TSymbol>.GetTransitions
  nameWithType.vb: Nfa(Of TState, TSymbol).GetTransitions
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.InitialStates
  name: InitialStates
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_InitialStates
  commentId: P:Yoakke.SynKit.Automata.Sparse.Nfa`2.InitialStates
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.InitialStates
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).InitialStates
  nameWithType: Nfa<TState, TSymbol>.InitialStates
  nameWithType.vb: Nfa(Of TState, TSymbol).InitialStates
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.InitialStates*
  name: InitialStates
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_InitialStates_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.InitialStates
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.InitialStates
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).InitialStates
  nameWithType: Nfa<TState, TSymbol>.InitialStates
  nameWithType.vb: Nfa(Of TState, TSymbol).InitialStates
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.ReachableStates
  name: ReachableStates
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_ReachableStates
  commentId: P:Yoakke.SynKit.Automata.Sparse.Nfa`2.ReachableStates
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.ReachableStates
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).ReachableStates
  nameWithType: Nfa<TState, TSymbol>.ReachableStates
  nameWithType.vb: Nfa(Of TState, TSymbol).ReachableStates
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.ReachableStates*
  name: ReachableStates
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_ReachableStates_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.ReachableStates
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.ReachableStates
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).ReachableStates
  nameWithType: Nfa<TState, TSymbol>.ReachableStates
  nameWithType.vb: Nfa(Of TState, TSymbol).ReachableStates
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.RemoveEpsilonTransition(`0,`0)
  name: RemoveEpsilonTransition(TState, TState)
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_RemoveEpsilonTransition__0__0_
  commentId: M:Yoakke.SynKit.Automata.Sparse.Nfa`2.RemoveEpsilonTransition(`0,`0)
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.RemoveEpsilonTransition(TState, TState)
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).RemoveEpsilonTransition(TState, TState)
  nameWithType: Nfa<TState, TSymbol>.RemoveEpsilonTransition(TState, TState)
  nameWithType.vb: Nfa(Of TState, TSymbol).RemoveEpsilonTransition(TState, TState)
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.RemoveEpsilonTransition*
  name: RemoveEpsilonTransition
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_RemoveEpsilonTransition_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.RemoveEpsilonTransition
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.RemoveEpsilonTransition
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).RemoveEpsilonTransition
  nameWithType: Nfa<TState, TSymbol>.RemoveEpsilonTransition
  nameWithType.vb: Nfa(Of TState, TSymbol).RemoveEpsilonTransition
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.RemoveTransition(`0,`1,`0)
  name: RemoveTransition(TState, TSymbol, TState)
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_RemoveTransition__0__1__0_
  commentId: M:Yoakke.SynKit.Automata.Sparse.Nfa`2.RemoveTransition(`0,`1,`0)
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.RemoveTransition(TState, TSymbol, TState)
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).RemoveTransition(TState, TSymbol, TState)
  nameWithType: Nfa<TState, TSymbol>.RemoveTransition(TState, TSymbol, TState)
  nameWithType.vb: Nfa(Of TState, TSymbol).RemoveTransition(TState, TSymbol, TState)
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.RemoveTransition*
  name: RemoveTransition
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_RemoveTransition_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.RemoveTransition
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.RemoveTransition
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).RemoveTransition
  nameWithType: Nfa<TState, TSymbol>.RemoveTransition
  nameWithType.vb: Nfa(Of TState, TSymbol).RemoveTransition
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.RemoveUnreachable
  name: RemoveUnreachable()
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_RemoveUnreachable
  commentId: M:Yoakke.SynKit.Automata.Sparse.Nfa`2.RemoveUnreachable
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.RemoveUnreachable()
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).RemoveUnreachable()
  nameWithType: Nfa<TState, TSymbol>.RemoveUnreachable()
  nameWithType.vb: Nfa(Of TState, TSymbol).RemoveUnreachable()
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.RemoveUnreachable*
  name: RemoveUnreachable
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_RemoveUnreachable_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.RemoveUnreachable
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.RemoveUnreachable
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).RemoveUnreachable
  nameWithType: Nfa<TState, TSymbol>.RemoveUnreachable
  nameWithType.vb: Nfa(Of TState, TSymbol).RemoveUnreachable
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.StateComparer
  name: StateComparer
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_StateComparer
  commentId: P:Yoakke.SynKit.Automata.Sparse.Nfa`2.StateComparer
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.StateComparer
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).StateComparer
  nameWithType: Nfa<TState, TSymbol>.StateComparer
  nameWithType.vb: Nfa(Of TState, TSymbol).StateComparer
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.StateComparer*
  name: StateComparer
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_StateComparer_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.StateComparer
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.StateComparer
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).StateComparer
  nameWithType: Nfa<TState, TSymbol>.StateComparer
  nameWithType.vb: Nfa(Of TState, TSymbol).StateComparer
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.States
  name: States
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_States
  commentId: P:Yoakke.SynKit.Automata.Sparse.Nfa`2.States
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.States
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).States
  nameWithType: Nfa<TState, TSymbol>.States
  nameWithType.vb: Nfa(Of TState, TSymbol).States
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.States*
  name: States
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_States_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.States
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.States
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).States
  nameWithType: Nfa<TState, TSymbol>.States
  nameWithType.vb: Nfa(Of TState, TSymbol).States
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.SymbolComparer
  name: SymbolComparer
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_SymbolComparer
  commentId: P:Yoakke.SynKit.Automata.Sparse.Nfa`2.SymbolComparer
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.SymbolComparer
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).SymbolComparer
  nameWithType: Nfa<TState, TSymbol>.SymbolComparer
  nameWithType.vb: Nfa(Of TState, TSymbol).SymbolComparer
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.SymbolComparer*
  name: SymbolComparer
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_SymbolComparer_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.SymbolComparer
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.SymbolComparer
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).SymbolComparer
  nameWithType: Nfa<TState, TSymbol>.SymbolComparer
  nameWithType.vb: Nfa(Of TState, TSymbol).SymbolComparer
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.ToDot
  name: ToDot()
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_ToDot
  commentId: M:Yoakke.SynKit.Automata.Sparse.Nfa`2.ToDot
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.ToDot()
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).ToDot()
  nameWithType: Nfa<TState, TSymbol>.ToDot()
  nameWithType.vb: Nfa(Of TState, TSymbol).ToDot()
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.ToDot*
  name: ToDot
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_ToDot_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.ToDot
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.ToDot
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).ToDot
  nameWithType: Nfa<TState, TSymbol>.ToDot
  nameWithType.vb: Nfa(Of TState, TSymbol).ToDot
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.Transitions
  name: Transitions
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_Transitions
  commentId: P:Yoakke.SynKit.Automata.Sparse.Nfa`2.Transitions
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).Transitions
  nameWithType: Nfa<TState, TSymbol>.Transitions
  nameWithType.vb: Nfa(Of TState, TSymbol).Transitions
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.Transitions*
  name: Transitions
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_Transitions_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.Transitions
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).Transitions
  nameWithType: Nfa<TState, TSymbol>.Transitions
  nameWithType.vb: Nfa(Of TState, TSymbol).Transitions
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#AcceptingStates
  name: IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_TState_TSymbol__AcceptingStates
  commentId: P:Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#AcceptingStates
  name.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
  nameWithType: Nfa<TState, TSymbol>.IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  nameWithType.vb: Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#AcceptingStates*
  name: IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_TState_TSymbol__AcceptingStates_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#AcceptingStates
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
  nameWithType: Nfa<TState, TSymbol>.IReadOnlyFiniteAutomaton<TState, TSymbol>.AcceptingStates
  nameWithType.vb: Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.AcceptingStates
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#States
  name: IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_TState_TSymbol__States
  commentId: P:Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#States
  name.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
  nameWithType: Nfa<TState, TSymbol>.IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  nameWithType.vb: Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#States*
  name: IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_Yoakke_SynKit_Automata_IReadOnlyFiniteAutomaton_TState_TSymbol__States_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#IReadOnlyFiniteAutomaton{TState,TSymbol}#States
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
  nameWithType: Nfa<TState, TSymbol>.IReadOnlyFiniteAutomaton<TState, TSymbol>.States
  nameWithType.vb: Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyFiniteAutomaton<TState,TSymbol>.States
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#IReadOnlyNfa{TState,TSymbol}#EpsilonTransitions
  name: IReadOnlyNfa<TState, TSymbol>.EpsilonTransitions
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_Yoakke_SynKit_Automata_IReadOnlyNfa_TState_TSymbol__EpsilonTransitions
  commentId: P:Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#IReadOnlyNfa{TState,TSymbol}#EpsilonTransitions
  name.vb: Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.EpsilonTransitions
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>.EpsilonTransitions
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.EpsilonTransitions
  nameWithType: Nfa<TState, TSymbol>.IReadOnlyNfa<TState, TSymbol>.EpsilonTransitions
  nameWithType.vb: Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.EpsilonTransitions
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#IReadOnlyNfa{TState,TSymbol}#EpsilonTransitions*
  name: IReadOnlyNfa<TState, TSymbol>.EpsilonTransitions
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_Yoakke_SynKit_Automata_IReadOnlyNfa_TState_TSymbol__EpsilonTransitions_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#IReadOnlyNfa{TState,TSymbol}#EpsilonTransitions
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.EpsilonTransitions
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>.EpsilonTransitions
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.EpsilonTransitions
  nameWithType: Nfa<TState, TSymbol>.IReadOnlyNfa<TState, TSymbol>.EpsilonTransitions
  nameWithType.vb: Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.EpsilonTransitions
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#IReadOnlyNfa{TState,TSymbol}#InitialStates
  name: IReadOnlyNfa<TState, TSymbol>.InitialStates
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_Yoakke_SynKit_Automata_IReadOnlyNfa_TState_TSymbol__InitialStates
  commentId: P:Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#IReadOnlyNfa{TState,TSymbol}#InitialStates
  name.vb: Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.InitialStates
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>.InitialStates
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.InitialStates
  nameWithType: Nfa<TState, TSymbol>.IReadOnlyNfa<TState, TSymbol>.InitialStates
  nameWithType.vb: Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.InitialStates
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#IReadOnlyNfa{TState,TSymbol}#InitialStates*
  name: IReadOnlyNfa<TState, TSymbol>.InitialStates
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_Yoakke_SynKit_Automata_IReadOnlyNfa_TState_TSymbol__InitialStates_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#IReadOnlyNfa{TState,TSymbol}#InitialStates
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.InitialStates
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.Yoakke.SynKit.Automata.IReadOnlyNfa<TState, TSymbol>.InitialStates
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.InitialStates
  nameWithType: Nfa<TState, TSymbol>.IReadOnlyNfa<TState, TSymbol>.InitialStates
  nameWithType.vb: Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.IReadOnlyNfa<TState,TSymbol>.InitialStates
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#Sparse#IReadOnlySparseFiniteAutomaton{TState,TSymbol}#Alphabet
  name: IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Alphabet
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_Yoakke_SynKit_Automata_Sparse_IReadOnlySparseFiniteAutomaton_TState_TSymbol__Alphabet
  commentId: P:Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#Sparse#IReadOnlySparseFiniteAutomaton{TState,TSymbol}#Alphabet
  name.vb: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Alphabet
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Alphabet
  nameWithType: Nfa<TState, TSymbol>.IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Alphabet
  nameWithType.vb: Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Alphabet
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#Sparse#IReadOnlySparseFiniteAutomaton{TState,TSymbol}#Alphabet*
  name: IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Alphabet
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_Yoakke_SynKit_Automata_Sparse_IReadOnlySparseFiniteAutomaton_TState_TSymbol__Alphabet_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#Sparse#IReadOnlySparseFiniteAutomaton{TState,TSymbol}#Alphabet
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Alphabet
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Alphabet
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Alphabet
  nameWithType: Nfa<TState, TSymbol>.IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Alphabet
  nameWithType.vb: Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Alphabet
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#Sparse#IReadOnlySparseFiniteAutomaton{TState,TSymbol}#Transitions
  name: IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Transitions
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_Yoakke_SynKit_Automata_Sparse_IReadOnlySparseFiniteAutomaton_TState_TSymbol__Transitions
  commentId: P:Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#Sparse#IReadOnlySparseFiniteAutomaton{TState,TSymbol}#Transitions
  name.vb: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Transitions
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Transitions
  nameWithType: Nfa<TState, TSymbol>.IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Transitions
  nameWithType.vb: Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Transitions
- uid: Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#Sparse#IReadOnlySparseFiniteAutomaton{TState,TSymbol}#Transitions*
  name: IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Transitions
  href: api/Yoakke.SynKit.Automata.Sparse.Nfa-2.html#Yoakke_SynKit_Automata_Sparse_Nfa_2_Yoakke_SynKit_Automata_Sparse_IReadOnlySparseFiniteAutomaton_TState_TSymbol__Transitions_
  commentId: Overload:Yoakke.SynKit.Automata.Sparse.Nfa`2.Yoakke#SynKit#Automata#Sparse#IReadOnlySparseFiniteAutomaton{TState,TSymbol}#Transitions
  isSpec: "True"
  name.vb: Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Transitions
  fullName: Yoakke.SynKit.Automata.Sparse.Nfa<TState, TSymbol>.Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Transitions
  fullName.vb: Yoakke.SynKit.Automata.Sparse.Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Transitions
  nameWithType: Nfa<TState, TSymbol>.IReadOnlySparseFiniteAutomaton<TState, TSymbol>.Transitions
  nameWithType.vb: Nfa(Of TState, TSymbol).Yoakke.SynKit.Automata.Sparse.IReadOnlySparseFiniteAutomaton<TState,TSymbol>.Transitions
- uid: Yoakke.SynKit.Automata.StateCombiner`1
  name: StateCombiner<TState>
  href: api/Yoakke.SynKit.Automata.StateCombiner-1.html
  commentId: T:Yoakke.SynKit.Automata.StateCombiner`1
  name.vb: StateCombiner(Of TState)
  fullName: Yoakke.SynKit.Automata.StateCombiner<TState>
  fullName.vb: Yoakke.SynKit.Automata.StateCombiner(Of TState)
  nameWithType: StateCombiner<TState>
  nameWithType.vb: StateCombiner(Of TState)
- uid: Yoakke.SynKit.Automata.StateCombiner`1.DefaultSetCombiner
  name: DefaultSetCombiner
  href: api/Yoakke.SynKit.Automata.StateCombiner-1.html#Yoakke_SynKit_Automata_StateCombiner_1_DefaultSetCombiner
  commentId: P:Yoakke.SynKit.Automata.StateCombiner`1.DefaultSetCombiner
  fullName: Yoakke.SynKit.Automata.StateCombiner<TState>.DefaultSetCombiner
  fullName.vb: Yoakke.SynKit.Automata.StateCombiner(Of TState).DefaultSetCombiner
  nameWithType: StateCombiner<TState>.DefaultSetCombiner
  nameWithType.vb: StateCombiner(Of TState).DefaultSetCombiner
- uid: Yoakke.SynKit.Automata.StateCombiner`1.DefaultSetCombiner*
  name: DefaultSetCombiner
  href: api/Yoakke.SynKit.Automata.StateCombiner-1.html#Yoakke_SynKit_Automata_StateCombiner_1_DefaultSetCombiner_
  commentId: Overload:Yoakke.SynKit.Automata.StateCombiner`1.DefaultSetCombiner
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.StateCombiner<TState>.DefaultSetCombiner
  fullName.vb: Yoakke.SynKit.Automata.StateCombiner(Of TState).DefaultSetCombiner
  nameWithType: StateCombiner<TState>.DefaultSetCombiner
  nameWithType.vb: StateCombiner(Of TState).DefaultSetCombiner
- uid: Yoakke.SynKit.Automata.StateCombiner`1.DefaultToSetCombiner
  name: DefaultToSetCombiner
  href: api/Yoakke.SynKit.Automata.StateCombiner-1.html#Yoakke_SynKit_Automata_StateCombiner_1_DefaultToSetCombiner
  commentId: P:Yoakke.SynKit.Automata.StateCombiner`1.DefaultToSetCombiner
  fullName: Yoakke.SynKit.Automata.StateCombiner<TState>.DefaultToSetCombiner
  fullName.vb: Yoakke.SynKit.Automata.StateCombiner(Of TState).DefaultToSetCombiner
  nameWithType: StateCombiner<TState>.DefaultToSetCombiner
  nameWithType.vb: StateCombiner(Of TState).DefaultToSetCombiner
- uid: Yoakke.SynKit.Automata.StateCombiner`1.DefaultToSetCombiner*
  name: DefaultToSetCombiner
  href: api/Yoakke.SynKit.Automata.StateCombiner-1.html#Yoakke_SynKit_Automata_StateCombiner_1_DefaultToSetCombiner_
  commentId: Overload:Yoakke.SynKit.Automata.StateCombiner`1.DefaultToSetCombiner
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.StateCombiner<TState>.DefaultToSetCombiner
  fullName.vb: Yoakke.SynKit.Automata.StateCombiner(Of TState).DefaultToSetCombiner
  nameWithType: StateCombiner<TState>.DefaultToSetCombiner
  nameWithType.vb: StateCombiner(Of TState).DefaultToSetCombiner
- uid: Yoakke.SynKit.Automata.StateCombiner`1.SetCombiner(IEqualityComparer{`0})
  name: SetCombiner(IEqualityComparer<TState>)
  href: api/Yoakke.SynKit.Automata.StateCombiner-1.html#Yoakke_SynKit_Automata_StateCombiner_1_SetCombiner_IEqualityComparer__0__
  commentId: M:Yoakke.SynKit.Automata.StateCombiner`1.SetCombiner(IEqualityComparer{`0})
  name.vb: SetCombiner(IEqualityComparer(Of TState))
  fullName: Yoakke.SynKit.Automata.StateCombiner<TState>.SetCombiner(IEqualityComparer<TState>)
  fullName.vb: Yoakke.SynKit.Automata.StateCombiner(Of TState).SetCombiner(IEqualityComparer(Of TState))
  nameWithType: StateCombiner<TState>.SetCombiner(IEqualityComparer<TState>)
  nameWithType.vb: StateCombiner(Of TState).SetCombiner(IEqualityComparer(Of TState))
- uid: Yoakke.SynKit.Automata.StateCombiner`1.SetCombiner*
  name: SetCombiner
  href: api/Yoakke.SynKit.Automata.StateCombiner-1.html#Yoakke_SynKit_Automata_StateCombiner_1_SetCombiner_
  commentId: Overload:Yoakke.SynKit.Automata.StateCombiner`1.SetCombiner
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.StateCombiner<TState>.SetCombiner
  fullName.vb: Yoakke.SynKit.Automata.StateCombiner(Of TState).SetCombiner
  nameWithType: StateCombiner<TState>.SetCombiner
  nameWithType.vb: StateCombiner(Of TState).SetCombiner
- uid: Yoakke.SynKit.Automata.StateCombiner`1.ToSetCombiner(IEqualityComparer{`0})
  name: ToSetCombiner(IEqualityComparer<TState>)
  href: api/Yoakke.SynKit.Automata.StateCombiner-1.html#Yoakke_SynKit_Automata_StateCombiner_1_ToSetCombiner_IEqualityComparer__0__
  commentId: M:Yoakke.SynKit.Automata.StateCombiner`1.ToSetCombiner(IEqualityComparer{`0})
  name.vb: ToSetCombiner(IEqualityComparer(Of TState))
  fullName: Yoakke.SynKit.Automata.StateCombiner<TState>.ToSetCombiner(IEqualityComparer<TState>)
  fullName.vb: Yoakke.SynKit.Automata.StateCombiner(Of TState).ToSetCombiner(IEqualityComparer(Of TState))
  nameWithType: StateCombiner<TState>.ToSetCombiner(IEqualityComparer<TState>)
  nameWithType.vb: StateCombiner(Of TState).ToSetCombiner(IEqualityComparer(Of TState))
- uid: Yoakke.SynKit.Automata.StateCombiner`1.ToSetCombiner*
  name: ToSetCombiner
  href: api/Yoakke.SynKit.Automata.StateCombiner-1.html#Yoakke_SynKit_Automata_StateCombiner_1_ToSetCombiner_
  commentId: Overload:Yoakke.SynKit.Automata.StateCombiner`1.ToSetCombiner
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.StateCombiner<TState>.ToSetCombiner
  fullName.vb: Yoakke.SynKit.Automata.StateCombiner(Of TState).ToSetCombiner
  nameWithType: StateCombiner<TState>.ToSetCombiner
  nameWithType.vb: StateCombiner(Of TState).ToSetCombiner
- uid: Yoakke.SynKit.Automata.StateSet`1
  name: StateSet<TState>
  href: api/Yoakke.SynKit.Automata.StateSet-1.html
  commentId: T:Yoakke.SynKit.Automata.StateSet`1
  name.vb: StateSet(Of TState)
  fullName: Yoakke.SynKit.Automata.StateSet<TState>
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState)
  nameWithType: StateSet<TState>
  nameWithType.vb: StateSet(Of TState)
- uid: Yoakke.SynKit.Automata.StateSet`1.#ctor(`0,IEqualityComparer{`0})
  name: StateSet(TState, IEqualityComparer<TState>)
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1__ctor__0_IEqualityComparer__0__
  commentId: M:Yoakke.SynKit.Automata.StateSet`1.#ctor(`0,IEqualityComparer{`0})
  name.vb: StateSet(TState, IEqualityComparer(Of TState))
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.StateSet(TState, IEqualityComparer<TState>)
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).StateSet(TState, IEqualityComparer(Of TState))
  nameWithType: StateSet<TState>.StateSet(TState, IEqualityComparer<TState>)
  nameWithType.vb: StateSet(Of TState).StateSet(TState, IEqualityComparer(Of TState))
- uid: Yoakke.SynKit.Automata.StateSet`1.#ctor(IEnumerable{`0},IEqualityComparer{`0})
  name: StateSet(IEnumerable<TState>, IEqualityComparer<TState>)
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1__ctor_IEnumerable__0__IEqualityComparer__0__
  commentId: M:Yoakke.SynKit.Automata.StateSet`1.#ctor(IEnumerable{`0},IEqualityComparer{`0})
  name.vb: StateSet(IEnumerable(Of TState), IEqualityComparer(Of TState))
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.StateSet(IEnumerable<TState>, IEqualityComparer<TState>)
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).StateSet(IEnumerable(Of TState), IEqualityComparer(Of TState))
  nameWithType: StateSet<TState>.StateSet(IEnumerable<TState>, IEqualityComparer<TState>)
  nameWithType.vb: StateSet(Of TState).StateSet(IEnumerable(Of TState), IEqualityComparer(Of TState))
- uid: Yoakke.SynKit.Automata.StateSet`1.#ctor(IEqualityComparer{`0})
  name: StateSet(IEqualityComparer<TState>)
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1__ctor_IEqualityComparer__0__
  commentId: M:Yoakke.SynKit.Automata.StateSet`1.#ctor(IEqualityComparer{`0})
  name.vb: StateSet(IEqualityComparer(Of TState))
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.StateSet(IEqualityComparer<TState>)
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).StateSet(IEqualityComparer(Of TState))
  nameWithType: StateSet<TState>.StateSet(IEqualityComparer<TState>)
  nameWithType.vb: StateSet(Of TState).StateSet(IEqualityComparer(Of TState))
- uid: Yoakke.SynKit.Automata.StateSet`1.#ctor*
  name: StateSet
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1__ctor_
  commentId: Overload:Yoakke.SynKit.Automata.StateSet`1.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.StateSet
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).StateSet
  nameWithType: StateSet<TState>.StateSet
  nameWithType.vb: StateSet(Of TState).StateSet
- uid: Yoakke.SynKit.Automata.StateSet`1.Contains(`0)
  name: Contains(TState)
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_Contains__0_
  commentId: M:Yoakke.SynKit.Automata.StateSet`1.Contains(`0)
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.Contains(TState)
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).Contains(TState)
  nameWithType: StateSet<TState>.Contains(TState)
  nameWithType.vb: StateSet(Of TState).Contains(TState)
- uid: Yoakke.SynKit.Automata.StateSet`1.Contains*
  name: Contains
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_Contains_
  commentId: Overload:Yoakke.SynKit.Automata.StateSet`1.Contains
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.Contains
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).Contains
  nameWithType: StateSet<TState>.Contains
  nameWithType.vb: StateSet(Of TState).Contains
- uid: Yoakke.SynKit.Automata.StateSet`1.Count
  name: Count
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_Count
  commentId: P:Yoakke.SynKit.Automata.StateSet`1.Count
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.Count
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).Count
  nameWithType: StateSet<TState>.Count
  nameWithType.vb: StateSet(Of TState).Count
- uid: Yoakke.SynKit.Automata.StateSet`1.Count*
  name: Count
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_Count_
  commentId: Overload:Yoakke.SynKit.Automata.StateSet`1.Count
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.Count
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).Count
  nameWithType: StateSet<TState>.Count
  nameWithType.vb: StateSet(Of TState).Count
- uid: Yoakke.SynKit.Automata.StateSet`1.Equals(System.Object)
  name: Equals(Object)
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_Equals_System_Object_
  commentId: M:Yoakke.SynKit.Automata.StateSet`1.Equals(System.Object)
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.Equals(System.Object)
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).Equals(System.Object)
  nameWithType: StateSet<TState>.Equals(Object)
  nameWithType.vb: StateSet(Of TState).Equals(Object)
- uid: Yoakke.SynKit.Automata.StateSet`1.Equals(Yoakke.SynKit.Automata.StateSet{`0})
  name: Equals(StateSet<TState>)
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_Equals_Yoakke_SynKit_Automata_StateSet__0__
  commentId: M:Yoakke.SynKit.Automata.StateSet`1.Equals(Yoakke.SynKit.Automata.StateSet{`0})
  name.vb: Equals(StateSet(Of TState))
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.Equals(Yoakke.SynKit.Automata.StateSet<TState>)
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).Equals(Yoakke.SynKit.Automata.StateSet(Of TState))
  nameWithType: StateSet<TState>.Equals(StateSet<TState>)
  nameWithType.vb: StateSet(Of TState).Equals(StateSet(Of TState))
- uid: Yoakke.SynKit.Automata.StateSet`1.Equals*
  name: Equals
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_Equals_
  commentId: Overload:Yoakke.SynKit.Automata.StateSet`1.Equals
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.Equals
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).Equals
  nameWithType: StateSet<TState>.Equals
  nameWithType.vb: StateSet(Of TState).Equals
- uid: Yoakke.SynKit.Automata.StateSet`1.GetEnumerator
  name: GetEnumerator()
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_GetEnumerator
  commentId: M:Yoakke.SynKit.Automata.StateSet`1.GetEnumerator
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.GetEnumerator()
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).GetEnumerator()
  nameWithType: StateSet<TState>.GetEnumerator()
  nameWithType.vb: StateSet(Of TState).GetEnumerator()
- uid: Yoakke.SynKit.Automata.StateSet`1.GetEnumerator*
  name: GetEnumerator
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_GetEnumerator_
  commentId: Overload:Yoakke.SynKit.Automata.StateSet`1.GetEnumerator
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.GetEnumerator
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).GetEnumerator
  nameWithType: StateSet<TState>.GetEnumerator
  nameWithType.vb: StateSet(Of TState).GetEnumerator
- uid: Yoakke.SynKit.Automata.StateSet`1.GetHashCode
  name: GetHashCode()
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_GetHashCode
  commentId: M:Yoakke.SynKit.Automata.StateSet`1.GetHashCode
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.GetHashCode()
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).GetHashCode()
  nameWithType: StateSet<TState>.GetHashCode()
  nameWithType.vb: StateSet(Of TState).GetHashCode()
- uid: Yoakke.SynKit.Automata.StateSet`1.GetHashCode*
  name: GetHashCode
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_GetHashCode_
  commentId: Overload:Yoakke.SynKit.Automata.StateSet`1.GetHashCode
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.GetHashCode
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).GetHashCode
  nameWithType: StateSet<TState>.GetHashCode
  nameWithType.vb: StateSet(Of TState).GetHashCode
- uid: Yoakke.SynKit.Automata.StateSet`1.IsProperSubsetOf(IEnumerable{`0})
  name: IsProperSubsetOf(IEnumerable<TState>)
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_IsProperSubsetOf_IEnumerable__0__
  commentId: M:Yoakke.SynKit.Automata.StateSet`1.IsProperSubsetOf(IEnumerable{`0})
  name.vb: IsProperSubsetOf(IEnumerable(Of TState))
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.IsProperSubsetOf(IEnumerable<TState>)
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).IsProperSubsetOf(IEnumerable(Of TState))
  nameWithType: StateSet<TState>.IsProperSubsetOf(IEnumerable<TState>)
  nameWithType.vb: StateSet(Of TState).IsProperSubsetOf(IEnumerable(Of TState))
- uid: Yoakke.SynKit.Automata.StateSet`1.IsProperSubsetOf*
  name: IsProperSubsetOf
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_IsProperSubsetOf_
  commentId: Overload:Yoakke.SynKit.Automata.StateSet`1.IsProperSubsetOf
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.IsProperSubsetOf
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).IsProperSubsetOf
  nameWithType: StateSet<TState>.IsProperSubsetOf
  nameWithType.vb: StateSet(Of TState).IsProperSubsetOf
- uid: Yoakke.SynKit.Automata.StateSet`1.IsProperSupersetOf(IEnumerable{`0})
  name: IsProperSupersetOf(IEnumerable<TState>)
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_IsProperSupersetOf_IEnumerable__0__
  commentId: M:Yoakke.SynKit.Automata.StateSet`1.IsProperSupersetOf(IEnumerable{`0})
  name.vb: IsProperSupersetOf(IEnumerable(Of TState))
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.IsProperSupersetOf(IEnumerable<TState>)
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).IsProperSupersetOf(IEnumerable(Of TState))
  nameWithType: StateSet<TState>.IsProperSupersetOf(IEnumerable<TState>)
  nameWithType.vb: StateSet(Of TState).IsProperSupersetOf(IEnumerable(Of TState))
- uid: Yoakke.SynKit.Automata.StateSet`1.IsProperSupersetOf*
  name: IsProperSupersetOf
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_IsProperSupersetOf_
  commentId: Overload:Yoakke.SynKit.Automata.StateSet`1.IsProperSupersetOf
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.IsProperSupersetOf
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).IsProperSupersetOf
  nameWithType: StateSet<TState>.IsProperSupersetOf
  nameWithType.vb: StateSet(Of TState).IsProperSupersetOf
- uid: Yoakke.SynKit.Automata.StateSet`1.IsSubsetOf(IEnumerable{`0})
  name: IsSubsetOf(IEnumerable<TState>)
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_IsSubsetOf_IEnumerable__0__
  commentId: M:Yoakke.SynKit.Automata.StateSet`1.IsSubsetOf(IEnumerable{`0})
  name.vb: IsSubsetOf(IEnumerable(Of TState))
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.IsSubsetOf(IEnumerable<TState>)
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).IsSubsetOf(IEnumerable(Of TState))
  nameWithType: StateSet<TState>.IsSubsetOf(IEnumerable<TState>)
  nameWithType.vb: StateSet(Of TState).IsSubsetOf(IEnumerable(Of TState))
- uid: Yoakke.SynKit.Automata.StateSet`1.IsSubsetOf*
  name: IsSubsetOf
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_IsSubsetOf_
  commentId: Overload:Yoakke.SynKit.Automata.StateSet`1.IsSubsetOf
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.IsSubsetOf
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).IsSubsetOf
  nameWithType: StateSet<TState>.IsSubsetOf
  nameWithType.vb: StateSet(Of TState).IsSubsetOf
- uid: Yoakke.SynKit.Automata.StateSet`1.IsSupersetOf(IEnumerable{`0})
  name: IsSupersetOf(IEnumerable<TState>)
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_IsSupersetOf_IEnumerable__0__
  commentId: M:Yoakke.SynKit.Automata.StateSet`1.IsSupersetOf(IEnumerable{`0})
  name.vb: IsSupersetOf(IEnumerable(Of TState))
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.IsSupersetOf(IEnumerable<TState>)
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).IsSupersetOf(IEnumerable(Of TState))
  nameWithType: StateSet<TState>.IsSupersetOf(IEnumerable<TState>)
  nameWithType.vb: StateSet(Of TState).IsSupersetOf(IEnumerable(Of TState))
- uid: Yoakke.SynKit.Automata.StateSet`1.IsSupersetOf*
  name: IsSupersetOf
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_IsSupersetOf_
  commentId: Overload:Yoakke.SynKit.Automata.StateSet`1.IsSupersetOf
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.IsSupersetOf
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).IsSupersetOf
  nameWithType: StateSet<TState>.IsSupersetOf
  nameWithType.vb: StateSet(Of TState).IsSupersetOf
- uid: Yoakke.SynKit.Automata.StateSet`1.Overlaps(IEnumerable{`0})
  name: Overlaps(IEnumerable<TState>)
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_Overlaps_IEnumerable__0__
  commentId: M:Yoakke.SynKit.Automata.StateSet`1.Overlaps(IEnumerable{`0})
  name.vb: Overlaps(IEnumerable(Of TState))
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.Overlaps(IEnumerable<TState>)
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).Overlaps(IEnumerable(Of TState))
  nameWithType: StateSet<TState>.Overlaps(IEnumerable<TState>)
  nameWithType.vb: StateSet(Of TState).Overlaps(IEnumerable(Of TState))
- uid: Yoakke.SynKit.Automata.StateSet`1.Overlaps*
  name: Overlaps
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_Overlaps_
  commentId: Overload:Yoakke.SynKit.Automata.StateSet`1.Overlaps
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.Overlaps
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).Overlaps
  nameWithType: StateSet<TState>.Overlaps
  nameWithType.vb: StateSet(Of TState).Overlaps
- uid: Yoakke.SynKit.Automata.StateSet`1.SetEquals(IEnumerable{`0})
  name: SetEquals(IEnumerable<TState>)
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_SetEquals_IEnumerable__0__
  commentId: M:Yoakke.SynKit.Automata.StateSet`1.SetEquals(IEnumerable{`0})
  name.vb: SetEquals(IEnumerable(Of TState))
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.SetEquals(IEnumerable<TState>)
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).SetEquals(IEnumerable(Of TState))
  nameWithType: StateSet<TState>.SetEquals(IEnumerable<TState>)
  nameWithType.vb: StateSet(Of TState).SetEquals(IEnumerable(Of TState))
- uid: Yoakke.SynKit.Automata.StateSet`1.SetEquals*
  name: SetEquals
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_SetEquals_
  commentId: Overload:Yoakke.SynKit.Automata.StateSet`1.SetEquals
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.SetEquals
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).SetEquals
  nameWithType: StateSet<TState>.SetEquals
  nameWithType.vb: StateSet(Of TState).SetEquals
- uid: Yoakke.SynKit.Automata.StateSet`1.ToString
  name: ToString()
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_ToString
  commentId: M:Yoakke.SynKit.Automata.StateSet`1.ToString
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.ToString()
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).ToString()
  nameWithType: StateSet<TState>.ToString()
  nameWithType.vb: StateSet(Of TState).ToString()
- uid: Yoakke.SynKit.Automata.StateSet`1.ToString*
  name: ToString
  href: api/Yoakke.SynKit.Automata.StateSet-1.html#Yoakke_SynKit_Automata_StateSet_1_ToString_
  commentId: Overload:Yoakke.SynKit.Automata.StateSet`1.ToString
  isSpec: "True"
  fullName: Yoakke.SynKit.Automata.StateSet<TState>.ToString
  fullName.vb: Yoakke.SynKit.Automata.StateSet(Of TState).ToString
  nameWithType: StateSet<TState>.ToString
  nameWithType.vb: StateSet(Of TState).ToString
- uid: Yoakke.SynKit.C.Syntax
  name: Yoakke.SynKit.C.Syntax
  href: api/Yoakke.SynKit.C.Syntax.html
  commentId: N:Yoakke.SynKit.C.Syntax
  fullName: Yoakke.SynKit.C.Syntax
  nameWithType: Yoakke.SynKit.C.Syntax
- uid: Yoakke.SynKit.C.Syntax.CLexer
  name: CLexer
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html
  commentId: T:Yoakke.SynKit.C.Syntax.CLexer
  fullName: Yoakke.SynKit.C.Syntax.CLexer
  nameWithType: CLexer
- uid: Yoakke.SynKit.C.Syntax.CLexer.#ctor(ISourceFile)
  name: CLexer(ISourceFile)
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer__ctor_ISourceFile_
  commentId: M:Yoakke.SynKit.C.Syntax.CLexer.#ctor(ISourceFile)
  fullName: Yoakke.SynKit.C.Syntax.CLexer.CLexer(ISourceFile)
  nameWithType: CLexer.CLexer(ISourceFile)
- uid: Yoakke.SynKit.C.Syntax.CLexer.#ctor(SourceFile)
  name: CLexer(SourceFile)
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer__ctor_SourceFile_
  commentId: M:Yoakke.SynKit.C.Syntax.CLexer.#ctor(SourceFile)
  fullName: Yoakke.SynKit.C.Syntax.CLexer.CLexer(SourceFile)
  nameWithType: CLexer.CLexer(SourceFile)
- uid: Yoakke.SynKit.C.Syntax.CLexer.#ctor(System.String)
  name: CLexer(String)
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer__ctor_System_String_
  commentId: M:Yoakke.SynKit.C.Syntax.CLexer.#ctor(System.String)
  fullName: Yoakke.SynKit.C.Syntax.CLexer.CLexer(System.String)
  nameWithType: CLexer.CLexer(String)
- uid: Yoakke.SynKit.C.Syntax.CLexer.#ctor(System.String,System.String)
  name: CLexer(String, String)
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer__ctor_System_String_System_String_
  commentId: M:Yoakke.SynKit.C.Syntax.CLexer.#ctor(System.String,System.String)
  fullName: Yoakke.SynKit.C.Syntax.CLexer.CLexer(System.String, System.String)
  nameWithType: CLexer.CLexer(String, String)
- uid: Yoakke.SynKit.C.Syntax.CLexer.#ctor(TextReader)
  name: CLexer(TextReader)
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer__ctor_TextReader_
  commentId: M:Yoakke.SynKit.C.Syntax.CLexer.#ctor(TextReader)
  fullName: Yoakke.SynKit.C.Syntax.CLexer.CLexer(TextReader)
  nameWithType: CLexer.CLexer(TextReader)
- uid: Yoakke.SynKit.C.Syntax.CLexer.#ctor(Yoakke.SynKit.Lexer.ICharStream)
  name: CLexer(ICharStream)
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer__ctor_Yoakke_SynKit_Lexer_ICharStream_
  commentId: M:Yoakke.SynKit.C.Syntax.CLexer.#ctor(Yoakke.SynKit.Lexer.ICharStream)
  fullName: Yoakke.SynKit.C.Syntax.CLexer.CLexer(Yoakke.SynKit.Lexer.ICharStream)
  nameWithType: CLexer.CLexer(ICharStream)
- uid: Yoakke.SynKit.C.Syntax.CLexer.#ctor*
  name: CLexer
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer__ctor_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CLexer.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CLexer.CLexer
  nameWithType: CLexer.CLexer
- uid: Yoakke.SynKit.C.Syntax.CLexer.AllowDigraphs
  name: AllowDigraphs
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer_AllowDigraphs
  commentId: P:Yoakke.SynKit.C.Syntax.CLexer.AllowDigraphs
  fullName: Yoakke.SynKit.C.Syntax.CLexer.AllowDigraphs
  nameWithType: CLexer.AllowDigraphs
- uid: Yoakke.SynKit.C.Syntax.CLexer.AllowDigraphs*
  name: AllowDigraphs
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer_AllowDigraphs_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CLexer.AllowDigraphs
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CLexer.AllowDigraphs
  nameWithType: CLexer.AllowDigraphs
- uid: Yoakke.SynKit.C.Syntax.CLexer.AllowLineContinuations
  name: AllowLineContinuations
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer_AllowLineContinuations
  commentId: P:Yoakke.SynKit.C.Syntax.CLexer.AllowLineContinuations
  fullName: Yoakke.SynKit.C.Syntax.CLexer.AllowLineContinuations
  nameWithType: CLexer.AllowLineContinuations
- uid: Yoakke.SynKit.C.Syntax.CLexer.AllowLineContinuations*
  name: AllowLineContinuations
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer_AllowLineContinuations_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CLexer.AllowLineContinuations
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CLexer.AllowLineContinuations
  nameWithType: CLexer.AllowLineContinuations
- uid: Yoakke.SynKit.C.Syntax.CLexer.AllowTrigraphs
  name: AllowTrigraphs
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer_AllowTrigraphs
  commentId: P:Yoakke.SynKit.C.Syntax.CLexer.AllowTrigraphs
  fullName: Yoakke.SynKit.C.Syntax.CLexer.AllowTrigraphs
  nameWithType: CLexer.AllowTrigraphs
- uid: Yoakke.SynKit.C.Syntax.CLexer.AllowTrigraphs*
  name: AllowTrigraphs
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer_AllowTrigraphs_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CLexer.AllowTrigraphs
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CLexer.AllowTrigraphs
  nameWithType: CLexer.AllowTrigraphs
- uid: Yoakke.SynKit.C.Syntax.CLexer.AllowUnicodeCharacters
  name: AllowUnicodeCharacters
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer_AllowUnicodeCharacters
  commentId: P:Yoakke.SynKit.C.Syntax.CLexer.AllowUnicodeCharacters
  fullName: Yoakke.SynKit.C.Syntax.CLexer.AllowUnicodeCharacters
  nameWithType: CLexer.AllowUnicodeCharacters
- uid: Yoakke.SynKit.C.Syntax.CLexer.AllowUnicodeCharacters*
  name: AllowUnicodeCharacters
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer_AllowUnicodeCharacters_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CLexer.AllowUnicodeCharacters
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CLexer.AllowUnicodeCharacters
  nameWithType: CLexer.AllowUnicodeCharacters
- uid: Yoakke.SynKit.C.Syntax.CLexer.IsEnd
  name: IsEnd
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer_IsEnd
  commentId: P:Yoakke.SynKit.C.Syntax.CLexer.IsEnd
  fullName: Yoakke.SynKit.C.Syntax.CLexer.IsEnd
  nameWithType: CLexer.IsEnd
- uid: Yoakke.SynKit.C.Syntax.CLexer.IsEnd*
  name: IsEnd
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer_IsEnd_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CLexer.IsEnd
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CLexer.IsEnd
  nameWithType: CLexer.IsEnd
- uid: Yoakke.SynKit.C.Syntax.CLexer.LogicalPosition
  name: LogicalPosition
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer_LogicalPosition
  commentId: P:Yoakke.SynKit.C.Syntax.CLexer.LogicalPosition
  fullName: Yoakke.SynKit.C.Syntax.CLexer.LogicalPosition
  nameWithType: CLexer.LogicalPosition
- uid: Yoakke.SynKit.C.Syntax.CLexer.LogicalPosition*
  name: LogicalPosition
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer_LogicalPosition_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CLexer.LogicalPosition
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CLexer.LogicalPosition
  nameWithType: CLexer.LogicalPosition
- uid: Yoakke.SynKit.C.Syntax.CLexer.Next
  name: Next()
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer_Next
  commentId: M:Yoakke.SynKit.C.Syntax.CLexer.Next
  fullName: Yoakke.SynKit.C.Syntax.CLexer.Next()
  nameWithType: CLexer.Next()
- uid: Yoakke.SynKit.C.Syntax.CLexer.Next*
  name: Next
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer_Next_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CLexer.Next
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CLexer.Next
  nameWithType: CLexer.Next
- uid: Yoakke.SynKit.C.Syntax.CLexer.Position
  name: Position
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer_Position
  commentId: P:Yoakke.SynKit.C.Syntax.CLexer.Position
  fullName: Yoakke.SynKit.C.Syntax.CLexer.Position
  nameWithType: CLexer.Position
- uid: Yoakke.SynKit.C.Syntax.CLexer.Position*
  name: Position
  href: api/Yoakke.SynKit.C.Syntax.CLexer.html#Yoakke_SynKit_C_Syntax_CLexer_Position_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CLexer.Position
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CLexer.Position
  nameWithType: CLexer.Position
- uid: Yoakke.SynKit.C.Syntax.CPreProcessor
  name: CPreProcessor
  href: api/Yoakke.SynKit.C.Syntax.CPreProcessor.html
  commentId: T:Yoakke.SynKit.C.Syntax.CPreProcessor
  fullName: Yoakke.SynKit.C.Syntax.CPreProcessor
  nameWithType: CPreProcessor
- uid: Yoakke.SynKit.C.Syntax.CPreProcessor.#ctor(Yoakke.SynKit.Lexer.ILexer{Yoakke.SynKit.C.Syntax.CToken})
  name: CPreProcessor(ILexer<CToken>)
  href: api/Yoakke.SynKit.C.Syntax.CPreProcessor.html#Yoakke_SynKit_C_Syntax_CPreProcessor__ctor_Yoakke_SynKit_Lexer_ILexer_Yoakke_SynKit_C_Syntax_CToken__
  commentId: M:Yoakke.SynKit.C.Syntax.CPreProcessor.#ctor(Yoakke.SynKit.Lexer.ILexer{Yoakke.SynKit.C.Syntax.CToken})
  name.vb: CPreProcessor(ILexer(Of CToken))
  fullName: Yoakke.SynKit.C.Syntax.CPreProcessor.CPreProcessor(Yoakke.SynKit.Lexer.ILexer<Yoakke.SynKit.C.Syntax.CToken>)
  fullName.vb: Yoakke.SynKit.C.Syntax.CPreProcessor.CPreProcessor(Yoakke.SynKit.Lexer.ILexer(Of Yoakke.SynKit.C.Syntax.CToken))
  nameWithType: CPreProcessor.CPreProcessor(ILexer<CToken>)
  nameWithType.vb: CPreProcessor.CPreProcessor(ILexer(Of CToken))
- uid: Yoakke.SynKit.C.Syntax.CPreProcessor.#ctor*
  name: CPreProcessor
  href: api/Yoakke.SynKit.C.Syntax.CPreProcessor.html#Yoakke_SynKit_C_Syntax_CPreProcessor__ctor_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CPreProcessor.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CPreProcessor.CPreProcessor
  nameWithType: CPreProcessor.CPreProcessor
- uid: Yoakke.SynKit.C.Syntax.CPreProcessor.AllowDirectives
  name: AllowDirectives
  href: api/Yoakke.SynKit.C.Syntax.CPreProcessor.html#Yoakke_SynKit_C_Syntax_CPreProcessor_AllowDirectives
  commentId: P:Yoakke.SynKit.C.Syntax.CPreProcessor.AllowDirectives
  fullName: Yoakke.SynKit.C.Syntax.CPreProcessor.AllowDirectives
  nameWithType: CPreProcessor.AllowDirectives
- uid: Yoakke.SynKit.C.Syntax.CPreProcessor.AllowDirectives*
  name: AllowDirectives
  href: api/Yoakke.SynKit.C.Syntax.CPreProcessor.html#Yoakke_SynKit_C_Syntax_CPreProcessor_AllowDirectives_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CPreProcessor.AllowDirectives
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CPreProcessor.AllowDirectives
  nameWithType: CPreProcessor.AllowDirectives
- uid: Yoakke.SynKit.C.Syntax.CPreProcessor.AllowMacroExpansions
  name: AllowMacroExpansions
  href: api/Yoakke.SynKit.C.Syntax.CPreProcessor.html#Yoakke_SynKit_C_Syntax_CPreProcessor_AllowMacroExpansions
  commentId: P:Yoakke.SynKit.C.Syntax.CPreProcessor.AllowMacroExpansions
  fullName: Yoakke.SynKit.C.Syntax.CPreProcessor.AllowMacroExpansions
  nameWithType: CPreProcessor.AllowMacroExpansions
- uid: Yoakke.SynKit.C.Syntax.CPreProcessor.AllowMacroExpansions*
  name: AllowMacroExpansions
  href: api/Yoakke.SynKit.C.Syntax.CPreProcessor.html#Yoakke_SynKit_C_Syntax_CPreProcessor_AllowMacroExpansions_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CPreProcessor.AllowMacroExpansions
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CPreProcessor.AllowMacroExpansions
  nameWithType: CPreProcessor.AllowMacroExpansions
- uid: Yoakke.SynKit.C.Syntax.CPreProcessor.Define(Yoakke.SynKit.C.Syntax.IMacro)
  name: Define(IMacro)
  href: api/Yoakke.SynKit.C.Syntax.CPreProcessor.html#Yoakke_SynKit_C_Syntax_CPreProcessor_Define_Yoakke_SynKit_C_Syntax_IMacro_
  commentId: M:Yoakke.SynKit.C.Syntax.CPreProcessor.Define(Yoakke.SynKit.C.Syntax.IMacro)
  fullName: Yoakke.SynKit.C.Syntax.CPreProcessor.Define(Yoakke.SynKit.C.Syntax.IMacro)
  nameWithType: CPreProcessor.Define(IMacro)
- uid: Yoakke.SynKit.C.Syntax.CPreProcessor.Define*
  name: Define
  href: api/Yoakke.SynKit.C.Syntax.CPreProcessor.html#Yoakke_SynKit_C_Syntax_CPreProcessor_Define_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CPreProcessor.Define
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CPreProcessor.Define
  nameWithType: CPreProcessor.Define
- uid: Yoakke.SynKit.C.Syntax.CPreProcessor.Expand(IEnumerable{Yoakke.SynKit.C.Syntax.CToken})
  name: Expand(IEnumerable<CToken>)
  href: api/Yoakke.SynKit.C.Syntax.CPreProcessor.html#Yoakke_SynKit_C_Syntax_CPreProcessor_Expand_IEnumerable_Yoakke_SynKit_C_Syntax_CToken__
  commentId: M:Yoakke.SynKit.C.Syntax.CPreProcessor.Expand(IEnumerable{Yoakke.SynKit.C.Syntax.CToken})
  name.vb: Expand(IEnumerable(Of CToken))
  fullName: Yoakke.SynKit.C.Syntax.CPreProcessor.Expand(IEnumerable<Yoakke.SynKit.C.Syntax.CToken>)
  fullName.vb: Yoakke.SynKit.C.Syntax.CPreProcessor.Expand(IEnumerable(Of Yoakke.SynKit.C.Syntax.CToken))
  nameWithType: CPreProcessor.Expand(IEnumerable<CToken>)
  nameWithType.vb: CPreProcessor.Expand(IEnumerable(Of CToken))
- uid: Yoakke.SynKit.C.Syntax.CPreProcessor.Expand*
  name: Expand
  href: api/Yoakke.SynKit.C.Syntax.CPreProcessor.html#Yoakke_SynKit_C_Syntax_CPreProcessor_Expand_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CPreProcessor.Expand
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CPreProcessor.Expand
  nameWithType: CPreProcessor.Expand
- uid: Yoakke.SynKit.C.Syntax.CPreProcessor.IsDefined(System.String)
  name: IsDefined(String)
  href: api/Yoakke.SynKit.C.Syntax.CPreProcessor.html#Yoakke_SynKit_C_Syntax_CPreProcessor_IsDefined_System_String_
  commentId: M:Yoakke.SynKit.C.Syntax.CPreProcessor.IsDefined(System.String)
  fullName: Yoakke.SynKit.C.Syntax.CPreProcessor.IsDefined(System.String)
  nameWithType: CPreProcessor.IsDefined(String)
- uid: Yoakke.SynKit.C.Syntax.CPreProcessor.IsDefined*
  name: IsDefined
  href: api/Yoakke.SynKit.C.Syntax.CPreProcessor.html#Yoakke_SynKit_C_Syntax_CPreProcessor_IsDefined_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CPreProcessor.IsDefined
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CPreProcessor.IsDefined
  nameWithType: CPreProcessor.IsDefined
- uid: Yoakke.SynKit.C.Syntax.CPreProcessor.Macros
  name: Macros
  href: api/Yoakke.SynKit.C.Syntax.CPreProcessor.html#Yoakke_SynKit_C_Syntax_CPreProcessor_Macros
  commentId: P:Yoakke.SynKit.C.Syntax.CPreProcessor.Macros
  fullName: Yoakke.SynKit.C.Syntax.CPreProcessor.Macros
  nameWithType: CPreProcessor.Macros
- uid: Yoakke.SynKit.C.Syntax.CPreProcessor.Macros*
  name: Macros
  href: api/Yoakke.SynKit.C.Syntax.CPreProcessor.html#Yoakke_SynKit_C_Syntax_CPreProcessor_Macros_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CPreProcessor.Macros
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CPreProcessor.Macros
  nameWithType: CPreProcessor.Macros
- uid: Yoakke.SynKit.C.Syntax.CPreProcessor.Next
  name: Next()
  href: api/Yoakke.SynKit.C.Syntax.CPreProcessor.html#Yoakke_SynKit_C_Syntax_CPreProcessor_Next
  commentId: M:Yoakke.SynKit.C.Syntax.CPreProcessor.Next
  fullName: Yoakke.SynKit.C.Syntax.CPreProcessor.Next()
  nameWithType: CPreProcessor.Next()
- uid: Yoakke.SynKit.C.Syntax.CPreProcessor.Next*
  name: Next
  href: api/Yoakke.SynKit.C.Syntax.CPreProcessor.html#Yoakke_SynKit_C_Syntax_CPreProcessor_Next_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CPreProcessor.Next
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CPreProcessor.Next
  nameWithType: CPreProcessor.Next
- uid: Yoakke.SynKit.C.Syntax.CPreProcessor.Undefine(System.String)
  name: Undefine(String)
  href: api/Yoakke.SynKit.C.Syntax.CPreProcessor.html#Yoakke_SynKit_C_Syntax_CPreProcessor_Undefine_System_String_
  commentId: M:Yoakke.SynKit.C.Syntax.CPreProcessor.Undefine(System.String)
  fullName: Yoakke.SynKit.C.Syntax.CPreProcessor.Undefine(System.String)
  nameWithType: CPreProcessor.Undefine(String)
- uid: Yoakke.SynKit.C.Syntax.CPreProcessor.Undefine*
  name: Undefine
  href: api/Yoakke.SynKit.C.Syntax.CPreProcessor.html#Yoakke_SynKit_C_Syntax_CPreProcessor_Undefine_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CPreProcessor.Undefine
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CPreProcessor.Undefine
  nameWithType: CPreProcessor.Undefine
- uid: Yoakke.SynKit.C.Syntax.CToken
  name: CToken
  href: api/Yoakke.SynKit.C.Syntax.CToken.html
  commentId: T:Yoakke.SynKit.C.Syntax.CToken
  fullName: Yoakke.SynKit.C.Syntax.CToken
  nameWithType: CToken
- uid: Yoakke.SynKit.C.Syntax.CToken.#ctor(Text.Location,System.String,Text.Range,System.String,Yoakke.SynKit.C.Syntax.CTokenType)
  name: CToken(Text.Location, String, Text.Range, String, CTokenType)
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken__ctor_Text_Location_System_String_Text_Range_System_String_Yoakke_SynKit_C_Syntax_CTokenType_
  commentId: M:Yoakke.SynKit.C.Syntax.CToken.#ctor(Text.Location,System.String,Text.Range,System.String,Yoakke.SynKit.C.Syntax.CTokenType)
  fullName: Yoakke.SynKit.C.Syntax.CToken.CToken(Text.Location, System.String, Text.Range, System.String, Yoakke.SynKit.C.Syntax.CTokenType)
  nameWithType: CToken.CToken(Text.Location, String, Text.Range, String, CTokenType)
- uid: Yoakke.SynKit.C.Syntax.CToken.#ctor(Text.Location,System.String,Text.Range,System.String,Yoakke.SynKit.C.Syntax.CTokenType,Yoakke.SynKit.C.Syntax.CToken)
  name: CToken(Text.Location, String, Text.Range, String, CTokenType, CToken)
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken__ctor_Text_Location_System_String_Text_Range_System_String_Yoakke_SynKit_C_Syntax_CTokenType_Yoakke_SynKit_C_Syntax_CToken_
  commentId: M:Yoakke.SynKit.C.Syntax.CToken.#ctor(Text.Location,System.String,Text.Range,System.String,Yoakke.SynKit.C.Syntax.CTokenType,Yoakke.SynKit.C.Syntax.CToken)
  fullName: Yoakke.SynKit.C.Syntax.CToken.CToken(Text.Location, System.String, Text.Range, System.String, Yoakke.SynKit.C.Syntax.CTokenType, Yoakke.SynKit.C.Syntax.CToken)
  nameWithType: CToken.CToken(Text.Location, String, Text.Range, String, CTokenType, CToken)
- uid: Yoakke.SynKit.C.Syntax.CToken.#ctor*
  name: CToken
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken__ctor_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CToken.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CToken.CToken
  nameWithType: CToken.CToken
- uid: Yoakke.SynKit.C.Syntax.CToken.Equals(System.Nullable{System.Object})
  name: Equals(Nullable<Object>)
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken_Equals_System_Nullable_System_Object__
  commentId: M:Yoakke.SynKit.C.Syntax.CToken.Equals(System.Nullable{System.Object})
  name.vb: Equals(Nullable(Of Object))
  fullName: Yoakke.SynKit.C.Syntax.CToken.Equals(System.Nullable<System.Object>)
  fullName.vb: Yoakke.SynKit.C.Syntax.CToken.Equals(System.Nullable(Of System.Object))
  nameWithType: CToken.Equals(Nullable<Object>)
  nameWithType.vb: CToken.Equals(Nullable(Of Object))
- uid: Yoakke.SynKit.C.Syntax.CToken.Equals(Yoakke.SynKit.C.Syntax.CToken)
  name: Equals(CToken)
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken_Equals_Yoakke_SynKit_C_Syntax_CToken_
  commentId: M:Yoakke.SynKit.C.Syntax.CToken.Equals(Yoakke.SynKit.C.Syntax.CToken)
  fullName: Yoakke.SynKit.C.Syntax.CToken.Equals(Yoakke.SynKit.C.Syntax.CToken)
  nameWithType: CToken.Equals(CToken)
- uid: Yoakke.SynKit.C.Syntax.CToken.Equals(Yoakke.SynKit.Lexer.IToken)
  name: Equals(IToken)
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken_Equals_Yoakke_SynKit_Lexer_IToken_
  commentId: M:Yoakke.SynKit.C.Syntax.CToken.Equals(Yoakke.SynKit.Lexer.IToken)
  fullName: Yoakke.SynKit.C.Syntax.CToken.Equals(Yoakke.SynKit.Lexer.IToken)
  nameWithType: CToken.Equals(IToken)
- uid: Yoakke.SynKit.C.Syntax.CToken.Equals(Yoakke.SynKit.Lexer.IToken{Yoakke.SynKit.C.Syntax.CTokenType})
  name: Equals(IToken<CTokenType>)
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken_Equals_Yoakke_SynKit_Lexer_IToken_Yoakke_SynKit_C_Syntax_CTokenType__
  commentId: M:Yoakke.SynKit.C.Syntax.CToken.Equals(Yoakke.SynKit.Lexer.IToken{Yoakke.SynKit.C.Syntax.CTokenType})
  name.vb: Equals(IToken(Of CTokenType))
  fullName: Yoakke.SynKit.C.Syntax.CToken.Equals(Yoakke.SynKit.Lexer.IToken<Yoakke.SynKit.C.Syntax.CTokenType>)
  fullName.vb: Yoakke.SynKit.C.Syntax.CToken.Equals(Yoakke.SynKit.Lexer.IToken(Of Yoakke.SynKit.C.Syntax.CTokenType))
  nameWithType: CToken.Equals(IToken<CTokenType>)
  nameWithType.vb: CToken.Equals(IToken(Of CTokenType))
- uid: Yoakke.SynKit.C.Syntax.CToken.Equals*
  name: Equals
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken_Equals_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CToken.Equals
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CToken.Equals
  nameWithType: CToken.Equals
- uid: Yoakke.SynKit.C.Syntax.CToken.ExpandedFrom
  name: ExpandedFrom
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken_ExpandedFrom
  commentId: P:Yoakke.SynKit.C.Syntax.CToken.ExpandedFrom
  fullName: Yoakke.SynKit.C.Syntax.CToken.ExpandedFrom
  nameWithType: CToken.ExpandedFrom
- uid: Yoakke.SynKit.C.Syntax.CToken.ExpandedFrom*
  name: ExpandedFrom
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken_ExpandedFrom_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CToken.ExpandedFrom
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CToken.ExpandedFrom
  nameWithType: CToken.ExpandedFrom
- uid: Yoakke.SynKit.C.Syntax.CToken.GetHashCode
  name: GetHashCode()
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken_GetHashCode
  commentId: M:Yoakke.SynKit.C.Syntax.CToken.GetHashCode
  fullName: Yoakke.SynKit.C.Syntax.CToken.GetHashCode()
  nameWithType: CToken.GetHashCode()
- uid: Yoakke.SynKit.C.Syntax.CToken.GetHashCode*
  name: GetHashCode
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken_GetHashCode_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CToken.GetHashCode
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CToken.GetHashCode
  nameWithType: CToken.GetHashCode
- uid: Yoakke.SynKit.C.Syntax.CToken.Kind
  name: Kind
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken_Kind
  commentId: P:Yoakke.SynKit.C.Syntax.CToken.Kind
  fullName: Yoakke.SynKit.C.Syntax.CToken.Kind
  nameWithType: CToken.Kind
- uid: Yoakke.SynKit.C.Syntax.CToken.Kind*
  name: Kind
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken_Kind_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CToken.Kind
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CToken.Kind
  nameWithType: CToken.Kind
- uid: Yoakke.SynKit.C.Syntax.CToken.Location
  name: Location
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken_Location
  commentId: P:Yoakke.SynKit.C.Syntax.CToken.Location
  fullName: Yoakke.SynKit.C.Syntax.CToken.Location
  nameWithType: CToken.Location
- uid: Yoakke.SynKit.C.Syntax.CToken.Location*
  name: Location
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken_Location_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CToken.Location
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CToken.Location
  nameWithType: CToken.Location
- uid: Yoakke.SynKit.C.Syntax.CToken.LogicalRange
  name: LogicalRange
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken_LogicalRange
  commentId: P:Yoakke.SynKit.C.Syntax.CToken.LogicalRange
  fullName: Yoakke.SynKit.C.Syntax.CToken.LogicalRange
  nameWithType: CToken.LogicalRange
- uid: Yoakke.SynKit.C.Syntax.CToken.LogicalRange*
  name: LogicalRange
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken_LogicalRange_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CToken.LogicalRange
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CToken.LogicalRange
  nameWithType: CToken.LogicalRange
- uid: Yoakke.SynKit.C.Syntax.CToken.LogicalText
  name: LogicalText
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken_LogicalText
  commentId: P:Yoakke.SynKit.C.Syntax.CToken.LogicalText
  fullName: Yoakke.SynKit.C.Syntax.CToken.LogicalText
  nameWithType: CToken.LogicalText
- uid: Yoakke.SynKit.C.Syntax.CToken.LogicalText*
  name: LogicalText
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken_LogicalText_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CToken.LogicalText
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CToken.LogicalText
  nameWithType: CToken.LogicalText
- uid: Yoakke.SynKit.C.Syntax.CToken.Range
  name: Range
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken_Range
  commentId: P:Yoakke.SynKit.C.Syntax.CToken.Range
  fullName: Yoakke.SynKit.C.Syntax.CToken.Range
  nameWithType: CToken.Range
- uid: Yoakke.SynKit.C.Syntax.CToken.Range*
  name: Range
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken_Range_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CToken.Range
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CToken.Range
  nameWithType: CToken.Range
- uid: Yoakke.SynKit.C.Syntax.CToken.Text
  name: Text
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken_Text
  commentId: P:Yoakke.SynKit.C.Syntax.CToken.Text
  fullName: Yoakke.SynKit.C.Syntax.CToken.Text
  nameWithType: CToken.Text
- uid: Yoakke.SynKit.C.Syntax.CToken.Text*
  name: Text
  href: api/Yoakke.SynKit.C.Syntax.CToken.html#Yoakke_SynKit_C_Syntax_CToken_Text_
  commentId: Overload:Yoakke.SynKit.C.Syntax.CToken.Text
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.CToken.Text
  nameWithType: CToken.Text
- uid: Yoakke.SynKit.C.Syntax.CTokenType
  name: CTokenType
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html
  commentId: T:Yoakke.SynKit.C.Syntax.CTokenType
  fullName: Yoakke.SynKit.C.Syntax.CTokenType
  nameWithType: CTokenType
- uid: Yoakke.SynKit.C.Syntax.CTokenType.Add
  name: Add
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_Add
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.Add
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.Add
  nameWithType: CTokenType.Add
- uid: Yoakke.SynKit.C.Syntax.CTokenType.AddAssign
  name: AddAssign
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_AddAssign
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.AddAssign
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.AddAssign
  nameWithType: CTokenType.AddAssign
- uid: Yoakke.SynKit.C.Syntax.CTokenType.Arrow
  name: Arrow
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_Arrow
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.Arrow
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.Arrow
  nameWithType: CTokenType.Arrow
- uid: Yoakke.SynKit.C.Syntax.CTokenType.Assign
  name: Assign
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_Assign
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.Assign
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.Assign
  nameWithType: CTokenType.Assign
- uid: Yoakke.SynKit.C.Syntax.CTokenType.BitAnd
  name: BitAnd
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_BitAnd
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.BitAnd
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.BitAnd
  nameWithType: CTokenType.BitAnd
- uid: Yoakke.SynKit.C.Syntax.CTokenType.BitAndAssign
  name: BitAndAssign
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_BitAndAssign
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.BitAndAssign
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.BitAndAssign
  nameWithType: CTokenType.BitAndAssign
- uid: Yoakke.SynKit.C.Syntax.CTokenType.BitNot
  name: BitNot
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_BitNot
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.BitNot
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.BitNot
  nameWithType: CTokenType.BitNot
- uid: Yoakke.SynKit.C.Syntax.CTokenType.BitOr
  name: BitOr
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_BitOr
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.BitOr
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.BitOr
  nameWithType: CTokenType.BitOr
- uid: Yoakke.SynKit.C.Syntax.CTokenType.BitOrAssign
  name: BitOrAssign
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_BitOrAssign
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.BitOrAssign
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.BitOrAssign
  nameWithType: CTokenType.BitOrAssign
- uid: Yoakke.SynKit.C.Syntax.CTokenType.BitXor
  name: BitXor
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_BitXor
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.BitXor
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.BitXor
  nameWithType: CTokenType.BitXor
- uid: Yoakke.SynKit.C.Syntax.CTokenType.BitXorAssign
  name: BitXorAssign
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_BitXorAssign
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.BitXorAssign
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.BitXorAssign
  nameWithType: CTokenType.BitXorAssign
- uid: Yoakke.SynKit.C.Syntax.CTokenType.CharLiteral
  name: CharLiteral
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_CharLiteral
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.CharLiteral
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.CharLiteral
  nameWithType: CTokenType.CharLiteral
- uid: Yoakke.SynKit.C.Syntax.CTokenType.CloseBrace
  name: CloseBrace
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_CloseBrace
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.CloseBrace
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.CloseBrace
  nameWithType: CTokenType.CloseBrace
- uid: Yoakke.SynKit.C.Syntax.CTokenType.CloseBracket
  name: CloseBracket
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_CloseBracket
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.CloseBracket
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.CloseBracket
  nameWithType: CTokenType.CloseBracket
- uid: Yoakke.SynKit.C.Syntax.CTokenType.CloseParen
  name: CloseParen
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_CloseParen
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.CloseParen
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.CloseParen
  nameWithType: CTokenType.CloseParen
- uid: Yoakke.SynKit.C.Syntax.CTokenType.Colon
  name: Colon
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_Colon
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.Colon
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.Colon
  nameWithType: CTokenType.Colon
- uid: Yoakke.SynKit.C.Syntax.CTokenType.Comma
  name: Comma
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_Comma
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.Comma
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.Comma
  nameWithType: CTokenType.Comma
- uid: Yoakke.SynKit.C.Syntax.CTokenType.Decrement
  name: Decrement
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_Decrement
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.Decrement
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.Decrement
  nameWithType: CTokenType.Decrement
- uid: Yoakke.SynKit.C.Syntax.CTokenType.Divide
  name: Divide
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_Divide
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.Divide
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.Divide
  nameWithType: CTokenType.Divide
- uid: Yoakke.SynKit.C.Syntax.CTokenType.DivideAssign
  name: DivideAssign
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_DivideAssign
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.DivideAssign
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.DivideAssign
  nameWithType: CTokenType.DivideAssign
- uid: Yoakke.SynKit.C.Syntax.CTokenType.Dot
  name: Dot
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_Dot
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.Dot
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.Dot
  nameWithType: CTokenType.Dot
- uid: Yoakke.SynKit.C.Syntax.CTokenType.Ellipsis
  name: Ellipsis
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_Ellipsis
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.Ellipsis
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.Ellipsis
  nameWithType: CTokenType.Ellipsis
- uid: Yoakke.SynKit.C.Syntax.CTokenType.End
  name: End
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_End
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.End
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.End
  nameWithType: CTokenType.End
- uid: Yoakke.SynKit.C.Syntax.CTokenType.Equal
  name: Equal
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_Equal
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.Equal
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.Equal
  nameWithType: CTokenType.Equal
- uid: Yoakke.SynKit.C.Syntax.CTokenType.FloatLiteral
  name: FloatLiteral
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_FloatLiteral
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.FloatLiteral
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.FloatLiteral
  nameWithType: CTokenType.FloatLiteral
- uid: Yoakke.SynKit.C.Syntax.CTokenType.Greater
  name: Greater
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_Greater
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.Greater
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.Greater
  nameWithType: CTokenType.Greater
- uid: Yoakke.SynKit.C.Syntax.CTokenType.GreaterEqual
  name: GreaterEqual
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_GreaterEqual
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.GreaterEqual
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.GreaterEqual
  nameWithType: CTokenType.GreaterEqual
- uid: Yoakke.SynKit.C.Syntax.CTokenType.Hash
  name: Hash
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_Hash
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.Hash
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.Hash
  nameWithType: CTokenType.Hash
- uid: Yoakke.SynKit.C.Syntax.CTokenType.HashHash
  name: HashHash
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_HashHash
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.HashHash
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.HashHash
  nameWithType: CTokenType.HashHash
- uid: Yoakke.SynKit.C.Syntax.CTokenType.Identifier
  name: Identifier
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_Identifier
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.Identifier
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.Identifier
  nameWithType: CTokenType.Identifier
- uid: Yoakke.SynKit.C.Syntax.CTokenType.Increment
  name: Increment
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_Increment
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.Increment
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.Increment
  nameWithType: CTokenType.Increment
- uid: Yoakke.SynKit.C.Syntax.CTokenType.IntLiteral
  name: IntLiteral
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_IntLiteral
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.IntLiteral
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.IntLiteral
  nameWithType: CTokenType.IntLiteral
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordAlignAs
  name: KeywordAlignAs
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordAlignAs
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordAlignAs
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordAlignAs
  nameWithType: CTokenType.KeywordAlignAs
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordAlignOf
  name: KeywordAlignOf
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordAlignOf
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordAlignOf
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordAlignOf
  nameWithType: CTokenType.KeywordAlignOf
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordAtomic
  name: KeywordAtomic
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordAtomic
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordAtomic
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordAtomic
  nameWithType: CTokenType.KeywordAtomic
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordAuto
  name: KeywordAuto
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordAuto
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordAuto
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordAuto
  nameWithType: CTokenType.KeywordAuto
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordBool
  name: KeywordBool
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordBool
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordBool
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordBool
  nameWithType: CTokenType.KeywordBool
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordBreak
  name: KeywordBreak
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordBreak
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordBreak
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordBreak
  nameWithType: CTokenType.KeywordBreak
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordCase
  name: KeywordCase
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordCase
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordCase
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordCase
  nameWithType: CTokenType.KeywordCase
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordChar
  name: KeywordChar
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordChar
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordChar
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordChar
  nameWithType: CTokenType.KeywordChar
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordComplex
  name: KeywordComplex
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordComplex
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordComplex
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordComplex
  nameWithType: CTokenType.KeywordComplex
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordConst
  name: KeywordConst
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordConst
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordConst
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordConst
  nameWithType: CTokenType.KeywordConst
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordContinue
  name: KeywordContinue
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordContinue
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordContinue
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordContinue
  nameWithType: CTokenType.KeywordContinue
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordDefault
  name: KeywordDefault
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordDefault
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordDefault
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordDefault
  nameWithType: CTokenType.KeywordDefault
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordDo
  name: KeywordDo
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordDo
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordDo
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordDo
  nameWithType: CTokenType.KeywordDo
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordDouble
  name: KeywordDouble
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordDouble
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordDouble
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordDouble
  nameWithType: CTokenType.KeywordDouble
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordElse
  name: KeywordElse
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordElse
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordElse
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordElse
  nameWithType: CTokenType.KeywordElse
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordEnum
  name: KeywordEnum
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordEnum
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordEnum
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordEnum
  nameWithType: CTokenType.KeywordEnum
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordExtern
  name: KeywordExtern
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordExtern
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordExtern
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordExtern
  nameWithType: CTokenType.KeywordExtern
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordFloat
  name: KeywordFloat
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordFloat
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordFloat
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordFloat
  nameWithType: CTokenType.KeywordFloat
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordFor
  name: KeywordFor
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordFor
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordFor
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordFor
  nameWithType: CTokenType.KeywordFor
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordGeneric
  name: KeywordGeneric
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordGeneric
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordGeneric
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordGeneric
  nameWithType: CTokenType.KeywordGeneric
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordGoto
  name: KeywordGoto
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordGoto
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordGoto
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordGoto
  nameWithType: CTokenType.KeywordGoto
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordIf
  name: KeywordIf
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordIf
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordIf
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordIf
  nameWithType: CTokenType.KeywordIf
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordImaginary
  name: KeywordImaginary
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordImaginary
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordImaginary
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordImaginary
  nameWithType: CTokenType.KeywordImaginary
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordInline
  name: KeywordInline
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordInline
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordInline
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordInline
  nameWithType: CTokenType.KeywordInline
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordInt
  name: KeywordInt
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordInt
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordInt
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordInt
  nameWithType: CTokenType.KeywordInt
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordLong
  name: KeywordLong
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordLong
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordLong
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordLong
  nameWithType: CTokenType.KeywordLong
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordNoReturn
  name: KeywordNoReturn
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordNoReturn
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordNoReturn
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordNoReturn
  nameWithType: CTokenType.KeywordNoReturn
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordRegister
  name: KeywordRegister
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordRegister
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordRegister
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordRegister
  nameWithType: CTokenType.KeywordRegister
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordRestrict
  name: KeywordRestrict
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordRestrict
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordRestrict
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordRestrict
  nameWithType: CTokenType.KeywordRestrict
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordReturn
  name: KeywordReturn
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordReturn
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordReturn
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordReturn
  nameWithType: CTokenType.KeywordReturn
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordShort
  name: KeywordShort
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordShort
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordShort
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordShort
  nameWithType: CTokenType.KeywordShort
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordSigned
  name: KeywordSigned
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordSigned
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordSigned
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordSigned
  nameWithType: CTokenType.KeywordSigned
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordSizeof
  name: KeywordSizeof
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordSizeof
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordSizeof
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordSizeof
  nameWithType: CTokenType.KeywordSizeof
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordStatic
  name: KeywordStatic
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordStatic
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordStatic
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordStatic
  nameWithType: CTokenType.KeywordStatic
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordStaticAssert
  name: KeywordStaticAssert
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordStaticAssert
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordStaticAssert
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordStaticAssert
  nameWithType: CTokenType.KeywordStaticAssert
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordStruct
  name: KeywordStruct
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordStruct
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordStruct
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordStruct
  nameWithType: CTokenType.KeywordStruct
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordSwitch
  name: KeywordSwitch
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordSwitch
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordSwitch
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordSwitch
  nameWithType: CTokenType.KeywordSwitch
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordThreadLocal
  name: KeywordThreadLocal
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordThreadLocal
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordThreadLocal
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordThreadLocal
  nameWithType: CTokenType.KeywordThreadLocal
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordTypedef
  name: KeywordTypedef
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordTypedef
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordTypedef
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordTypedef
  nameWithType: CTokenType.KeywordTypedef
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordUnion
  name: KeywordUnion
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordUnion
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordUnion
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordUnion
  nameWithType: CTokenType.KeywordUnion
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordUnsigned
  name: KeywordUnsigned
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordUnsigned
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordUnsigned
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordUnsigned
  nameWithType: CTokenType.KeywordUnsigned
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordVoid
  name: KeywordVoid
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordVoid
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordVoid
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordVoid
  nameWithType: CTokenType.KeywordVoid
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordVolatile
  name: KeywordVolatile
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordVolatile
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordVolatile
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordVolatile
  nameWithType: CTokenType.KeywordVolatile
- uid: Yoakke.SynKit.C.Syntax.CTokenType.KeywordWhile
  name: KeywordWhile
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_KeywordWhile
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.KeywordWhile
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.KeywordWhile
  nameWithType: CTokenType.KeywordWhile
- uid: Yoakke.SynKit.C.Syntax.CTokenType.Less
  name: Less
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_Less
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.Less
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.Less
  nameWithType: CTokenType.Less
- uid: Yoakke.SynKit.C.Syntax.CTokenType.LessEqual
  name: LessEqual
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_LessEqual
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.LessEqual
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.LessEqual
  nameWithType: CTokenType.LessEqual
- uid: Yoakke.SynKit.C.Syntax.CTokenType.LogicalAnd
  name: LogicalAnd
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_LogicalAnd
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.LogicalAnd
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.LogicalAnd
  nameWithType: CTokenType.LogicalAnd
- uid: Yoakke.SynKit.C.Syntax.CTokenType.LogicalNot
  name: LogicalNot
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_LogicalNot
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.LogicalNot
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.LogicalNot
  nameWithType: CTokenType.LogicalNot
- uid: Yoakke.SynKit.C.Syntax.CTokenType.LogicalOr
  name: LogicalOr
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_LogicalOr
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.LogicalOr
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.LogicalOr
  nameWithType: CTokenType.LogicalOr
- uid: Yoakke.SynKit.C.Syntax.CTokenType.Modulo
  name: Modulo
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_Modulo
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.Modulo
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.Modulo
  nameWithType: CTokenType.Modulo
- uid: Yoakke.SynKit.C.Syntax.CTokenType.ModuloAssign
  name: ModuloAssign
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_ModuloAssign
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.ModuloAssign
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.ModuloAssign
  nameWithType: CTokenType.ModuloAssign
- uid: Yoakke.SynKit.C.Syntax.CTokenType.Multiply
  name: Multiply
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_Multiply
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.Multiply
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.Multiply
  nameWithType: CTokenType.Multiply
- uid: Yoakke.SynKit.C.Syntax.CTokenType.MultiplyAssign
  name: MultiplyAssign
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_MultiplyAssign
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.MultiplyAssign
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.MultiplyAssign
  nameWithType: CTokenType.MultiplyAssign
- uid: Yoakke.SynKit.C.Syntax.CTokenType.NotEqual
  name: NotEqual
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_NotEqual
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.NotEqual
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.NotEqual
  nameWithType: CTokenType.NotEqual
- uid: Yoakke.SynKit.C.Syntax.CTokenType.OpenBrace
  name: OpenBrace
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_OpenBrace
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.OpenBrace
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.OpenBrace
  nameWithType: CTokenType.OpenBrace
- uid: Yoakke.SynKit.C.Syntax.CTokenType.OpenBracket
  name: OpenBracket
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_OpenBracket
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.OpenBracket
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.OpenBracket
  nameWithType: CTokenType.OpenBracket
- uid: Yoakke.SynKit.C.Syntax.CTokenType.OpenParen
  name: OpenParen
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_OpenParen
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.OpenParen
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.OpenParen
  nameWithType: CTokenType.OpenParen
- uid: Yoakke.SynKit.C.Syntax.CTokenType.QuestionMark
  name: QuestionMark
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_QuestionMark
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.QuestionMark
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.QuestionMark
  nameWithType: CTokenType.QuestionMark
- uid: Yoakke.SynKit.C.Syntax.CTokenType.Semicolon
  name: Semicolon
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_Semicolon
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.Semicolon
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.Semicolon
  nameWithType: CTokenType.Semicolon
- uid: Yoakke.SynKit.C.Syntax.CTokenType.ShiftLeft
  name: ShiftLeft
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_ShiftLeft
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.ShiftLeft
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.ShiftLeft
  nameWithType: CTokenType.ShiftLeft
- uid: Yoakke.SynKit.C.Syntax.CTokenType.ShiftLeftAssign
  name: ShiftLeftAssign
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_ShiftLeftAssign
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.ShiftLeftAssign
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.ShiftLeftAssign
  nameWithType: CTokenType.ShiftLeftAssign
- uid: Yoakke.SynKit.C.Syntax.CTokenType.ShiftRight
  name: ShiftRight
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_ShiftRight
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.ShiftRight
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.ShiftRight
  nameWithType: CTokenType.ShiftRight
- uid: Yoakke.SynKit.C.Syntax.CTokenType.ShiftRightAssign
  name: ShiftRightAssign
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_ShiftRightAssign
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.ShiftRightAssign
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.ShiftRightAssign
  nameWithType: CTokenType.ShiftRightAssign
- uid: Yoakke.SynKit.C.Syntax.CTokenType.StringLiteral
  name: StringLiteral
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_StringLiteral
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.StringLiteral
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.StringLiteral
  nameWithType: CTokenType.StringLiteral
- uid: Yoakke.SynKit.C.Syntax.CTokenType.Subtract
  name: Subtract
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_Subtract
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.Subtract
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.Subtract
  nameWithType: CTokenType.Subtract
- uid: Yoakke.SynKit.C.Syntax.CTokenType.SubtractAssign
  name: SubtractAssign
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_SubtractAssign
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.SubtractAssign
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.SubtractAssign
  nameWithType: CTokenType.SubtractAssign
- uid: Yoakke.SynKit.C.Syntax.CTokenType.Unknown
  name: Unknown
  href: api/Yoakke.SynKit.C.Syntax.CTokenType.html#Yoakke_SynKit_C_Syntax_CTokenType_Unknown
  commentId: F:Yoakke.SynKit.C.Syntax.CTokenType.Unknown
  fullName: Yoakke.SynKit.C.Syntax.CTokenType.Unknown
  nameWithType: CTokenType.Unknown
- uid: Yoakke.SynKit.C.Syntax.IMacro
  name: IMacro
  href: api/Yoakke.SynKit.C.Syntax.IMacro.html
  commentId: T:Yoakke.SynKit.C.Syntax.IMacro
  fullName: Yoakke.SynKit.C.Syntax.IMacro
  nameWithType: IMacro
- uid: Yoakke.SynKit.C.Syntax.IMacro.Expand(Yoakke.SynKit.C.Syntax.IPreProcessor,IReadOnlyList{IReadOnlyList{Yoakke.SynKit.C.Syntax.CToken}})
  name: Expand(IPreProcessor, IReadOnlyList<IReadOnlyList<CToken>>)
  href: api/Yoakke.SynKit.C.Syntax.IMacro.html#Yoakke_SynKit_C_Syntax_IMacro_Expand_Yoakke_SynKit_C_Syntax_IPreProcessor_IReadOnlyList_IReadOnlyList_Yoakke_SynKit_C_Syntax_CToken___
  commentId: M:Yoakke.SynKit.C.Syntax.IMacro.Expand(Yoakke.SynKit.C.Syntax.IPreProcessor,IReadOnlyList{IReadOnlyList{Yoakke.SynKit.C.Syntax.CToken}})
  name.vb: Expand(IPreProcessor, IReadOnlyList(Of IReadOnlyList(Of CToken)))
  fullName: Yoakke.SynKit.C.Syntax.IMacro.Expand(Yoakke.SynKit.C.Syntax.IPreProcessor, IReadOnlyList<IReadOnlyList<Yoakke.SynKit.C.Syntax.CToken>>)
  fullName.vb: Yoakke.SynKit.C.Syntax.IMacro.Expand(Yoakke.SynKit.C.Syntax.IPreProcessor, IReadOnlyList(Of IReadOnlyList(Of Yoakke.SynKit.C.Syntax.CToken)))
  nameWithType: IMacro.Expand(IPreProcessor, IReadOnlyList<IReadOnlyList<CToken>>)
  nameWithType.vb: IMacro.Expand(IPreProcessor, IReadOnlyList(Of IReadOnlyList(Of CToken)))
- uid: Yoakke.SynKit.C.Syntax.IMacro.Expand*
  name: Expand
  href: api/Yoakke.SynKit.C.Syntax.IMacro.html#Yoakke_SynKit_C_Syntax_IMacro_Expand_
  commentId: Overload:Yoakke.SynKit.C.Syntax.IMacro.Expand
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.IMacro.Expand
  nameWithType: IMacro.Expand
- uid: Yoakke.SynKit.C.Syntax.IMacro.Name
  name: Name
  href: api/Yoakke.SynKit.C.Syntax.IMacro.html#Yoakke_SynKit_C_Syntax_IMacro_Name
  commentId: P:Yoakke.SynKit.C.Syntax.IMacro.Name
  fullName: Yoakke.SynKit.C.Syntax.IMacro.Name
  nameWithType: IMacro.Name
- uid: Yoakke.SynKit.C.Syntax.IMacro.Name*
  name: Name
  href: api/Yoakke.SynKit.C.Syntax.IMacro.html#Yoakke_SynKit_C_Syntax_IMacro_Name_
  commentId: Overload:Yoakke.SynKit.C.Syntax.IMacro.Name
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.IMacro.Name
  nameWithType: IMacro.Name
- uid: Yoakke.SynKit.C.Syntax.IMacro.Parameters
  name: Parameters
  href: api/Yoakke.SynKit.C.Syntax.IMacro.html#Yoakke_SynKit_C_Syntax_IMacro_Parameters
  commentId: P:Yoakke.SynKit.C.Syntax.IMacro.Parameters
  fullName: Yoakke.SynKit.C.Syntax.IMacro.Parameters
  nameWithType: IMacro.Parameters
- uid: Yoakke.SynKit.C.Syntax.IMacro.Parameters*
  name: Parameters
  href: api/Yoakke.SynKit.C.Syntax.IMacro.html#Yoakke_SynKit_C_Syntax_IMacro_Parameters_
  commentId: Overload:Yoakke.SynKit.C.Syntax.IMacro.Parameters
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.IMacro.Parameters
  nameWithType: IMacro.Parameters
- uid: Yoakke.SynKit.C.Syntax.IPreProcessor
  name: IPreProcessor
  href: api/Yoakke.SynKit.C.Syntax.IPreProcessor.html
  commentId: T:Yoakke.SynKit.C.Syntax.IPreProcessor
  fullName: Yoakke.SynKit.C.Syntax.IPreProcessor
  nameWithType: IPreProcessor
- uid: Yoakke.SynKit.C.Syntax.IPreProcessor.Define(Yoakke.SynKit.C.Syntax.IMacro)
  name: Define(IMacro)
  href: api/Yoakke.SynKit.C.Syntax.IPreProcessor.html#Yoakke_SynKit_C_Syntax_IPreProcessor_Define_Yoakke_SynKit_C_Syntax_IMacro_
  commentId: M:Yoakke.SynKit.C.Syntax.IPreProcessor.Define(Yoakke.SynKit.C.Syntax.IMacro)
  fullName: Yoakke.SynKit.C.Syntax.IPreProcessor.Define(Yoakke.SynKit.C.Syntax.IMacro)
  nameWithType: IPreProcessor.Define(IMacro)
- uid: Yoakke.SynKit.C.Syntax.IPreProcessor.Define*
  name: Define
  href: api/Yoakke.SynKit.C.Syntax.IPreProcessor.html#Yoakke_SynKit_C_Syntax_IPreProcessor_Define_
  commentId: Overload:Yoakke.SynKit.C.Syntax.IPreProcessor.Define
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.IPreProcessor.Define
  nameWithType: IPreProcessor.Define
- uid: Yoakke.SynKit.C.Syntax.IPreProcessor.Expand(IEnumerable{Yoakke.SynKit.C.Syntax.CToken})
  name: Expand(IEnumerable<CToken>)
  href: api/Yoakke.SynKit.C.Syntax.IPreProcessor.html#Yoakke_SynKit_C_Syntax_IPreProcessor_Expand_IEnumerable_Yoakke_SynKit_C_Syntax_CToken__
  commentId: M:Yoakke.SynKit.C.Syntax.IPreProcessor.Expand(IEnumerable{Yoakke.SynKit.C.Syntax.CToken})
  name.vb: Expand(IEnumerable(Of CToken))
  fullName: Yoakke.SynKit.C.Syntax.IPreProcessor.Expand(IEnumerable<Yoakke.SynKit.C.Syntax.CToken>)
  fullName.vb: Yoakke.SynKit.C.Syntax.IPreProcessor.Expand(IEnumerable(Of Yoakke.SynKit.C.Syntax.CToken))
  nameWithType: IPreProcessor.Expand(IEnumerable<CToken>)
  nameWithType.vb: IPreProcessor.Expand(IEnumerable(Of CToken))
- uid: Yoakke.SynKit.C.Syntax.IPreProcessor.Expand*
  name: Expand
  href: api/Yoakke.SynKit.C.Syntax.IPreProcessor.html#Yoakke_SynKit_C_Syntax_IPreProcessor_Expand_
  commentId: Overload:Yoakke.SynKit.C.Syntax.IPreProcessor.Expand
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.IPreProcessor.Expand
  nameWithType: IPreProcessor.Expand
- uid: Yoakke.SynKit.C.Syntax.IPreProcessor.IsDefined(System.String)
  name: IsDefined(String)
  href: api/Yoakke.SynKit.C.Syntax.IPreProcessor.html#Yoakke_SynKit_C_Syntax_IPreProcessor_IsDefined_System_String_
  commentId: M:Yoakke.SynKit.C.Syntax.IPreProcessor.IsDefined(System.String)
  fullName: Yoakke.SynKit.C.Syntax.IPreProcessor.IsDefined(System.String)
  nameWithType: IPreProcessor.IsDefined(String)
- uid: Yoakke.SynKit.C.Syntax.IPreProcessor.IsDefined*
  name: IsDefined
  href: api/Yoakke.SynKit.C.Syntax.IPreProcessor.html#Yoakke_SynKit_C_Syntax_IPreProcessor_IsDefined_
  commentId: Overload:Yoakke.SynKit.C.Syntax.IPreProcessor.IsDefined
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.IPreProcessor.IsDefined
  nameWithType: IPreProcessor.IsDefined
- uid: Yoakke.SynKit.C.Syntax.IPreProcessor.Macros
  name: Macros
  href: api/Yoakke.SynKit.C.Syntax.IPreProcessor.html#Yoakke_SynKit_C_Syntax_IPreProcessor_Macros
  commentId: P:Yoakke.SynKit.C.Syntax.IPreProcessor.Macros
  fullName: Yoakke.SynKit.C.Syntax.IPreProcessor.Macros
  nameWithType: IPreProcessor.Macros
- uid: Yoakke.SynKit.C.Syntax.IPreProcessor.Macros*
  name: Macros
  href: api/Yoakke.SynKit.C.Syntax.IPreProcessor.html#Yoakke_SynKit_C_Syntax_IPreProcessor_Macros_
  commentId: Overload:Yoakke.SynKit.C.Syntax.IPreProcessor.Macros
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.IPreProcessor.Macros
  nameWithType: IPreProcessor.Macros
- uid: Yoakke.SynKit.C.Syntax.IPreProcessor.Next
  name: Next()
  href: api/Yoakke.SynKit.C.Syntax.IPreProcessor.html#Yoakke_SynKit_C_Syntax_IPreProcessor_Next
  commentId: M:Yoakke.SynKit.C.Syntax.IPreProcessor.Next
  fullName: Yoakke.SynKit.C.Syntax.IPreProcessor.Next()
  nameWithType: IPreProcessor.Next()
- uid: Yoakke.SynKit.C.Syntax.IPreProcessor.Next*
  name: Next
  href: api/Yoakke.SynKit.C.Syntax.IPreProcessor.html#Yoakke_SynKit_C_Syntax_IPreProcessor_Next_
  commentId: Overload:Yoakke.SynKit.C.Syntax.IPreProcessor.Next
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.IPreProcessor.Next
  nameWithType: IPreProcessor.Next
- uid: Yoakke.SynKit.C.Syntax.IPreProcessor.Undefine(System.String)
  name: Undefine(String)
  href: api/Yoakke.SynKit.C.Syntax.IPreProcessor.html#Yoakke_SynKit_C_Syntax_IPreProcessor_Undefine_System_String_
  commentId: M:Yoakke.SynKit.C.Syntax.IPreProcessor.Undefine(System.String)
  fullName: Yoakke.SynKit.C.Syntax.IPreProcessor.Undefine(System.String)
  nameWithType: IPreProcessor.Undefine(String)
- uid: Yoakke.SynKit.C.Syntax.IPreProcessor.Undefine*
  name: Undefine
  href: api/Yoakke.SynKit.C.Syntax.IPreProcessor.html#Yoakke_SynKit_C_Syntax_IPreProcessor_Undefine_
  commentId: Overload:Yoakke.SynKit.C.Syntax.IPreProcessor.Undefine
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.IPreProcessor.Undefine
  nameWithType: IPreProcessor.Undefine
- uid: Yoakke.SynKit.C.Syntax.MacroElement
  name: MacroElement
  href: api/Yoakke.SynKit.C.Syntax.MacroElement.html
  commentId: T:Yoakke.SynKit.C.Syntax.MacroElement
  fullName: Yoakke.SynKit.C.Syntax.MacroElement
  nameWithType: MacroElement
- uid: Yoakke.SynKit.C.Syntax.MacroElement.Literal
  name: MacroElement.Literal
  href: api/Yoakke.SynKit.C.Syntax.MacroElement.Literal.html
  commentId: T:Yoakke.SynKit.C.Syntax.MacroElement.Literal
  fullName: Yoakke.SynKit.C.Syntax.MacroElement.Literal
  nameWithType: MacroElement.Literal
- uid: Yoakke.SynKit.C.Syntax.MacroElement.Literal.#ctor(Yoakke.SynKit.C.Syntax.CToken)
  name: Literal(CToken)
  href: api/Yoakke.SynKit.C.Syntax.MacroElement.Literal.html#Yoakke_SynKit_C_Syntax_MacroElement_Literal__ctor_Yoakke_SynKit_C_Syntax_CToken_
  commentId: M:Yoakke.SynKit.C.Syntax.MacroElement.Literal.#ctor(Yoakke.SynKit.C.Syntax.CToken)
  fullName: Yoakke.SynKit.C.Syntax.MacroElement.Literal.Literal(Yoakke.SynKit.C.Syntax.CToken)
  nameWithType: MacroElement.Literal.Literal(CToken)
- uid: Yoakke.SynKit.C.Syntax.MacroElement.Literal.#ctor*
  name: Literal
  href: api/Yoakke.SynKit.C.Syntax.MacroElement.Literal.html#Yoakke_SynKit_C_Syntax_MacroElement_Literal__ctor_
  commentId: Overload:Yoakke.SynKit.C.Syntax.MacroElement.Literal.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.MacroElement.Literal.Literal
  nameWithType: MacroElement.Literal.Literal
- uid: Yoakke.SynKit.C.Syntax.MacroElement.Literal.Token
  name: Token
  href: api/Yoakke.SynKit.C.Syntax.MacroElement.Literal.html#Yoakke_SynKit_C_Syntax_MacroElement_Literal_Token
  commentId: P:Yoakke.SynKit.C.Syntax.MacroElement.Literal.Token
  fullName: Yoakke.SynKit.C.Syntax.MacroElement.Literal.Token
  nameWithType: MacroElement.Literal.Token
- uid: Yoakke.SynKit.C.Syntax.MacroElement.Literal.Token*
  name: Token
  href: api/Yoakke.SynKit.C.Syntax.MacroElement.Literal.html#Yoakke_SynKit_C_Syntax_MacroElement_Literal_Token_
  commentId: Overload:Yoakke.SynKit.C.Syntax.MacroElement.Literal.Token
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.MacroElement.Literal.Token
  nameWithType: MacroElement.Literal.Token
- uid: Yoakke.SynKit.C.Syntax.MacroElement.Paste
  name: MacroElement.Paste
  href: api/Yoakke.SynKit.C.Syntax.MacroElement.Paste.html
  commentId: T:Yoakke.SynKit.C.Syntax.MacroElement.Paste
  fullName: Yoakke.SynKit.C.Syntax.MacroElement.Paste
  nameWithType: MacroElement.Paste
- uid: Yoakke.SynKit.C.Syntax.MacroElement.Paste.#ctor(Yoakke.SynKit.C.Syntax.MacroElement,Yoakke.SynKit.C.Syntax.MacroElement)
  name: Paste(MacroElement, MacroElement)
  href: api/Yoakke.SynKit.C.Syntax.MacroElement.Paste.html#Yoakke_SynKit_C_Syntax_MacroElement_Paste__ctor_Yoakke_SynKit_C_Syntax_MacroElement_Yoakke_SynKit_C_Syntax_MacroElement_
  commentId: M:Yoakke.SynKit.C.Syntax.MacroElement.Paste.#ctor(Yoakke.SynKit.C.Syntax.MacroElement,Yoakke.SynKit.C.Syntax.MacroElement)
  fullName: Yoakke.SynKit.C.Syntax.MacroElement.Paste.Paste(Yoakke.SynKit.C.Syntax.MacroElement, Yoakke.SynKit.C.Syntax.MacroElement)
  nameWithType: MacroElement.Paste.Paste(MacroElement, MacroElement)
- uid: Yoakke.SynKit.C.Syntax.MacroElement.Paste.#ctor*
  name: Paste
  href: api/Yoakke.SynKit.C.Syntax.MacroElement.Paste.html#Yoakke_SynKit_C_Syntax_MacroElement_Paste__ctor_
  commentId: Overload:Yoakke.SynKit.C.Syntax.MacroElement.Paste.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.MacroElement.Paste.Paste
  nameWithType: MacroElement.Paste.Paste
- uid: Yoakke.SynKit.C.Syntax.MacroElement.Paste.Left
  name: Left
  href: api/Yoakke.SynKit.C.Syntax.MacroElement.Paste.html#Yoakke_SynKit_C_Syntax_MacroElement_Paste_Left
  commentId: P:Yoakke.SynKit.C.Syntax.MacroElement.Paste.Left
  fullName: Yoakke.SynKit.C.Syntax.MacroElement.Paste.Left
  nameWithType: MacroElement.Paste.Left
- uid: Yoakke.SynKit.C.Syntax.MacroElement.Paste.Left*
  name: Left
  href: api/Yoakke.SynKit.C.Syntax.MacroElement.Paste.html#Yoakke_SynKit_C_Syntax_MacroElement_Paste_Left_
  commentId: Overload:Yoakke.SynKit.C.Syntax.MacroElement.Paste.Left
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.MacroElement.Paste.Left
  nameWithType: MacroElement.Paste.Left
- uid: Yoakke.SynKit.C.Syntax.MacroElement.Paste.Right
  name: Right
  href: api/Yoakke.SynKit.C.Syntax.MacroElement.Paste.html#Yoakke_SynKit_C_Syntax_MacroElement_Paste_Right
  commentId: P:Yoakke.SynKit.C.Syntax.MacroElement.Paste.Right
  fullName: Yoakke.SynKit.C.Syntax.MacroElement.Paste.Right
  nameWithType: MacroElement.Paste.Right
- uid: Yoakke.SynKit.C.Syntax.MacroElement.Paste.Right*
  name: Right
  href: api/Yoakke.SynKit.C.Syntax.MacroElement.Paste.html#Yoakke_SynKit_C_Syntax_MacroElement_Paste_Right_
  commentId: Overload:Yoakke.SynKit.C.Syntax.MacroElement.Paste.Right
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.MacroElement.Paste.Right
  nameWithType: MacroElement.Paste.Right
- uid: Yoakke.SynKit.C.Syntax.MacroElement.Stringify
  name: MacroElement.Stringify
  href: api/Yoakke.SynKit.C.Syntax.MacroElement.Stringify.html
  commentId: T:Yoakke.SynKit.C.Syntax.MacroElement.Stringify
  fullName: Yoakke.SynKit.C.Syntax.MacroElement.Stringify
  nameWithType: MacroElement.Stringify
- uid: Yoakke.SynKit.C.Syntax.MacroElement.Stringify.#ctor(System.String)
  name: Stringify(String)
  href: api/Yoakke.SynKit.C.Syntax.MacroElement.Stringify.html#Yoakke_SynKit_C_Syntax_MacroElement_Stringify__ctor_System_String_
  commentId: M:Yoakke.SynKit.C.Syntax.MacroElement.Stringify.#ctor(System.String)
  fullName: Yoakke.SynKit.C.Syntax.MacroElement.Stringify.Stringify(System.String)
  nameWithType: MacroElement.Stringify.Stringify(String)
- uid: Yoakke.SynKit.C.Syntax.MacroElement.Stringify.#ctor*
  name: Stringify
  href: api/Yoakke.SynKit.C.Syntax.MacroElement.Stringify.html#Yoakke_SynKit_C_Syntax_MacroElement_Stringify__ctor_
  commentId: Overload:Yoakke.SynKit.C.Syntax.MacroElement.Stringify.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.MacroElement.Stringify.Stringify
  nameWithType: MacroElement.Stringify.Stringify
- uid: Yoakke.SynKit.C.Syntax.MacroElement.Stringify.Argument
  name: Argument
  href: api/Yoakke.SynKit.C.Syntax.MacroElement.Stringify.html#Yoakke_SynKit_C_Syntax_MacroElement_Stringify_Argument
  commentId: P:Yoakke.SynKit.C.Syntax.MacroElement.Stringify.Argument
  fullName: Yoakke.SynKit.C.Syntax.MacroElement.Stringify.Argument
  nameWithType: MacroElement.Stringify.Argument
- uid: Yoakke.SynKit.C.Syntax.MacroElement.Stringify.Argument*
  name: Argument
  href: api/Yoakke.SynKit.C.Syntax.MacroElement.Stringify.html#Yoakke_SynKit_C_Syntax_MacroElement_Stringify_Argument_
  commentId: Overload:Yoakke.SynKit.C.Syntax.MacroElement.Stringify.Argument
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.MacroElement.Stringify.Argument
  nameWithType: MacroElement.Stringify.Argument
- uid: Yoakke.SynKit.C.Syntax.Macros
  name: Yoakke.SynKit.C.Syntax.Macros
  href: api/Yoakke.SynKit.C.Syntax.Macros.html
  commentId: N:Yoakke.SynKit.C.Syntax.Macros
  fullName: Yoakke.SynKit.C.Syntax.Macros
  nameWithType: Yoakke.SynKit.C.Syntax.Macros
- uid: Yoakke.SynKit.C.Syntax.Macros.CounterMacro
  name: CounterMacro
  href: api/Yoakke.SynKit.C.Syntax.Macros.CounterMacro.html
  commentId: T:Yoakke.SynKit.C.Syntax.Macros.CounterMacro
  fullName: Yoakke.SynKit.C.Syntax.Macros.CounterMacro
  nameWithType: CounterMacro
- uid: Yoakke.SynKit.C.Syntax.Macros.CounterMacro.Expand(Yoakke.SynKit.C.Syntax.IPreProcessor,IReadOnlyList{IReadOnlyList{Yoakke.SynKit.C.Syntax.CToken}})
  name: Expand(IPreProcessor, IReadOnlyList<IReadOnlyList<CToken>>)
  href: api/Yoakke.SynKit.C.Syntax.Macros.CounterMacro.html#Yoakke_SynKit_C_Syntax_Macros_CounterMacro_Expand_Yoakke_SynKit_C_Syntax_IPreProcessor_IReadOnlyList_IReadOnlyList_Yoakke_SynKit_C_Syntax_CToken___
  commentId: M:Yoakke.SynKit.C.Syntax.Macros.CounterMacro.Expand(Yoakke.SynKit.C.Syntax.IPreProcessor,IReadOnlyList{IReadOnlyList{Yoakke.SynKit.C.Syntax.CToken}})
  name.vb: Expand(IPreProcessor, IReadOnlyList(Of IReadOnlyList(Of CToken)))
  fullName: Yoakke.SynKit.C.Syntax.Macros.CounterMacro.Expand(Yoakke.SynKit.C.Syntax.IPreProcessor, IReadOnlyList<IReadOnlyList<Yoakke.SynKit.C.Syntax.CToken>>)
  fullName.vb: Yoakke.SynKit.C.Syntax.Macros.CounterMacro.Expand(Yoakke.SynKit.C.Syntax.IPreProcessor, IReadOnlyList(Of IReadOnlyList(Of Yoakke.SynKit.C.Syntax.CToken)))
  nameWithType: CounterMacro.Expand(IPreProcessor, IReadOnlyList<IReadOnlyList<CToken>>)
  nameWithType.vb: CounterMacro.Expand(IPreProcessor, IReadOnlyList(Of IReadOnlyList(Of CToken)))
- uid: Yoakke.SynKit.C.Syntax.Macros.CounterMacro.Expand*
  name: Expand
  href: api/Yoakke.SynKit.C.Syntax.Macros.CounterMacro.html#Yoakke_SynKit_C_Syntax_Macros_CounterMacro_Expand_
  commentId: Overload:Yoakke.SynKit.C.Syntax.Macros.CounterMacro.Expand
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.Macros.CounterMacro.Expand
  nameWithType: CounterMacro.Expand
- uid: Yoakke.SynKit.C.Syntax.Macros.CounterMacro.Name
  name: Name
  href: api/Yoakke.SynKit.C.Syntax.Macros.CounterMacro.html#Yoakke_SynKit_C_Syntax_Macros_CounterMacro_Name
  commentId: P:Yoakke.SynKit.C.Syntax.Macros.CounterMacro.Name
  fullName: Yoakke.SynKit.C.Syntax.Macros.CounterMacro.Name
  nameWithType: CounterMacro.Name
- uid: Yoakke.SynKit.C.Syntax.Macros.CounterMacro.Name*
  name: Name
  href: api/Yoakke.SynKit.C.Syntax.Macros.CounterMacro.html#Yoakke_SynKit_C_Syntax_Macros_CounterMacro_Name_
  commentId: Overload:Yoakke.SynKit.C.Syntax.Macros.CounterMacro.Name
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.Macros.CounterMacro.Name
  nameWithType: CounterMacro.Name
- uid: Yoakke.SynKit.C.Syntax.Macros.CounterMacro.Parameters
  name: Parameters
  href: api/Yoakke.SynKit.C.Syntax.Macros.CounterMacro.html#Yoakke_SynKit_C_Syntax_Macros_CounterMacro_Parameters
  commentId: P:Yoakke.SynKit.C.Syntax.Macros.CounterMacro.Parameters
  fullName: Yoakke.SynKit.C.Syntax.Macros.CounterMacro.Parameters
  nameWithType: CounterMacro.Parameters
- uid: Yoakke.SynKit.C.Syntax.Macros.CounterMacro.Parameters*
  name: Parameters
  href: api/Yoakke.SynKit.C.Syntax.Macros.CounterMacro.html#Yoakke_SynKit_C_Syntax_Macros_CounterMacro_Parameters_
  commentId: Overload:Yoakke.SynKit.C.Syntax.Macros.CounterMacro.Parameters
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.Macros.CounterMacro.Parameters
  nameWithType: CounterMacro.Parameters
- uid: Yoakke.SynKit.C.Syntax.PreProcessorExtensions
  name: PreProcessorExtensions
  href: api/Yoakke.SynKit.C.Syntax.PreProcessorExtensions.html
  commentId: T:Yoakke.SynKit.C.Syntax.PreProcessorExtensions
  fullName: Yoakke.SynKit.C.Syntax.PreProcessorExtensions
  nameWithType: PreProcessorExtensions
- uid: Yoakke.SynKit.C.Syntax.PreProcessorExtensions.Define(Yoakke.SynKit.C.Syntax.IPreProcessor,Func{Yoakke.SynKit.C.Syntax.IPreProcessor,Yoakke.SynKit.C.Syntax.IMacro})
  name: Define(IPreProcessor, Func<IPreProcessor, IMacro>)
  href: api/Yoakke.SynKit.C.Syntax.PreProcessorExtensions.html#Yoakke_SynKit_C_Syntax_PreProcessorExtensions_Define_Yoakke_SynKit_C_Syntax_IPreProcessor_Func_Yoakke_SynKit_C_Syntax_IPreProcessor_Yoakke_SynKit_C_Syntax_IMacro__
  commentId: M:Yoakke.SynKit.C.Syntax.PreProcessorExtensions.Define(Yoakke.SynKit.C.Syntax.IPreProcessor,Func{Yoakke.SynKit.C.Syntax.IPreProcessor,Yoakke.SynKit.C.Syntax.IMacro})
  name.vb: Define(IPreProcessor, Func(Of IPreProcessor, IMacro))
  fullName: Yoakke.SynKit.C.Syntax.PreProcessorExtensions.Define(Yoakke.SynKit.C.Syntax.IPreProcessor, Func<Yoakke.SynKit.C.Syntax.IPreProcessor, Yoakke.SynKit.C.Syntax.IMacro>)
  fullName.vb: Yoakke.SynKit.C.Syntax.PreProcessorExtensions.Define(Yoakke.SynKit.C.Syntax.IPreProcessor, Func(Of Yoakke.SynKit.C.Syntax.IPreProcessor, Yoakke.SynKit.C.Syntax.IMacro))
  nameWithType: PreProcessorExtensions.Define(IPreProcessor, Func<IPreProcessor, IMacro>)
  nameWithType.vb: PreProcessorExtensions.Define(IPreProcessor, Func(Of IPreProcessor, IMacro))
- uid: Yoakke.SynKit.C.Syntax.PreProcessorExtensions.Define*
  name: Define
  href: api/Yoakke.SynKit.C.Syntax.PreProcessorExtensions.html#Yoakke_SynKit_C_Syntax_PreProcessorExtensions_Define_
  commentId: Overload:Yoakke.SynKit.C.Syntax.PreProcessorExtensions.Define
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.PreProcessorExtensions.Define
  nameWithType: PreProcessorExtensions.Define
- uid: Yoakke.SynKit.C.Syntax.PreProcessorExtensions.Define``1(Yoakke.SynKit.C.Syntax.IPreProcessor)
  name: Define<TMacro>(IPreProcessor)
  href: api/Yoakke.SynKit.C.Syntax.PreProcessorExtensions.html#Yoakke_SynKit_C_Syntax_PreProcessorExtensions_Define__1_Yoakke_SynKit_C_Syntax_IPreProcessor_
  commentId: M:Yoakke.SynKit.C.Syntax.PreProcessorExtensions.Define``1(Yoakke.SynKit.C.Syntax.IPreProcessor)
  name.vb: Define(Of TMacro)(IPreProcessor)
  fullName: Yoakke.SynKit.C.Syntax.PreProcessorExtensions.Define<TMacro>(Yoakke.SynKit.C.Syntax.IPreProcessor)
  fullName.vb: Yoakke.SynKit.C.Syntax.PreProcessorExtensions.Define(Of TMacro)(Yoakke.SynKit.C.Syntax.IPreProcessor)
  nameWithType: PreProcessorExtensions.Define<TMacro>(IPreProcessor)
  nameWithType.vb: PreProcessorExtensions.Define(Of TMacro)(IPreProcessor)
- uid: Yoakke.SynKit.C.Syntax.PreProcessorExtensions.DefineCounter(Yoakke.SynKit.C.Syntax.IPreProcessor)
  name: DefineCounter(IPreProcessor)
  href: api/Yoakke.SynKit.C.Syntax.PreProcessorExtensions.html#Yoakke_SynKit_C_Syntax_PreProcessorExtensions_DefineCounter_Yoakke_SynKit_C_Syntax_IPreProcessor_
  commentId: M:Yoakke.SynKit.C.Syntax.PreProcessorExtensions.DefineCounter(Yoakke.SynKit.C.Syntax.IPreProcessor)
  fullName: Yoakke.SynKit.C.Syntax.PreProcessorExtensions.DefineCounter(Yoakke.SynKit.C.Syntax.IPreProcessor)
  nameWithType: PreProcessorExtensions.DefineCounter(IPreProcessor)
- uid: Yoakke.SynKit.C.Syntax.PreProcessorExtensions.DefineCounter*
  name: DefineCounter
  href: api/Yoakke.SynKit.C.Syntax.PreProcessorExtensions.html#Yoakke_SynKit_C_Syntax_PreProcessorExtensions_DefineCounter_
  commentId: Overload:Yoakke.SynKit.C.Syntax.PreProcessorExtensions.DefineCounter
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.PreProcessorExtensions.DefineCounter
  nameWithType: PreProcessorExtensions.DefineCounter
- uid: Yoakke.SynKit.C.Syntax.UserMacro
  name: UserMacro
  href: api/Yoakke.SynKit.C.Syntax.UserMacro.html
  commentId: T:Yoakke.SynKit.C.Syntax.UserMacro
  fullName: Yoakke.SynKit.C.Syntax.UserMacro
  nameWithType: UserMacro
- uid: Yoakke.SynKit.C.Syntax.UserMacro.#ctor(System.String,System.Nullable{IReadOnlyList{System.String}},IReadOnlyList{Yoakke.SynKit.C.Syntax.MacroElement})
  name: UserMacro(String, Nullable<IReadOnlyList<String>>, IReadOnlyList<MacroElement>)
  href: api/Yoakke.SynKit.C.Syntax.UserMacro.html#Yoakke_SynKit_C_Syntax_UserMacro__ctor_System_String_System_Nullable_IReadOnlyList_System_String___IReadOnlyList_Yoakke_SynKit_C_Syntax_MacroElement__
  commentId: M:Yoakke.SynKit.C.Syntax.UserMacro.#ctor(System.String,System.Nullable{IReadOnlyList{System.String}},IReadOnlyList{Yoakke.SynKit.C.Syntax.MacroElement})
  name.vb: UserMacro(String, Nullable(Of IReadOnlyList(Of String)), IReadOnlyList(Of MacroElement))
  fullName: Yoakke.SynKit.C.Syntax.UserMacro.UserMacro(System.String, System.Nullable<IReadOnlyList<System.String>>, IReadOnlyList<Yoakke.SynKit.C.Syntax.MacroElement>)
  fullName.vb: Yoakke.SynKit.C.Syntax.UserMacro.UserMacro(System.String, System.Nullable(Of IReadOnlyList(Of System.String)), IReadOnlyList(Of Yoakke.SynKit.C.Syntax.MacroElement))
  nameWithType: UserMacro.UserMacro(String, Nullable<IReadOnlyList<String>>, IReadOnlyList<MacroElement>)
  nameWithType.vb: UserMacro.UserMacro(String, Nullable(Of IReadOnlyList(Of String)), IReadOnlyList(Of MacroElement))
- uid: Yoakke.SynKit.C.Syntax.UserMacro.#ctor*
  name: UserMacro
  href: api/Yoakke.SynKit.C.Syntax.UserMacro.html#Yoakke_SynKit_C_Syntax_UserMacro__ctor_
  commentId: Overload:Yoakke.SynKit.C.Syntax.UserMacro.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.UserMacro.UserMacro
  nameWithType: UserMacro.UserMacro
- uid: Yoakke.SynKit.C.Syntax.UserMacro.Expand(Yoakke.SynKit.C.Syntax.IPreProcessor,IReadOnlyList{IReadOnlyList{Yoakke.SynKit.C.Syntax.CToken}})
  name: Expand(IPreProcessor, IReadOnlyList<IReadOnlyList<CToken>>)
  href: api/Yoakke.SynKit.C.Syntax.UserMacro.html#Yoakke_SynKit_C_Syntax_UserMacro_Expand_Yoakke_SynKit_C_Syntax_IPreProcessor_IReadOnlyList_IReadOnlyList_Yoakke_SynKit_C_Syntax_CToken___
  commentId: M:Yoakke.SynKit.C.Syntax.UserMacro.Expand(Yoakke.SynKit.C.Syntax.IPreProcessor,IReadOnlyList{IReadOnlyList{Yoakke.SynKit.C.Syntax.CToken}})
  name.vb: Expand(IPreProcessor, IReadOnlyList(Of IReadOnlyList(Of CToken)))
  fullName: Yoakke.SynKit.C.Syntax.UserMacro.Expand(Yoakke.SynKit.C.Syntax.IPreProcessor, IReadOnlyList<IReadOnlyList<Yoakke.SynKit.C.Syntax.CToken>>)
  fullName.vb: Yoakke.SynKit.C.Syntax.UserMacro.Expand(Yoakke.SynKit.C.Syntax.IPreProcessor, IReadOnlyList(Of IReadOnlyList(Of Yoakke.SynKit.C.Syntax.CToken)))
  nameWithType: UserMacro.Expand(IPreProcessor, IReadOnlyList<IReadOnlyList<CToken>>)
  nameWithType.vb: UserMacro.Expand(IPreProcessor, IReadOnlyList(Of IReadOnlyList(Of CToken)))
- uid: Yoakke.SynKit.C.Syntax.UserMacro.Expand*
  name: Expand
  href: api/Yoakke.SynKit.C.Syntax.UserMacro.html#Yoakke_SynKit_C_Syntax_UserMacro_Expand_
  commentId: Overload:Yoakke.SynKit.C.Syntax.UserMacro.Expand
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.UserMacro.Expand
  nameWithType: UserMacro.Expand
- uid: Yoakke.SynKit.C.Syntax.UserMacro.Name
  name: Name
  href: api/Yoakke.SynKit.C.Syntax.UserMacro.html#Yoakke_SynKit_C_Syntax_UserMacro_Name
  commentId: P:Yoakke.SynKit.C.Syntax.UserMacro.Name
  fullName: Yoakke.SynKit.C.Syntax.UserMacro.Name
  nameWithType: UserMacro.Name
- uid: Yoakke.SynKit.C.Syntax.UserMacro.Name*
  name: Name
  href: api/Yoakke.SynKit.C.Syntax.UserMacro.html#Yoakke_SynKit_C_Syntax_UserMacro_Name_
  commentId: Overload:Yoakke.SynKit.C.Syntax.UserMacro.Name
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.UserMacro.Name
  nameWithType: UserMacro.Name
- uid: Yoakke.SynKit.C.Syntax.UserMacro.Parameters
  name: Parameters
  href: api/Yoakke.SynKit.C.Syntax.UserMacro.html#Yoakke_SynKit_C_Syntax_UserMacro_Parameters
  commentId: P:Yoakke.SynKit.C.Syntax.UserMacro.Parameters
  fullName: Yoakke.SynKit.C.Syntax.UserMacro.Parameters
  nameWithType: UserMacro.Parameters
- uid: Yoakke.SynKit.C.Syntax.UserMacro.Parameters*
  name: Parameters
  href: api/Yoakke.SynKit.C.Syntax.UserMacro.html#Yoakke_SynKit_C_Syntax_UserMacro_Parameters_
  commentId: Overload:Yoakke.SynKit.C.Syntax.UserMacro.Parameters
  isSpec: "True"
  fullName: Yoakke.SynKit.C.Syntax.UserMacro.Parameters
  nameWithType: UserMacro.Parameters
- uid: Yoakke.SynKit.Lexer
  name: Yoakke.SynKit.Lexer
  href: api/Yoakke.SynKit.Lexer.html
  commentId: N:Yoakke.SynKit.Lexer
  fullName: Yoakke.SynKit.Lexer
  nameWithType: Yoakke.SynKit.Lexer
- uid: Yoakke.SynKit.Lexer.CharStreamExtensions
  name: CharStreamExtensions
  href: api/Yoakke.SynKit.Lexer.CharStreamExtensions.html
  commentId: T:Yoakke.SynKit.Lexer.CharStreamExtensions
  fullName: Yoakke.SynKit.Lexer.CharStreamExtensions
  nameWithType: CharStreamExtensions
- uid: Yoakke.SynKit.Lexer.CharStreamExtensions.ConsumeText(Yoakke.SynKit.Lexer.ICharStream,System.Int32)
  name: ConsumeText(ICharStream, Int32)
  href: api/Yoakke.SynKit.Lexer.CharStreamExtensions.html#Yoakke_SynKit_Lexer_CharStreamExtensions_ConsumeText_Yoakke_SynKit_Lexer_ICharStream_System_Int32_
  commentId: M:Yoakke.SynKit.Lexer.CharStreamExtensions.ConsumeText(Yoakke.SynKit.Lexer.ICharStream,System.Int32)
  fullName: Yoakke.SynKit.Lexer.CharStreamExtensions.ConsumeText(Yoakke.SynKit.Lexer.ICharStream, System.Int32)
  nameWithType: CharStreamExtensions.ConsumeText(ICharStream, Int32)
- uid: Yoakke.SynKit.Lexer.CharStreamExtensions.ConsumeText(Yoakke.SynKit.Lexer.ICharStream,System.Int32,Yoakke.SynKit.Text.Range@)
  name: ConsumeText(ICharStream, Int32, out Range)
  href: api/Yoakke.SynKit.Lexer.CharStreamExtensions.html#Yoakke_SynKit_Lexer_CharStreamExtensions_ConsumeText_Yoakke_SynKit_Lexer_ICharStream_System_Int32_Yoakke_SynKit_Text_Range__
  commentId: M:Yoakke.SynKit.Lexer.CharStreamExtensions.ConsumeText(Yoakke.SynKit.Lexer.ICharStream,System.Int32,Yoakke.SynKit.Text.Range@)
  name.vb: ConsumeText(ICharStream, Int32, ByRef Range)
  fullName: Yoakke.SynKit.Lexer.CharStreamExtensions.ConsumeText(Yoakke.SynKit.Lexer.ICharStream, System.Int32, out Yoakke.SynKit.Text.Range)
  fullName.vb: Yoakke.SynKit.Lexer.CharStreamExtensions.ConsumeText(Yoakke.SynKit.Lexer.ICharStream, System.Int32, ByRef Yoakke.SynKit.Text.Range)
  nameWithType: CharStreamExtensions.ConsumeText(ICharStream, Int32, out Range)
  nameWithType.vb: CharStreamExtensions.ConsumeText(ICharStream, Int32, ByRef Range)
- uid: Yoakke.SynKit.Lexer.CharStreamExtensions.ConsumeText*
  name: ConsumeText
  href: api/Yoakke.SynKit.Lexer.CharStreamExtensions.html#Yoakke_SynKit_Lexer_CharStreamExtensions_ConsumeText_
  commentId: Overload:Yoakke.SynKit.Lexer.CharStreamExtensions.ConsumeText
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.CharStreamExtensions.ConsumeText
  nameWithType: CharStreamExtensions.ConsumeText
- uid: Yoakke.SynKit.Lexer.CharStreamExtensions.ConsumeToken*
  name: ConsumeToken
  href: api/Yoakke.SynKit.Lexer.CharStreamExtensions.html#Yoakke_SynKit_Lexer_CharStreamExtensions_ConsumeToken_
  commentId: Overload:Yoakke.SynKit.Lexer.CharStreamExtensions.ConsumeToken
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.CharStreamExtensions.ConsumeToken
  nameWithType: CharStreamExtensions.ConsumeToken
- uid: Yoakke.SynKit.Lexer.CharStreamExtensions.ConsumeToken``1(Yoakke.SynKit.Lexer.ICharStream,``0,System.Int32)
  name: ConsumeToken<TKind>(ICharStream, TKind, Int32)
  href: api/Yoakke.SynKit.Lexer.CharStreamExtensions.html#Yoakke_SynKit_Lexer_CharStreamExtensions_ConsumeToken__1_Yoakke_SynKit_Lexer_ICharStream___0_System_Int32_
  commentId: M:Yoakke.SynKit.Lexer.CharStreamExtensions.ConsumeToken``1(Yoakke.SynKit.Lexer.ICharStream,``0,System.Int32)
  name.vb: ConsumeToken(Of TKind)(ICharStream, TKind, Int32)
  fullName: Yoakke.SynKit.Lexer.CharStreamExtensions.ConsumeToken<TKind>(Yoakke.SynKit.Lexer.ICharStream, TKind, System.Int32)
  fullName.vb: Yoakke.SynKit.Lexer.CharStreamExtensions.ConsumeToken(Of TKind)(Yoakke.SynKit.Lexer.ICharStream, TKind, System.Int32)
  nameWithType: CharStreamExtensions.ConsumeToken<TKind>(ICharStream, TKind, Int32)
  nameWithType.vb: CharStreamExtensions.ConsumeToken(Of TKind)(ICharStream, TKind, Int32)
- uid: Yoakke.SynKit.Lexer.CharStreamExtensions.ConsumeToken``1(Yoakke.SynKit.Lexer.ICharStream,System.Int32,Func{Yoakke.SynKit.Text.Location,System.String,``0})
  name: ConsumeToken<TToken>(ICharStream, Int32, Func<Location, String, TToken>)
  href: api/Yoakke.SynKit.Lexer.CharStreamExtensions.html#Yoakke_SynKit_Lexer_CharStreamExtensions_ConsumeToken__1_Yoakke_SynKit_Lexer_ICharStream_System_Int32_Func_Yoakke_SynKit_Text_Location_System_String___0__
  commentId: M:Yoakke.SynKit.Lexer.CharStreamExtensions.ConsumeToken``1(Yoakke.SynKit.Lexer.ICharStream,System.Int32,Func{Yoakke.SynKit.Text.Location,System.String,``0})
  name.vb: ConsumeToken(Of TToken)(ICharStream, Int32, Func(Of Location, String, TToken))
  fullName: Yoakke.SynKit.Lexer.CharStreamExtensions.ConsumeToken<TToken>(Yoakke.SynKit.Lexer.ICharStream, System.Int32, Func<Yoakke.SynKit.Text.Location, System.String, TToken>)
  fullName.vb: Yoakke.SynKit.Lexer.CharStreamExtensions.ConsumeToken(Of TToken)(Yoakke.SynKit.Lexer.ICharStream, System.Int32, Func(Of Yoakke.SynKit.Text.Location, System.String, TToken))
  nameWithType: CharStreamExtensions.ConsumeToken<TToken>(ICharStream, Int32, Func<Location, String, TToken>)
  nameWithType.vb: CharStreamExtensions.ConsumeToken(Of TToken)(ICharStream, Int32, Func(Of Location, String, TToken))
- uid: Yoakke.SynKit.Lexer.CharStreamExtensions.LookAhead(Yoakke.SynKit.Lexer.ICharStream,System.Int32,System.Char)
  name: LookAhead(ICharStream, Int32, Char)
  href: api/Yoakke.SynKit.Lexer.CharStreamExtensions.html#Yoakke_SynKit_Lexer_CharStreamExtensions_LookAhead_Yoakke_SynKit_Lexer_ICharStream_System_Int32_System_Char_
  commentId: M:Yoakke.SynKit.Lexer.CharStreamExtensions.LookAhead(Yoakke.SynKit.Lexer.ICharStream,System.Int32,System.Char)
  fullName: Yoakke.SynKit.Lexer.CharStreamExtensions.LookAhead(Yoakke.SynKit.Lexer.ICharStream, System.Int32, System.Char)
  nameWithType: CharStreamExtensions.LookAhead(ICharStream, Int32, Char)
- uid: Yoakke.SynKit.Lexer.CharStreamExtensions.LookAhead*
  name: LookAhead
  href: api/Yoakke.SynKit.Lexer.CharStreamExtensions.html#Yoakke_SynKit_Lexer_CharStreamExtensions_LookAhead_
  commentId: Overload:Yoakke.SynKit.Lexer.CharStreamExtensions.LookAhead
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.CharStreamExtensions.LookAhead
  nameWithType: CharStreamExtensions.LookAhead
- uid: Yoakke.SynKit.Lexer.CharStreamExtensions.Matches(Yoakke.SynKit.Lexer.ICharStream,ReadOnlySpan{System.Char},System.Int32)
  name: Matches(ICharStream, ReadOnlySpan<Char>, Int32)
  href: api/Yoakke.SynKit.Lexer.CharStreamExtensions.html#Yoakke_SynKit_Lexer_CharStreamExtensions_Matches_Yoakke_SynKit_Lexer_ICharStream_ReadOnlySpan_System_Char__System_Int32_
  commentId: M:Yoakke.SynKit.Lexer.CharStreamExtensions.Matches(Yoakke.SynKit.Lexer.ICharStream,ReadOnlySpan{System.Char},System.Int32)
  name.vb: Matches(ICharStream, ReadOnlySpan(Of Char), Int32)
  fullName: Yoakke.SynKit.Lexer.CharStreamExtensions.Matches(Yoakke.SynKit.Lexer.ICharStream, ReadOnlySpan<System.Char>, System.Int32)
  fullName.vb: Yoakke.SynKit.Lexer.CharStreamExtensions.Matches(Yoakke.SynKit.Lexer.ICharStream, ReadOnlySpan(Of System.Char), System.Int32)
  nameWithType: CharStreamExtensions.Matches(ICharStream, ReadOnlySpan<Char>, Int32)
  nameWithType.vb: CharStreamExtensions.Matches(ICharStream, ReadOnlySpan(Of Char), Int32)
- uid: Yoakke.SynKit.Lexer.CharStreamExtensions.Matches(Yoakke.SynKit.Lexer.ICharStream,System.Char,System.Int32)
  name: Matches(ICharStream, Char, Int32)
  href: api/Yoakke.SynKit.Lexer.CharStreamExtensions.html#Yoakke_SynKit_Lexer_CharStreamExtensions_Matches_Yoakke_SynKit_Lexer_ICharStream_System_Char_System_Int32_
  commentId: M:Yoakke.SynKit.Lexer.CharStreamExtensions.Matches(Yoakke.SynKit.Lexer.ICharStream,System.Char,System.Int32)
  fullName: Yoakke.SynKit.Lexer.CharStreamExtensions.Matches(Yoakke.SynKit.Lexer.ICharStream, System.Char, System.Int32)
  nameWithType: CharStreamExtensions.Matches(ICharStream, Char, Int32)
- uid: Yoakke.SynKit.Lexer.CharStreamExtensions.Matches(Yoakke.SynKit.Lexer.ICharStream,System.String,System.Int32)
  name: Matches(ICharStream, String, Int32)
  href: api/Yoakke.SynKit.Lexer.CharStreamExtensions.html#Yoakke_SynKit_Lexer_CharStreamExtensions_Matches_Yoakke_SynKit_Lexer_ICharStream_System_String_System_Int32_
  commentId: M:Yoakke.SynKit.Lexer.CharStreamExtensions.Matches(Yoakke.SynKit.Lexer.ICharStream,System.String,System.Int32)
  fullName: Yoakke.SynKit.Lexer.CharStreamExtensions.Matches(Yoakke.SynKit.Lexer.ICharStream, System.String, System.Int32)
  nameWithType: CharStreamExtensions.Matches(ICharStream, String, Int32)
- uid: Yoakke.SynKit.Lexer.CharStreamExtensions.Matches*
  name: Matches
  href: api/Yoakke.SynKit.Lexer.CharStreamExtensions.html#Yoakke_SynKit_Lexer_CharStreamExtensions_Matches_
  commentId: Overload:Yoakke.SynKit.Lexer.CharStreamExtensions.Matches
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.CharStreamExtensions.Matches
  nameWithType: CharStreamExtensions.Matches
- uid: Yoakke.SynKit.Lexer.CharStreamExtensions.Peek(Yoakke.SynKit.Lexer.ICharStream,System.Char)
  name: Peek(ICharStream, Char)
  href: api/Yoakke.SynKit.Lexer.CharStreamExtensions.html#Yoakke_SynKit_Lexer_CharStreamExtensions_Peek_Yoakke_SynKit_Lexer_ICharStream_System_Char_
  commentId: M:Yoakke.SynKit.Lexer.CharStreamExtensions.Peek(Yoakke.SynKit.Lexer.ICharStream,System.Char)
  fullName: Yoakke.SynKit.Lexer.CharStreamExtensions.Peek(Yoakke.SynKit.Lexer.ICharStream, System.Char)
  nameWithType: CharStreamExtensions.Peek(ICharStream, Char)
- uid: Yoakke.SynKit.Lexer.CharStreamExtensions.Peek*
  name: Peek
  href: api/Yoakke.SynKit.Lexer.CharStreamExtensions.html#Yoakke_SynKit_Lexer_CharStreamExtensions_Peek_
  commentId: Overload:Yoakke.SynKit.Lexer.CharStreamExtensions.Peek
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.CharStreamExtensions.Peek
  nameWithType: CharStreamExtensions.Peek
- uid: Yoakke.SynKit.Lexer.Generator
  name: Yoakke.SynKit.Lexer.Generator
  href: api/Yoakke.SynKit.Lexer.Generator.html
  commentId: N:Yoakke.SynKit.Lexer.Generator
  fullName: Yoakke.SynKit.Lexer.Generator
  nameWithType: Yoakke.SynKit.Lexer.Generator
- uid: Yoakke.SynKit.Lexer.Generator.LexerSourceGenerator
  name: LexerSourceGenerator
  href: api/Yoakke.SynKit.Lexer.Generator.LexerSourceGenerator.html
  commentId: T:Yoakke.SynKit.Lexer.Generator.LexerSourceGenerator
  fullName: Yoakke.SynKit.Lexer.Generator.LexerSourceGenerator
  nameWithType: LexerSourceGenerator
- uid: Yoakke.SynKit.Lexer.Generator.LexerSourceGenerator.Initialize(IncrementalGeneratorInitializationContext)
  name: Initialize(IncrementalGeneratorInitializationContext)
  href: api/Yoakke.SynKit.Lexer.Generator.LexerSourceGenerator.html#Yoakke_SynKit_Lexer_Generator_LexerSourceGenerator_Initialize_IncrementalGeneratorInitializationContext_
  commentId: M:Yoakke.SynKit.Lexer.Generator.LexerSourceGenerator.Initialize(IncrementalGeneratorInitializationContext)
  fullName: Yoakke.SynKit.Lexer.Generator.LexerSourceGenerator.Initialize(IncrementalGeneratorInitializationContext)
  nameWithType: LexerSourceGenerator.Initialize(IncrementalGeneratorInitializationContext)
- uid: Yoakke.SynKit.Lexer.Generator.LexerSourceGenerator.Initialize*
  name: Initialize
  href: api/Yoakke.SynKit.Lexer.Generator.LexerSourceGenerator.html#Yoakke_SynKit_Lexer_Generator_LexerSourceGenerator_Initialize_
  commentId: Overload:Yoakke.SynKit.Lexer.Generator.LexerSourceGenerator.Initialize
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.Generator.LexerSourceGenerator.Initialize
  nameWithType: LexerSourceGenerator.Initialize
- uid: Yoakke.SynKit.Lexer.Generator.RegExParser
  name: RegExParser
  href: api/Yoakke.SynKit.Lexer.Generator.RegExParser.html
  commentId: T:Yoakke.SynKit.Lexer.Generator.RegExParser
  fullName: Yoakke.SynKit.Lexer.Generator.RegExParser
  nameWithType: RegExParser
- uid: Yoakke.SynKit.Lexer.Generator.RegExParser.Escape(System.String)
  name: Escape(String)
  href: api/Yoakke.SynKit.Lexer.Generator.RegExParser.html#Yoakke_SynKit_Lexer_Generator_RegExParser_Escape_System_String_
  commentId: M:Yoakke.SynKit.Lexer.Generator.RegExParser.Escape(System.String)
  fullName: Yoakke.SynKit.Lexer.Generator.RegExParser.Escape(System.String)
  nameWithType: RegExParser.Escape(String)
- uid: Yoakke.SynKit.Lexer.Generator.RegExParser.Escape*
  name: Escape
  href: api/Yoakke.SynKit.Lexer.Generator.RegExParser.html#Yoakke_SynKit_Lexer_Generator_RegExParser_Escape_
  commentId: Overload:Yoakke.SynKit.Lexer.Generator.RegExParser.Escape
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.Generator.RegExParser.Escape
  nameWithType: RegExParser.Escape
- uid: Yoakke.SynKit.Lexer.Generator.RegExParser.IsSpecial(System.Char)
  name: IsSpecial(Char)
  href: api/Yoakke.SynKit.Lexer.Generator.RegExParser.html#Yoakke_SynKit_Lexer_Generator_RegExParser_IsSpecial_System_Char_
  commentId: M:Yoakke.SynKit.Lexer.Generator.RegExParser.IsSpecial(System.Char)
  fullName: Yoakke.SynKit.Lexer.Generator.RegExParser.IsSpecial(System.Char)
  nameWithType: RegExParser.IsSpecial(Char)
- uid: Yoakke.SynKit.Lexer.Generator.RegExParser.IsSpecial*
  name: IsSpecial
  href: api/Yoakke.SynKit.Lexer.Generator.RegExParser.html#Yoakke_SynKit_Lexer_Generator_RegExParser_IsSpecial_
  commentId: Overload:Yoakke.SynKit.Lexer.Generator.RegExParser.IsSpecial
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.Generator.RegExParser.IsSpecial
  nameWithType: RegExParser.IsSpecial
- uid: Yoakke.SynKit.Lexer.Generator.RegExParser.Parse(System.String)
  name: Parse(String)
  href: api/Yoakke.SynKit.Lexer.Generator.RegExParser.html#Yoakke_SynKit_Lexer_Generator_RegExParser_Parse_System_String_
  commentId: M:Yoakke.SynKit.Lexer.Generator.RegExParser.Parse(System.String)
  fullName: Yoakke.SynKit.Lexer.Generator.RegExParser.Parse(System.String)
  nameWithType: RegExParser.Parse(String)
- uid: Yoakke.SynKit.Lexer.Generator.RegExParser.Parse*
  name: Parse
  href: api/Yoakke.SynKit.Lexer.Generator.RegExParser.html#Yoakke_SynKit_Lexer_Generator_RegExParser_Parse_
  commentId: Overload:Yoakke.SynKit.Lexer.Generator.RegExParser.Parse
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.Generator.RegExParser.Parse
  nameWithType: RegExParser.Parse
- uid: Yoakke.SynKit.Lexer.ICharStream
  name: ICharStream
  href: api/Yoakke.SynKit.Lexer.ICharStream.html
  commentId: T:Yoakke.SynKit.Lexer.ICharStream
  fullName: Yoakke.SynKit.Lexer.ICharStream
  nameWithType: ICharStream
- uid: Yoakke.SynKit.Lexer.ICharStream.Position
  name: Position
  href: api/Yoakke.SynKit.Lexer.ICharStream.html#Yoakke_SynKit_Lexer_ICharStream_Position
  commentId: P:Yoakke.SynKit.Lexer.ICharStream.Position
  fullName: Yoakke.SynKit.Lexer.ICharStream.Position
  nameWithType: ICharStream.Position
- uid: Yoakke.SynKit.Lexer.ICharStream.Position*
  name: Position
  href: api/Yoakke.SynKit.Lexer.ICharStream.html#Yoakke_SynKit_Lexer_ICharStream_Position_
  commentId: Overload:Yoakke.SynKit.Lexer.ICharStream.Position
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.ICharStream.Position
  nameWithType: ICharStream.Position
- uid: Yoakke.SynKit.Lexer.ICharStream.SourceFile
  name: SourceFile
  href: api/Yoakke.SynKit.Lexer.ICharStream.html#Yoakke_SynKit_Lexer_ICharStream_SourceFile
  commentId: P:Yoakke.SynKit.Lexer.ICharStream.SourceFile
  fullName: Yoakke.SynKit.Lexer.ICharStream.SourceFile
  nameWithType: ICharStream.SourceFile
- uid: Yoakke.SynKit.Lexer.ICharStream.SourceFile*
  name: SourceFile
  href: api/Yoakke.SynKit.Lexer.ICharStream.html#Yoakke_SynKit_Lexer_ICharStream_SourceFile_
  commentId: Overload:Yoakke.SynKit.Lexer.ICharStream.SourceFile
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.ICharStream.SourceFile
  nameWithType: ICharStream.SourceFile
- uid: Yoakke.SynKit.Lexer.ILexer`1
  name: ILexer<TToken>
  href: api/Yoakke.SynKit.Lexer.ILexer-1.html
  commentId: T:Yoakke.SynKit.Lexer.ILexer`1
  name.vb: ILexer(Of TToken)
  fullName: Yoakke.SynKit.Lexer.ILexer<TToken>
  fullName.vb: Yoakke.SynKit.Lexer.ILexer(Of TToken)
  nameWithType: ILexer<TToken>
  nameWithType.vb: ILexer(Of TToken)
- uid: Yoakke.SynKit.Lexer.ILexer`1.IsEnd
  name: IsEnd
  href: api/Yoakke.SynKit.Lexer.ILexer-1.html#Yoakke_SynKit_Lexer_ILexer_1_IsEnd
  commentId: P:Yoakke.SynKit.Lexer.ILexer`1.IsEnd
  fullName: Yoakke.SynKit.Lexer.ILexer<TToken>.IsEnd
  fullName.vb: Yoakke.SynKit.Lexer.ILexer(Of TToken).IsEnd
  nameWithType: ILexer<TToken>.IsEnd
  nameWithType.vb: ILexer(Of TToken).IsEnd
- uid: Yoakke.SynKit.Lexer.ILexer`1.IsEnd*
  name: IsEnd
  href: api/Yoakke.SynKit.Lexer.ILexer-1.html#Yoakke_SynKit_Lexer_ILexer_1_IsEnd_
  commentId: Overload:Yoakke.SynKit.Lexer.ILexer`1.IsEnd
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.ILexer<TToken>.IsEnd
  fullName.vb: Yoakke.SynKit.Lexer.ILexer(Of TToken).IsEnd
  nameWithType: ILexer<TToken>.IsEnd
  nameWithType.vb: ILexer(Of TToken).IsEnd
- uid: Yoakke.SynKit.Lexer.ILexer`1.Next
  name: Next()
  href: api/Yoakke.SynKit.Lexer.ILexer-1.html#Yoakke_SynKit_Lexer_ILexer_1_Next
  commentId: M:Yoakke.SynKit.Lexer.ILexer`1.Next
  fullName: Yoakke.SynKit.Lexer.ILexer<TToken>.Next()
  fullName.vb: Yoakke.SynKit.Lexer.ILexer(Of TToken).Next()
  nameWithType: ILexer<TToken>.Next()
  nameWithType.vb: ILexer(Of TToken).Next()
- uid: Yoakke.SynKit.Lexer.ILexer`1.Next*
  name: Next
  href: api/Yoakke.SynKit.Lexer.ILexer-1.html#Yoakke_SynKit_Lexer_ILexer_1_Next_
  commentId: Overload:Yoakke.SynKit.Lexer.ILexer`1.Next
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.ILexer<TToken>.Next
  fullName.vb: Yoakke.SynKit.Lexer.ILexer(Of TToken).Next
  nameWithType: ILexer<TToken>.Next
  nameWithType.vb: ILexer(Of TToken).Next
- uid: Yoakke.SynKit.Lexer.ILexer`1.Position
  name: Position
  href: api/Yoakke.SynKit.Lexer.ILexer-1.html#Yoakke_SynKit_Lexer_ILexer_1_Position
  commentId: P:Yoakke.SynKit.Lexer.ILexer`1.Position
  fullName: Yoakke.SynKit.Lexer.ILexer<TToken>.Position
  fullName.vb: Yoakke.SynKit.Lexer.ILexer(Of TToken).Position
  nameWithType: ILexer<TToken>.Position
  nameWithType.vb: ILexer(Of TToken).Position
- uid: Yoakke.SynKit.Lexer.ILexer`1.Position*
  name: Position
  href: api/Yoakke.SynKit.Lexer.ILexer-1.html#Yoakke_SynKit_Lexer_ILexer_1_Position_
  commentId: Overload:Yoakke.SynKit.Lexer.ILexer`1.Position
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.ILexer<TToken>.Position
  fullName.vb: Yoakke.SynKit.Lexer.ILexer(Of TToken).Position
  nameWithType: ILexer<TToken>.Position
  nameWithType.vb: ILexer(Of TToken).Position
- uid: Yoakke.SynKit.Lexer.IToken
  name: IToken
  href: api/Yoakke.SynKit.Lexer.IToken.html
  commentId: T:Yoakke.SynKit.Lexer.IToken
  fullName: Yoakke.SynKit.Lexer.IToken
  nameWithType: IToken
- uid: Yoakke.SynKit.Lexer.IToken.Location
  name: Location
  href: api/Yoakke.SynKit.Lexer.IToken.html#Yoakke_SynKit_Lexer_IToken_Location
  commentId: P:Yoakke.SynKit.Lexer.IToken.Location
  fullName: Yoakke.SynKit.Lexer.IToken.Location
  nameWithType: IToken.Location
- uid: Yoakke.SynKit.Lexer.IToken.Location*
  name: Location
  href: api/Yoakke.SynKit.Lexer.IToken.html#Yoakke_SynKit_Lexer_IToken_Location_
  commentId: Overload:Yoakke.SynKit.Lexer.IToken.Location
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.IToken.Location
  nameWithType: IToken.Location
- uid: Yoakke.SynKit.Lexer.IToken.Range
  name: Range
  href: api/Yoakke.SynKit.Lexer.IToken.html#Yoakke_SynKit_Lexer_IToken_Range
  commentId: P:Yoakke.SynKit.Lexer.IToken.Range
  fullName: Yoakke.SynKit.Lexer.IToken.Range
  nameWithType: IToken.Range
- uid: Yoakke.SynKit.Lexer.IToken.Range*
  name: Range
  href: api/Yoakke.SynKit.Lexer.IToken.html#Yoakke_SynKit_Lexer_IToken_Range_
  commentId: Overload:Yoakke.SynKit.Lexer.IToken.Range
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.IToken.Range
  nameWithType: IToken.Range
- uid: Yoakke.SynKit.Lexer.IToken.Text
  name: Text
  href: api/Yoakke.SynKit.Lexer.IToken.html#Yoakke_SynKit_Lexer_IToken_Text
  commentId: P:Yoakke.SynKit.Lexer.IToken.Text
  fullName: Yoakke.SynKit.Lexer.IToken.Text
  nameWithType: IToken.Text
- uid: Yoakke.SynKit.Lexer.IToken.Text*
  name: Text
  href: api/Yoakke.SynKit.Lexer.IToken.html#Yoakke_SynKit_Lexer_IToken_Text_
  commentId: Overload:Yoakke.SynKit.Lexer.IToken.Text
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.IToken.Text
  nameWithType: IToken.Text
- uid: Yoakke.SynKit.Lexer.IToken`1
  name: IToken<TKind>
  href: api/Yoakke.SynKit.Lexer.IToken-1.html
  commentId: T:Yoakke.SynKit.Lexer.IToken`1
  name.vb: IToken(Of TKind)
  fullName: Yoakke.SynKit.Lexer.IToken<TKind>
  fullName.vb: Yoakke.SynKit.Lexer.IToken(Of TKind)
  nameWithType: IToken<TKind>
  nameWithType.vb: IToken(Of TKind)
- uid: Yoakke.SynKit.Lexer.IToken`1.Kind
  name: Kind
  href: api/Yoakke.SynKit.Lexer.IToken-1.html#Yoakke_SynKit_Lexer_IToken_1_Kind
  commentId: P:Yoakke.SynKit.Lexer.IToken`1.Kind
  fullName: Yoakke.SynKit.Lexer.IToken<TKind>.Kind
  fullName.vb: Yoakke.SynKit.Lexer.IToken(Of TKind).Kind
  nameWithType: IToken<TKind>.Kind
  nameWithType.vb: IToken(Of TKind).Kind
- uid: Yoakke.SynKit.Lexer.IToken`1.Kind*
  name: Kind
  href: api/Yoakke.SynKit.Lexer.IToken-1.html#Yoakke_SynKit_Lexer_IToken_1_Kind_
  commentId: Overload:Yoakke.SynKit.Lexer.IToken`1.Kind
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.IToken<TKind>.Kind
  fullName.vb: Yoakke.SynKit.Lexer.IToken(Of TKind).Kind
  nameWithType: IToken<TKind>.Kind
  nameWithType.vb: IToken(Of TKind).Kind
- uid: Yoakke.SynKit.Lexer.LexerExtensions
  name: LexerExtensions
  href: api/Yoakke.SynKit.Lexer.LexerExtensions.html
  commentId: T:Yoakke.SynKit.Lexer.LexerExtensions
  fullName: Yoakke.SynKit.Lexer.LexerExtensions
  nameWithType: LexerExtensions
- uid: Yoakke.SynKit.Lexer.LexerExtensions.ToStream*
  name: ToStream
  href: api/Yoakke.SynKit.Lexer.LexerExtensions.html#Yoakke_SynKit_Lexer_LexerExtensions_ToStream_
  commentId: Overload:Yoakke.SynKit.Lexer.LexerExtensions.ToStream
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.LexerExtensions.ToStream
  nameWithType: LexerExtensions.ToStream
- uid: Yoakke.SynKit.Lexer.LexerExtensions.ToStream``1(Yoakke.SynKit.Lexer.ILexer{``0})
  name: ToStream<TToken>(ILexer<TToken>)
  href: api/Yoakke.SynKit.Lexer.LexerExtensions.html#Yoakke_SynKit_Lexer_LexerExtensions_ToStream__1_Yoakke_SynKit_Lexer_ILexer___0__
  commentId: M:Yoakke.SynKit.Lexer.LexerExtensions.ToStream``1(Yoakke.SynKit.Lexer.ILexer{``0})
  name.vb: ToStream(Of TToken)(ILexer(Of TToken))
  fullName: Yoakke.SynKit.Lexer.LexerExtensions.ToStream<TToken>(Yoakke.SynKit.Lexer.ILexer<TToken>)
  fullName.vb: Yoakke.SynKit.Lexer.LexerExtensions.ToStream(Of TToken)(Yoakke.SynKit.Lexer.ILexer(Of TToken))
  nameWithType: LexerExtensions.ToStream<TToken>(ILexer<TToken>)
  nameWithType.vb: LexerExtensions.ToStream(Of TToken)(ILexer(Of TToken))
- uid: Yoakke.SynKit.Lexer.Regexes
  name: Regexes
  href: api/Yoakke.SynKit.Lexer.Regexes.html
  commentId: T:Yoakke.SynKit.Lexer.Regexes
  fullName: Yoakke.SynKit.Lexer.Regexes
  nameWithType: Regexes
- uid: Yoakke.SynKit.Lexer.Regexes.HexLiteral
  name: HexLiteral
  href: api/Yoakke.SynKit.Lexer.Regexes.html#Yoakke_SynKit_Lexer_Regexes_HexLiteral
  commentId: F:Yoakke.SynKit.Lexer.Regexes.HexLiteral
  fullName: Yoakke.SynKit.Lexer.Regexes.HexLiteral
  nameWithType: Regexes.HexLiteral
- uid: Yoakke.SynKit.Lexer.Regexes.Identifier
  name: Identifier
  href: api/Yoakke.SynKit.Lexer.Regexes.html#Yoakke_SynKit_Lexer_Regexes_Identifier
  commentId: F:Yoakke.SynKit.Lexer.Regexes.Identifier
  fullName: Yoakke.SynKit.Lexer.Regexes.Identifier
  nameWithType: Regexes.Identifier
- uid: Yoakke.SynKit.Lexer.Regexes.IeeeFloatLiteral
  name: IeeeFloatLiteral
  href: api/Yoakke.SynKit.Lexer.Regexes.html#Yoakke_SynKit_Lexer_Regexes_IeeeFloatLiteral
  commentId: F:Yoakke.SynKit.Lexer.Regexes.IeeeFloatLiteral
  fullName: Yoakke.SynKit.Lexer.Regexes.IeeeFloatLiteral
  nameWithType: Regexes.IeeeFloatLiteral
- uid: Yoakke.SynKit.Lexer.Regexes.IntLiteral
  name: IntLiteral
  href: api/Yoakke.SynKit.Lexer.Regexes.html#Yoakke_SynKit_Lexer_Regexes_IntLiteral
  commentId: F:Yoakke.SynKit.Lexer.Regexes.IntLiteral
  fullName: Yoakke.SynKit.Lexer.Regexes.IntLiteral
  nameWithType: Regexes.IntLiteral
- uid: Yoakke.SynKit.Lexer.Regexes.LineComment
  name: LineComment
  href: api/Yoakke.SynKit.Lexer.Regexes.html#Yoakke_SynKit_Lexer_Regexes_LineComment
  commentId: F:Yoakke.SynKit.Lexer.Regexes.LineComment
  fullName: Yoakke.SynKit.Lexer.Regexes.LineComment
  nameWithType: Regexes.LineComment
- uid: Yoakke.SynKit.Lexer.Regexes.MultilineComment
  name: MultilineComment
  href: api/Yoakke.SynKit.Lexer.Regexes.html#Yoakke_SynKit_Lexer_Regexes_MultilineComment
  commentId: F:Yoakke.SynKit.Lexer.Regexes.MultilineComment
  fullName: Yoakke.SynKit.Lexer.Regexes.MultilineComment
  nameWithType: Regexes.MultilineComment
- uid: Yoakke.SynKit.Lexer.Regexes.RealNumberLiteral
  name: RealNumberLiteral
  href: api/Yoakke.SynKit.Lexer.Regexes.html#Yoakke_SynKit_Lexer_Regexes_RealNumberLiteral
  commentId: F:Yoakke.SynKit.Lexer.Regexes.RealNumberLiteral
  fullName: Yoakke.SynKit.Lexer.Regexes.RealNumberLiteral
  nameWithType: Regexes.RealNumberLiteral
- uid: Yoakke.SynKit.Lexer.Regexes.StringLiteral
  name: StringLiteral
  href: api/Yoakke.SynKit.Lexer.Regexes.html#Yoakke_SynKit_Lexer_Regexes_StringLiteral
  commentId: F:Yoakke.SynKit.Lexer.Regexes.StringLiteral
  fullName: Yoakke.SynKit.Lexer.Regexes.StringLiteral
  nameWithType: Regexes.StringLiteral
- uid: Yoakke.SynKit.Lexer.Regexes.Whitespace
  name: Whitespace
  href: api/Yoakke.SynKit.Lexer.Regexes.html#Yoakke_SynKit_Lexer_Regexes_Whitespace
  commentId: F:Yoakke.SynKit.Lexer.Regexes.Whitespace
  fullName: Yoakke.SynKit.Lexer.Regexes.Whitespace
  nameWithType: Regexes.Whitespace
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream
  name: TextReaderCharStream
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html
  commentId: T:Yoakke.SynKit.Lexer.TextReaderCharStream
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream
  nameWithType: TextReaderCharStream
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream.#ctor(TextReader)
  name: TextReaderCharStream(TextReader)
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html#Yoakke_SynKit_Lexer_TextReaderCharStream__ctor_TextReader_
  commentId: M:Yoakke.SynKit.Lexer.TextReaderCharStream.#ctor(TextReader)
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream.TextReaderCharStream(TextReader)
  nameWithType: TextReaderCharStream.TextReaderCharStream(TextReader)
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream.#ctor(Yoakke.SynKit.Text.ISourceFile)
  name: TextReaderCharStream(ISourceFile)
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html#Yoakke_SynKit_Lexer_TextReaderCharStream__ctor_Yoakke_SynKit_Text_ISourceFile_
  commentId: M:Yoakke.SynKit.Lexer.TextReaderCharStream.#ctor(Yoakke.SynKit.Text.ISourceFile)
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream.TextReaderCharStream(Yoakke.SynKit.Text.ISourceFile)
  nameWithType: TextReaderCharStream.TextReaderCharStream(ISourceFile)
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream.#ctor(Yoakke.SynKit.Text.SourceFile)
  name: TextReaderCharStream(SourceFile)
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html#Yoakke_SynKit_Lexer_TextReaderCharStream__ctor_Yoakke_SynKit_Text_SourceFile_
  commentId: M:Yoakke.SynKit.Lexer.TextReaderCharStream.#ctor(Yoakke.SynKit.Text.SourceFile)
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream.TextReaderCharStream(Yoakke.SynKit.Text.SourceFile)
  nameWithType: TextReaderCharStream.TextReaderCharStream(SourceFile)
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream.#ctor*
  name: TextReaderCharStream
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html#Yoakke_SynKit_Lexer_TextReaderCharStream__ctor_
  commentId: Overload:Yoakke.SynKit.Lexer.TextReaderCharStream.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream.TextReaderCharStream
  nameWithType: TextReaderCharStream.TextReaderCharStream
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream.Consume(System.Int32)
  name: Consume(Int32)
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html#Yoakke_SynKit_Lexer_TextReaderCharStream_Consume_System_Int32_
  commentId: M:Yoakke.SynKit.Lexer.TextReaderCharStream.Consume(System.Int32)
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream.Consume(System.Int32)
  nameWithType: TextReaderCharStream.Consume(Int32)
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream.Consume*
  name: Consume
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html#Yoakke_SynKit_Lexer_TextReaderCharStream_Consume_
  commentId: Overload:Yoakke.SynKit.Lexer.TextReaderCharStream.Consume
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream.Consume
  nameWithType: TextReaderCharStream.Consume
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream.Defer(System.Char)
  name: Defer(Char)
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html#Yoakke_SynKit_Lexer_TextReaderCharStream_Defer_System_Char_
  commentId: M:Yoakke.SynKit.Lexer.TextReaderCharStream.Defer(System.Char)
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream.Defer(System.Char)
  nameWithType: TextReaderCharStream.Defer(Char)
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream.Defer*
  name: Defer
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html#Yoakke_SynKit_Lexer_TextReaderCharStream_Defer_
  commentId: Overload:Yoakke.SynKit.Lexer.TextReaderCharStream.Defer
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream.Defer
  nameWithType: TextReaderCharStream.Defer
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream.IsEnd
  name: IsEnd
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html#Yoakke_SynKit_Lexer_TextReaderCharStream_IsEnd
  commentId: P:Yoakke.SynKit.Lexer.TextReaderCharStream.IsEnd
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream.IsEnd
  nameWithType: TextReaderCharStream.IsEnd
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream.IsEnd*
  name: IsEnd
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html#Yoakke_SynKit_Lexer_TextReaderCharStream_IsEnd_
  commentId: Overload:Yoakke.SynKit.Lexer.TextReaderCharStream.IsEnd
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream.IsEnd
  nameWithType: TextReaderCharStream.IsEnd
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream.Position
  name: Position
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html#Yoakke_SynKit_Lexer_TextReaderCharStream_Position
  commentId: P:Yoakke.SynKit.Lexer.TextReaderCharStream.Position
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream.Position
  nameWithType: TextReaderCharStream.Position
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream.Position*
  name: Position
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html#Yoakke_SynKit_Lexer_TextReaderCharStream_Position_
  commentId: Overload:Yoakke.SynKit.Lexer.TextReaderCharStream.Position
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream.Position
  nameWithType: TextReaderCharStream.Position
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream.SourceFile
  name: SourceFile
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html#Yoakke_SynKit_Lexer_TextReaderCharStream_SourceFile
  commentId: P:Yoakke.SynKit.Lexer.TextReaderCharStream.SourceFile
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream.SourceFile
  nameWithType: TextReaderCharStream.SourceFile
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream.SourceFile*
  name: SourceFile
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html#Yoakke_SynKit_Lexer_TextReaderCharStream_SourceFile_
  commentId: Overload:Yoakke.SynKit.Lexer.TextReaderCharStream.SourceFile
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream.SourceFile
  nameWithType: TextReaderCharStream.SourceFile
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream.TryConsume(System.Char@)
  name: TryConsume(out Char)
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html#Yoakke_SynKit_Lexer_TextReaderCharStream_TryConsume_System_Char__
  commentId: M:Yoakke.SynKit.Lexer.TextReaderCharStream.TryConsume(System.Char@)
  name.vb: TryConsume(ByRef Char)
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream.TryConsume(out System.Char)
  fullName.vb: Yoakke.SynKit.Lexer.TextReaderCharStream.TryConsume(ByRef System.Char)
  nameWithType: TextReaderCharStream.TryConsume(out Char)
  nameWithType.vb: TextReaderCharStream.TryConsume(ByRef Char)
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream.TryConsume*
  name: TryConsume
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html#Yoakke_SynKit_Lexer_TextReaderCharStream_TryConsume_
  commentId: Overload:Yoakke.SynKit.Lexer.TextReaderCharStream.TryConsume
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream.TryConsume
  nameWithType: TextReaderCharStream.TryConsume
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream.TryLookAhead(System.Int32,System.Char@)
  name: TryLookAhead(Int32, out Char)
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html#Yoakke_SynKit_Lexer_TextReaderCharStream_TryLookAhead_System_Int32_System_Char__
  commentId: M:Yoakke.SynKit.Lexer.TextReaderCharStream.TryLookAhead(System.Int32,System.Char@)
  name.vb: TryLookAhead(Int32, ByRef Char)
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream.TryLookAhead(System.Int32, out System.Char)
  fullName.vb: Yoakke.SynKit.Lexer.TextReaderCharStream.TryLookAhead(System.Int32, ByRef System.Char)
  nameWithType: TextReaderCharStream.TryLookAhead(Int32, out Char)
  nameWithType.vb: TextReaderCharStream.TryLookAhead(Int32, ByRef Char)
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream.TryLookAhead*
  name: TryLookAhead
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html#Yoakke_SynKit_Lexer_TextReaderCharStream_TryLookAhead_
  commentId: Overload:Yoakke.SynKit.Lexer.TextReaderCharStream.TryLookAhead
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream.TryLookAhead
  nameWithType: TextReaderCharStream.TryLookAhead
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream.TryPeek(System.Char@)
  name: TryPeek(out Char)
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html#Yoakke_SynKit_Lexer_TextReaderCharStream_TryPeek_System_Char__
  commentId: M:Yoakke.SynKit.Lexer.TextReaderCharStream.TryPeek(System.Char@)
  name.vb: TryPeek(ByRef Char)
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream.TryPeek(out System.Char)
  fullName.vb: Yoakke.SynKit.Lexer.TextReaderCharStream.TryPeek(ByRef System.Char)
  nameWithType: TextReaderCharStream.TryPeek(out Char)
  nameWithType.vb: TextReaderCharStream.TryPeek(ByRef Char)
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream.TryPeek*
  name: TryPeek
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html#Yoakke_SynKit_Lexer_TextReaderCharStream_TryPeek_
  commentId: Overload:Yoakke.SynKit.Lexer.TextReaderCharStream.TryPeek
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream.TryPeek
  nameWithType: TextReaderCharStream.TryPeek
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream.Underlying
  name: Underlying
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html#Yoakke_SynKit_Lexer_TextReaderCharStream_Underlying
  commentId: P:Yoakke.SynKit.Lexer.TextReaderCharStream.Underlying
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream.Underlying
  nameWithType: TextReaderCharStream.Underlying
- uid: Yoakke.SynKit.Lexer.TextReaderCharStream.Underlying*
  name: Underlying
  href: api/Yoakke.SynKit.Lexer.TextReaderCharStream.html#Yoakke_SynKit_Lexer_TextReaderCharStream_Underlying_
  commentId: Overload:Yoakke.SynKit.Lexer.TextReaderCharStream.Underlying
  isSpec: "True"
  fullName: Yoakke.SynKit.Lexer.TextReaderCharStream.Underlying
  nameWithType: TextReaderCharStream.Underlying
- uid: Yoakke.SynKit.Parser
  name: Yoakke.SynKit.Parser
  href: api/Yoakke.SynKit.Parser.html
  commentId: N:Yoakke.SynKit.Parser
  fullName: Yoakke.SynKit.Parser
  nameWithType: Yoakke.SynKit.Parser
- uid: Yoakke.SynKit.Parser.Combinator
  name: Combinator
  href: api/Yoakke.SynKit.Parser.Combinator.html
  commentId: T:Yoakke.SynKit.Parser.Combinator
  fullName: Yoakke.SynKit.Parser.Combinator
  nameWithType: Combinator
- uid: Yoakke.SynKit.Parser.Combinator.Alt*
  name: Alt
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Alt_
  commentId: Overload:Yoakke.SynKit.Parser.Combinator.Alt
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.Combinator.Alt
  nameWithType: Combinator.Alt
- uid: Yoakke.SynKit.Parser.Combinator.Alt``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name: Alt<TItem, TResult>(Combinator.Parser<TItem, TResult>)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Alt__2_Yoakke_SynKit_Parser_Combinator_Parser___0___1__
  commentId: M:Yoakke.SynKit.Parser.Combinator.Alt``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name.vb: Alt(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult))
  fullName: Yoakke.SynKit.Parser.Combinator.Alt<TItem, TResult>(Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Alt(Of TItem, TResult)(Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult))
  nameWithType: Combinator.Alt<TItem, TResult>(Combinator.Parser<TItem, TResult>)
  nameWithType.vb: Combinator.Alt(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult))
- uid: Yoakke.SynKit.Parser.Combinator.Alt``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name: Alt<TItem, TResult>(Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Alt__2_Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__
  commentId: M:Yoakke.SynKit.Parser.Combinator.Alt``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name.vb: Alt(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult))
  fullName: Yoakke.SynKit.Parser.Combinator.Alt<TItem, TResult>(Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Alt(Of TItem, TResult)(Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult))
  nameWithType: Combinator.Alt<TItem, TResult>(Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>)
  nameWithType.vb: Combinator.Alt(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult))
- uid: Yoakke.SynKit.Parser.Combinator.Alt``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name: Alt<TItem, TResult>(Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Alt__2_Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__
  commentId: M:Yoakke.SynKit.Parser.Combinator.Alt``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name.vb: Alt(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult))
  fullName: Yoakke.SynKit.Parser.Combinator.Alt<TItem, TResult>(Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Alt(Of TItem, TResult)(Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult))
  nameWithType: Combinator.Alt<TItem, TResult>(Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>)
  nameWithType.vb: Combinator.Alt(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult))
- uid: Yoakke.SynKit.Parser.Combinator.Alt``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name: Alt<TItem, TResult>(Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Alt__2_Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__
  commentId: M:Yoakke.SynKit.Parser.Combinator.Alt``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name.vb: Alt(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult))
  fullName: Yoakke.SynKit.Parser.Combinator.Alt<TItem, TResult>(Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Alt(Of TItem, TResult)(Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult))
  nameWithType: Combinator.Alt<TItem, TResult>(Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>)
  nameWithType.vb: Combinator.Alt(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult))
- uid: Yoakke.SynKit.Parser.Combinator.Alt``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name: Alt<TItem, TResult>(Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Alt__2_Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__
  commentId: M:Yoakke.SynKit.Parser.Combinator.Alt``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name.vb: Alt(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult))
  fullName: Yoakke.SynKit.Parser.Combinator.Alt<TItem, TResult>(Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Alt(Of TItem, TResult)(Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult))
  nameWithType: Combinator.Alt<TItem, TResult>(Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>)
  nameWithType.vb: Combinator.Alt(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult))
- uid: Yoakke.SynKit.Parser.Combinator.Alt``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name: Alt<TItem, TResult>(Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Alt__2_Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__
  commentId: M:Yoakke.SynKit.Parser.Combinator.Alt``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name.vb: Alt(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult))
  fullName: Yoakke.SynKit.Parser.Combinator.Alt<TItem, TResult>(Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Alt(Of TItem, TResult)(Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult))
  nameWithType: Combinator.Alt<TItem, TResult>(Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>)
  nameWithType.vb: Combinator.Alt(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult))
- uid: Yoakke.SynKit.Parser.Combinator.Alt``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name: Alt<TItem, TResult>(Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Alt__2_Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__
  commentId: M:Yoakke.SynKit.Parser.Combinator.Alt``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name.vb: Alt(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult))
  fullName: Yoakke.SynKit.Parser.Combinator.Alt<TItem, TResult>(Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Alt(Of TItem, TResult)(Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult))
  nameWithType: Combinator.Alt<TItem, TResult>(Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>)
  nameWithType.vb: Combinator.Alt(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult))
- uid: Yoakke.SynKit.Parser.Combinator.Alt``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name: Alt<TItem, TResult>(Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Alt__2_Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___1__
  commentId: M:Yoakke.SynKit.Parser.Combinator.Alt``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name.vb: Alt(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult))
  fullName: Yoakke.SynKit.Parser.Combinator.Alt<TItem, TResult>(Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Alt(Of TItem, TResult)(Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult))
  nameWithType: Combinator.Alt<TItem, TResult>(Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>, Combinator.Parser<TItem, TResult>)
  nameWithType.vb: Combinator.Alt(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult), Combinator.Parser(Of TItem, TResult))
- uid: Yoakke.SynKit.Parser.Combinator.Char(System.Char)
  name: Char(Char)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Char_System_Char_
  commentId: M:Yoakke.SynKit.Parser.Combinator.Char(System.Char)
  fullName: Yoakke.SynKit.Parser.Combinator.Char(System.Char)
  nameWithType: Combinator.Char(Char)
- uid: Yoakke.SynKit.Parser.Combinator.Char*
  name: Char
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Char_
  commentId: Overload:Yoakke.SynKit.Parser.Combinator.Char
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.Combinator.Char
  nameWithType: Combinator.Char
- uid: Yoakke.SynKit.Parser.Combinator.Item*
  name: Item
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Item_
  commentId: Overload:Yoakke.SynKit.Parser.Combinator.Item
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.Combinator.Item
  nameWithType: Combinator.Item
- uid: Yoakke.SynKit.Parser.Combinator.Item``1
  name: Item<TItem>()
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Item__1
  commentId: M:Yoakke.SynKit.Parser.Combinator.Item``1
  name.vb: Item(Of TItem)()
  fullName: Yoakke.SynKit.Parser.Combinator.Item<TItem>()
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Item(Of TItem)()
  nameWithType: Combinator.Item<TItem>()
  nameWithType.vb: Combinator.Item(Of TItem)()
- uid: Yoakke.SynKit.Parser.Combinator.Item``1(``0)
  name: Item<TItem>(TItem)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Item__1___0_
  commentId: M:Yoakke.SynKit.Parser.Combinator.Item``1(``0)
  name.vb: Item(Of TItem)(TItem)
  fullName: Yoakke.SynKit.Parser.Combinator.Item<TItem>(TItem)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Item(Of TItem)(TItem)
  nameWithType: Combinator.Item<TItem>(TItem)
  nameWithType.vb: Combinator.Item(Of TItem)(TItem)
- uid: Yoakke.SynKit.Parser.Combinator.Kind*
  name: Kind
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Kind_
  commentId: Overload:Yoakke.SynKit.Parser.Combinator.Kind
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.Combinator.Kind
  nameWithType: Combinator.Kind
- uid: Yoakke.SynKit.Parser.Combinator.Kind``1(``0)
  name: Kind<TKind>(TKind)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Kind__1___0_
  commentId: M:Yoakke.SynKit.Parser.Combinator.Kind``1(``0)
  name.vb: Kind(Of TKind)(TKind)
  fullName: Yoakke.SynKit.Parser.Combinator.Kind<TKind>(TKind)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Kind(Of TKind)(TKind)
  nameWithType: Combinator.Kind<TKind>(TKind)
  nameWithType.vb: Combinator.Kind(Of TKind)(TKind)
- uid: Yoakke.SynKit.Parser.Combinator.Opt*
  name: Opt
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Opt_
  commentId: Overload:Yoakke.SynKit.Parser.Combinator.Opt
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.Combinator.Opt
  nameWithType: Combinator.Opt
- uid: Yoakke.SynKit.Parser.Combinator.Opt``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name: Opt<TItem, TResult>(Combinator.Parser<TItem, TResult>)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Opt__2_Yoakke_SynKit_Parser_Combinator_Parser___0___1__
  commentId: M:Yoakke.SynKit.Parser.Combinator.Opt``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name.vb: Opt(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult))
  fullName: Yoakke.SynKit.Parser.Combinator.Opt<TItem, TResult>(Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Opt(Of TItem, TResult)(Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult))
  nameWithType: Combinator.Opt<TItem, TResult>(Combinator.Parser<TItem, TResult>)
  nameWithType.vb: Combinator.Opt(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult))
- uid: Yoakke.SynKit.Parser.Combinator.Parse*
  name: Parse
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Parse_
  commentId: Overload:Yoakke.SynKit.Parser.Combinator.Parse
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.Combinator.Parse
  nameWithType: Combinator.Parse
- uid: Yoakke.SynKit.Parser.Combinator.Parse``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},IPeekableStream{``0})
  name: Parse<TItem, TResult>(Combinator.Parser<TItem, TResult>, IPeekableStream<TItem>)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Parse__2_Yoakke_SynKit_Parser_Combinator_Parser___0___1__IPeekableStream___0__
  commentId: M:Yoakke.SynKit.Parser.Combinator.Parse``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},IPeekableStream{``0})
  name.vb: Parse(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult), IPeekableStream(Of TItem))
  fullName: Yoakke.SynKit.Parser.Combinator.Parse<TItem, TResult>(Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>, IPeekableStream<TItem>)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Parse(Of TItem, TResult)(Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult), IPeekableStream(Of TItem))
  nameWithType: Combinator.Parse<TItem, TResult>(Combinator.Parser<TItem, TResult>, IPeekableStream<TItem>)
  nameWithType.vb: Combinator.Parse(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult), IPeekableStream(Of TItem))
- uid: Yoakke.SynKit.Parser.Combinator.Parser`2
  name: Combinator.Parser<TItem, TResult>
  href: api/Yoakke.SynKit.Parser.Combinator.Parser-2.html
  commentId: T:Yoakke.SynKit.Parser.Combinator.Parser`2
  name.vb: Combinator.Parser(Of TItem, TResult)
  fullName: Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult)
  nameWithType: Combinator.Parser<TItem, TResult>
  nameWithType.vb: Combinator.Parser(Of TItem, TResult)
- uid: Yoakke.SynKit.Parser.Combinator.Rep0*
  name: Rep0
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Rep0_
  commentId: Overload:Yoakke.SynKit.Parser.Combinator.Rep0
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.Combinator.Rep0
  nameWithType: Combinator.Rep0
- uid: Yoakke.SynKit.Parser.Combinator.Rep0``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name: Rep0<TItem, TResult>(Combinator.Parser<TItem, TResult>)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Rep0__2_Yoakke_SynKit_Parser_Combinator_Parser___0___1__
  commentId: M:Yoakke.SynKit.Parser.Combinator.Rep0``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name.vb: Rep0(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult))
  fullName: Yoakke.SynKit.Parser.Combinator.Rep0<TItem, TResult>(Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Rep0(Of TItem, TResult)(Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult))
  nameWithType: Combinator.Rep0<TItem, TResult>(Combinator.Parser<TItem, TResult>)
  nameWithType.vb: Combinator.Rep0(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult))
- uid: Yoakke.SynKit.Parser.Combinator.Rep1*
  name: Rep1
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Rep1_
  commentId: Overload:Yoakke.SynKit.Parser.Combinator.Rep1
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.Combinator.Rep1
  nameWithType: Combinator.Rep1
- uid: Yoakke.SynKit.Parser.Combinator.Rep1``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name: Rep1<TItem, TResult>(Combinator.Parser<TItem, TResult>)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Rep1__2_Yoakke_SynKit_Parser_Combinator_Parser___0___1__
  commentId: M:Yoakke.SynKit.Parser.Combinator.Rep1``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name.vb: Rep1(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult))
  fullName: Yoakke.SynKit.Parser.Combinator.Rep1<TItem, TResult>(Yoakke.SynKit.Parser.Combinator.Parser<TItem, TResult>)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Rep1(Of TItem, TResult)(Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TResult))
  nameWithType: Combinator.Rep1<TItem, TResult>(Combinator.Parser<TItem, TResult>)
  nameWithType.vb: Combinator.Rep1(Of TItem, TResult)(Combinator.Parser(Of TItem, TResult))
- uid: Yoakke.SynKit.Parser.Combinator.Seq*
  name: Seq
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Seq_
  commentId: Overload:Yoakke.SynKit.Parser.Combinator.Seq
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.Combinator.Seq
  nameWithType: Combinator.Seq
- uid: Yoakke.SynKit.Parser.Combinator.Seq``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name: Seq<TItem, T1>(Combinator.Parser<TItem, T1>)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Seq__2_Yoakke_SynKit_Parser_Combinator_Parser___0___1__
  commentId: M:Yoakke.SynKit.Parser.Combinator.Seq``2(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1})
  name.vb: Seq(Of TItem, T1)(Combinator.Parser(Of TItem, T1))
  fullName: Yoakke.SynKit.Parser.Combinator.Seq<TItem, T1>(Yoakke.SynKit.Parser.Combinator.Parser<TItem, T1>)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Seq(Of TItem, T1)(Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T1))
  nameWithType: Combinator.Seq<TItem, T1>(Combinator.Parser<TItem, T1>)
  nameWithType.vb: Combinator.Seq(Of TItem, T1)(Combinator.Parser(Of TItem, T1))
- uid: Yoakke.SynKit.Parser.Combinator.Seq``3(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``2})
  name: Seq<TItem, TLeftResult, TRightResult>(Combinator.Parser<TItem, TLeftResult>, Combinator.Parser<TItem, TRightResult>)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Seq__3_Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___2__
  commentId: M:Yoakke.SynKit.Parser.Combinator.Seq``3(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``2})
  name.vb: Seq(Of TItem, TLeftResult, TRightResult)(Combinator.Parser(Of TItem, TLeftResult), Combinator.Parser(Of TItem, TRightResult))
  fullName: Yoakke.SynKit.Parser.Combinator.Seq<TItem, TLeftResult, TRightResult>(Yoakke.SynKit.Parser.Combinator.Parser<TItem, TLeftResult>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, TRightResult>)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Seq(Of TItem, TLeftResult, TRightResult)(Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TLeftResult), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TRightResult))
  nameWithType: Combinator.Seq<TItem, TLeftResult, TRightResult>(Combinator.Parser<TItem, TLeftResult>, Combinator.Parser<TItem, TRightResult>)
  nameWithType.vb: Combinator.Seq(Of TItem, TLeftResult, TRightResult)(Combinator.Parser(Of TItem, TLeftResult), Combinator.Parser(Of TItem, TRightResult))
- uid: Yoakke.SynKit.Parser.Combinator.Seq``4(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``2},Yoakke.SynKit.Parser.Combinator.Parser{``0,``3})
  name: Seq<TItem, T1, T2, T3>(Combinator.Parser<TItem, T1>, Combinator.Parser<TItem, T2>, Combinator.Parser<TItem, T3>)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Seq__4_Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___2__Yoakke_SynKit_Parser_Combinator_Parser___0___3__
  commentId: M:Yoakke.SynKit.Parser.Combinator.Seq``4(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``2},Yoakke.SynKit.Parser.Combinator.Parser{``0,``3})
  name.vb: Seq(Of TItem, T1, T2, T3)(Combinator.Parser(Of TItem, T1), Combinator.Parser(Of TItem, T2), Combinator.Parser(Of TItem, T3))
  fullName: Yoakke.SynKit.Parser.Combinator.Seq<TItem, T1, T2, T3>(Yoakke.SynKit.Parser.Combinator.Parser<TItem, T1>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T2>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T3>)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Seq(Of TItem, T1, T2, T3)(Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T1), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T2), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T3))
  nameWithType: Combinator.Seq<TItem, T1, T2, T3>(Combinator.Parser<TItem, T1>, Combinator.Parser<TItem, T2>, Combinator.Parser<TItem, T3>)
  nameWithType.vb: Combinator.Seq(Of TItem, T1, T2, T3)(Combinator.Parser(Of TItem, T1), Combinator.Parser(Of TItem, T2), Combinator.Parser(Of TItem, T3))
- uid: Yoakke.SynKit.Parser.Combinator.Seq``5(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``2},Yoakke.SynKit.Parser.Combinator.Parser{``0,``3},Yoakke.SynKit.Parser.Combinator.Parser{``0,``4})
  name: Seq<TItem, T1, T2, T3, T4>(Combinator.Parser<TItem, T1>, Combinator.Parser<TItem, T2>, Combinator.Parser<TItem, T3>, Combinator.Parser<TItem, T4>)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Seq__5_Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___2__Yoakke_SynKit_Parser_Combinator_Parser___0___3__Yoakke_SynKit_Parser_Combinator_Parser___0___4__
  commentId: M:Yoakke.SynKit.Parser.Combinator.Seq``5(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``2},Yoakke.SynKit.Parser.Combinator.Parser{``0,``3},Yoakke.SynKit.Parser.Combinator.Parser{``0,``4})
  name.vb: Seq(Of TItem, T1, T2, T3, T4)(Combinator.Parser(Of TItem, T1), Combinator.Parser(Of TItem, T2), Combinator.Parser(Of TItem, T3), Combinator.Parser(Of TItem, T4))
  fullName: Yoakke.SynKit.Parser.Combinator.Seq<TItem, T1, T2, T3, T4>(Yoakke.SynKit.Parser.Combinator.Parser<TItem, T1>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T2>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T3>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T4>)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Seq(Of TItem, T1, T2, T3, T4)(Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T1), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T2), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T3), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T4))
  nameWithType: Combinator.Seq<TItem, T1, T2, T3, T4>(Combinator.Parser<TItem, T1>, Combinator.Parser<TItem, T2>, Combinator.Parser<TItem, T3>, Combinator.Parser<TItem, T4>)
  nameWithType.vb: Combinator.Seq(Of TItem, T1, T2, T3, T4)(Combinator.Parser(Of TItem, T1), Combinator.Parser(Of TItem, T2), Combinator.Parser(Of TItem, T3), Combinator.Parser(Of TItem, T4))
- uid: Yoakke.SynKit.Parser.Combinator.Seq``6(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``2},Yoakke.SynKit.Parser.Combinator.Parser{``0,``3},Yoakke.SynKit.Parser.Combinator.Parser{``0,``4},Yoakke.SynKit.Parser.Combinator.Parser{``0,``5})
  name: Seq<TItem, T1, T2, T3, T4, T5>(Combinator.Parser<TItem, T1>, Combinator.Parser<TItem, T2>, Combinator.Parser<TItem, T3>, Combinator.Parser<TItem, T4>, Combinator.Parser<TItem, T5>)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Seq__6_Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___2__Yoakke_SynKit_Parser_Combinator_Parser___0___3__Yoakke_SynKit_Parser_Combinator_Parser___0___4__Yoakke_SynKit_Parser_Combinator_Parser___0___5__
  commentId: M:Yoakke.SynKit.Parser.Combinator.Seq``6(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``2},Yoakke.SynKit.Parser.Combinator.Parser{``0,``3},Yoakke.SynKit.Parser.Combinator.Parser{``0,``4},Yoakke.SynKit.Parser.Combinator.Parser{``0,``5})
  name.vb: Seq(Of TItem, T1, T2, T3, T4, T5)(Combinator.Parser(Of TItem, T1), Combinator.Parser(Of TItem, T2), Combinator.Parser(Of TItem, T3), Combinator.Parser(Of TItem, T4), Combinator.Parser(Of TItem, T5))
  fullName: Yoakke.SynKit.Parser.Combinator.Seq<TItem, T1, T2, T3, T4, T5>(Yoakke.SynKit.Parser.Combinator.Parser<TItem, T1>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T2>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T3>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T4>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T5>)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Seq(Of TItem, T1, T2, T3, T4, T5)(Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T1), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T2), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T3), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T4), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T5))
  nameWithType: Combinator.Seq<TItem, T1, T2, T3, T4, T5>(Combinator.Parser<TItem, T1>, Combinator.Parser<TItem, T2>, Combinator.Parser<TItem, T3>, Combinator.Parser<TItem, T4>, Combinator.Parser<TItem, T5>)
  nameWithType.vb: Combinator.Seq(Of TItem, T1, T2, T3, T4, T5)(Combinator.Parser(Of TItem, T1), Combinator.Parser(Of TItem, T2), Combinator.Parser(Of TItem, T3), Combinator.Parser(Of TItem, T4), Combinator.Parser(Of TItem, T5))
- uid: Yoakke.SynKit.Parser.Combinator.Seq``7(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``2},Yoakke.SynKit.Parser.Combinator.Parser{``0,``3},Yoakke.SynKit.Parser.Combinator.Parser{``0,``4},Yoakke.SynKit.Parser.Combinator.Parser{``0,``5},Yoakke.SynKit.Parser.Combinator.Parser{``0,``6})
  name: Seq<TItem, T1, T2, T3, T4, T5, T6>(Combinator.Parser<TItem, T1>, Combinator.Parser<TItem, T2>, Combinator.Parser<TItem, T3>, Combinator.Parser<TItem, T4>, Combinator.Parser<TItem, T5>, Combinator.Parser<TItem, T6>)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Seq__7_Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___2__Yoakke_SynKit_Parser_Combinator_Parser___0___3__Yoakke_SynKit_Parser_Combinator_Parser___0___4__Yoakke_SynKit_Parser_Combinator_Parser___0___5__Yoakke_SynKit_Parser_Combinator_Parser___0___6__
  commentId: M:Yoakke.SynKit.Parser.Combinator.Seq``7(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``2},Yoakke.SynKit.Parser.Combinator.Parser{``0,``3},Yoakke.SynKit.Parser.Combinator.Parser{``0,``4},Yoakke.SynKit.Parser.Combinator.Parser{``0,``5},Yoakke.SynKit.Parser.Combinator.Parser{``0,``6})
  name.vb: Seq(Of TItem, T1, T2, T3, T4, T5, T6)(Combinator.Parser(Of TItem, T1), Combinator.Parser(Of TItem, T2), Combinator.Parser(Of TItem, T3), Combinator.Parser(Of TItem, T4), Combinator.Parser(Of TItem, T5), Combinator.Parser(Of TItem, T6))
  fullName: Yoakke.SynKit.Parser.Combinator.Seq<TItem, T1, T2, T3, T4, T5, T6>(Yoakke.SynKit.Parser.Combinator.Parser<TItem, T1>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T2>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T3>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T4>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T5>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T6>)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Seq(Of TItem, T1, T2, T3, T4, T5, T6)(Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T1), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T2), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T3), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T4), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T5), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T6))
  nameWithType: Combinator.Seq<TItem, T1, T2, T3, T4, T5, T6>(Combinator.Parser<TItem, T1>, Combinator.Parser<TItem, T2>, Combinator.Parser<TItem, T3>, Combinator.Parser<TItem, T4>, Combinator.Parser<TItem, T5>, Combinator.Parser<TItem, T6>)
  nameWithType.vb: Combinator.Seq(Of TItem, T1, T2, T3, T4, T5, T6)(Combinator.Parser(Of TItem, T1), Combinator.Parser(Of TItem, T2), Combinator.Parser(Of TItem, T3), Combinator.Parser(Of TItem, T4), Combinator.Parser(Of TItem, T5), Combinator.Parser(Of TItem, T6))
- uid: Yoakke.SynKit.Parser.Combinator.Seq``8(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``2},Yoakke.SynKit.Parser.Combinator.Parser{``0,``3},Yoakke.SynKit.Parser.Combinator.Parser{``0,``4},Yoakke.SynKit.Parser.Combinator.Parser{``0,``5},Yoakke.SynKit.Parser.Combinator.Parser{``0,``6},Yoakke.SynKit.Parser.Combinator.Parser{``0,``7})
  name: Seq<TItem, T1, T2, T3, T4, T5, T6, T7>(Combinator.Parser<TItem, T1>, Combinator.Parser<TItem, T2>, Combinator.Parser<TItem, T3>, Combinator.Parser<TItem, T4>, Combinator.Parser<TItem, T5>, Combinator.Parser<TItem, T6>, Combinator.Parser<TItem, T7>)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Seq__8_Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___2__Yoakke_SynKit_Parser_Combinator_Parser___0___3__Yoakke_SynKit_Parser_Combinator_Parser___0___4__Yoakke_SynKit_Parser_Combinator_Parser___0___5__Yoakke_SynKit_Parser_Combinator_Parser___0___6__Yoakke_SynKit_Parser_Combinator_Parser___0___7__
  commentId: M:Yoakke.SynKit.Parser.Combinator.Seq``8(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``2},Yoakke.SynKit.Parser.Combinator.Parser{``0,``3},Yoakke.SynKit.Parser.Combinator.Parser{``0,``4},Yoakke.SynKit.Parser.Combinator.Parser{``0,``5},Yoakke.SynKit.Parser.Combinator.Parser{``0,``6},Yoakke.SynKit.Parser.Combinator.Parser{``0,``7})
  name.vb: Seq(Of TItem, T1, T2, T3, T4, T5, T6, T7)(Combinator.Parser(Of TItem, T1), Combinator.Parser(Of TItem, T2), Combinator.Parser(Of TItem, T3), Combinator.Parser(Of TItem, T4), Combinator.Parser(Of TItem, T5), Combinator.Parser(Of TItem, T6), Combinator.Parser(Of TItem, T7))
  fullName: Yoakke.SynKit.Parser.Combinator.Seq<TItem, T1, T2, T3, T4, T5, T6, T7>(Yoakke.SynKit.Parser.Combinator.Parser<TItem, T1>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T2>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T3>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T4>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T5>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T6>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T7>)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Seq(Of TItem, T1, T2, T3, T4, T5, T6, T7)(Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T1), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T2), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T3), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T4), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T5), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T6), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T7))
  nameWithType: Combinator.Seq<TItem, T1, T2, T3, T4, T5, T6, T7>(Combinator.Parser<TItem, T1>, Combinator.Parser<TItem, T2>, Combinator.Parser<TItem, T3>, Combinator.Parser<TItem, T4>, Combinator.Parser<TItem, T5>, Combinator.Parser<TItem, T6>, Combinator.Parser<TItem, T7>)
  nameWithType.vb: Combinator.Seq(Of TItem, T1, T2, T3, T4, T5, T6, T7)(Combinator.Parser(Of TItem, T1), Combinator.Parser(Of TItem, T2), Combinator.Parser(Of TItem, T3), Combinator.Parser(Of TItem, T4), Combinator.Parser(Of TItem, T5), Combinator.Parser(Of TItem, T6), Combinator.Parser(Of TItem, T7))
- uid: Yoakke.SynKit.Parser.Combinator.Seq``9(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``2},Yoakke.SynKit.Parser.Combinator.Parser{``0,``3},Yoakke.SynKit.Parser.Combinator.Parser{``0,``4},Yoakke.SynKit.Parser.Combinator.Parser{``0,``5},Yoakke.SynKit.Parser.Combinator.Parser{``0,``6},Yoakke.SynKit.Parser.Combinator.Parser{``0,``7},Yoakke.SynKit.Parser.Combinator.Parser{``0,``8})
  name: Seq<TItem, T1, T2, T3, T4, T5, T6, T7, T8>(Combinator.Parser<TItem, T1>, Combinator.Parser<TItem, T2>, Combinator.Parser<TItem, T3>, Combinator.Parser<TItem, T4>, Combinator.Parser<TItem, T5>, Combinator.Parser<TItem, T6>, Combinator.Parser<TItem, T7>, Combinator.Parser<TItem, T8>)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Seq__9_Yoakke_SynKit_Parser_Combinator_Parser___0___1__Yoakke_SynKit_Parser_Combinator_Parser___0___2__Yoakke_SynKit_Parser_Combinator_Parser___0___3__Yoakke_SynKit_Parser_Combinator_Parser___0___4__Yoakke_SynKit_Parser_Combinator_Parser___0___5__Yoakke_SynKit_Parser_Combinator_Parser___0___6__Yoakke_SynKit_Parser_Combinator_Parser___0___7__Yoakke_SynKit_Parser_Combinator_Parser___0___8__
  commentId: M:Yoakke.SynKit.Parser.Combinator.Seq``9(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Yoakke.SynKit.Parser.Combinator.Parser{``0,``2},Yoakke.SynKit.Parser.Combinator.Parser{``0,``3},Yoakke.SynKit.Parser.Combinator.Parser{``0,``4},Yoakke.SynKit.Parser.Combinator.Parser{``0,``5},Yoakke.SynKit.Parser.Combinator.Parser{``0,``6},Yoakke.SynKit.Parser.Combinator.Parser{``0,``7},Yoakke.SynKit.Parser.Combinator.Parser{``0,``8})
  name.vb: Seq(Of TItem, T1, T2, T3, T4, T5, T6, T7, T8)(Combinator.Parser(Of TItem, T1), Combinator.Parser(Of TItem, T2), Combinator.Parser(Of TItem, T3), Combinator.Parser(Of TItem, T4), Combinator.Parser(Of TItem, T5), Combinator.Parser(Of TItem, T6), Combinator.Parser(Of TItem, T7), Combinator.Parser(Of TItem, T8))
  fullName: Yoakke.SynKit.Parser.Combinator.Seq<TItem, T1, T2, T3, T4, T5, T6, T7, T8>(Yoakke.SynKit.Parser.Combinator.Parser<TItem, T1>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T2>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T3>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T4>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T5>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T6>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T7>, Yoakke.SynKit.Parser.Combinator.Parser<TItem, T8>)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Seq(Of TItem, T1, T2, T3, T4, T5, T6, T7, T8)(Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T1), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T2), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T3), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T4), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T5), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T6), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T7), Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, T8))
  nameWithType: Combinator.Seq<TItem, T1, T2, T3, T4, T5, T6, T7, T8>(Combinator.Parser<TItem, T1>, Combinator.Parser<TItem, T2>, Combinator.Parser<TItem, T3>, Combinator.Parser<TItem, T4>, Combinator.Parser<TItem, T5>, Combinator.Parser<TItem, T6>, Combinator.Parser<TItem, T7>, Combinator.Parser<TItem, T8>)
  nameWithType.vb: Combinator.Seq(Of TItem, T1, T2, T3, T4, T5, T6, T7, T8)(Combinator.Parser(Of TItem, T1), Combinator.Parser(Of TItem, T2), Combinator.Parser(Of TItem, T3), Combinator.Parser(Of TItem, T4), Combinator.Parser(Of TItem, T5), Combinator.Parser(Of TItem, T6), Combinator.Parser(Of TItem, T7), Combinator.Parser(Of TItem, T8))
- uid: Yoakke.SynKit.Parser.Combinator.Text(System.String)
  name: Text(String)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Text_System_String_
  commentId: M:Yoakke.SynKit.Parser.Combinator.Text(System.String)
  fullName: Yoakke.SynKit.Parser.Combinator.Text(System.String)
  nameWithType: Combinator.Text(String)
- uid: Yoakke.SynKit.Parser.Combinator.Text*
  name: Text
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Text_
  commentId: Overload:Yoakke.SynKit.Parser.Combinator.Text
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.Combinator.Text
  nameWithType: Combinator.Text
- uid: Yoakke.SynKit.Parser.Combinator.Transform*
  name: Transform
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Transform_
  commentId: Overload:Yoakke.SynKit.Parser.Combinator.Transform
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.Combinator.Transform
  nameWithType: Combinator.Transform
- uid: Yoakke.SynKit.Parser.Combinator.Transform``3(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Func{``1,``2})
  name: Transform<TItem, TParsed, TResult>(Combinator.Parser<TItem, TParsed>, Func<TParsed, TResult>)
  href: api/Yoakke.SynKit.Parser.Combinator.html#Yoakke_SynKit_Parser_Combinator_Transform__3_Yoakke_SynKit_Parser_Combinator_Parser___0___1__Func___1___2__
  commentId: M:Yoakke.SynKit.Parser.Combinator.Transform``3(Yoakke.SynKit.Parser.Combinator.Parser{``0,``1},Func{``1,``2})
  name.vb: Transform(Of TItem, TParsed, TResult)(Combinator.Parser(Of TItem, TParsed), Func(Of TParsed, TResult))
  fullName: Yoakke.SynKit.Parser.Combinator.Transform<TItem, TParsed, TResult>(Yoakke.SynKit.Parser.Combinator.Parser<TItem, TParsed>, Func<TParsed, TResult>)
  fullName.vb: Yoakke.SynKit.Parser.Combinator.Transform(Of TItem, TParsed, TResult)(Yoakke.SynKit.Parser.Combinator.Parser(Of TItem, TParsed), Func(Of TParsed, TResult))
  nameWithType: Combinator.Transform<TItem, TParsed, TResult>(Combinator.Parser<TItem, TParsed>, Func<TParsed, TResult>)
  nameWithType.vb: Combinator.Transform(Of TItem, TParsed, TResult)(Combinator.Parser(Of TItem, TParsed), Func(Of TParsed, TResult))
- uid: Yoakke.SynKit.Parser.Generator
  name: Yoakke.SynKit.Parser.Generator
  href: api/Yoakke.SynKit.Parser.Generator.html
  commentId: N:Yoakke.SynKit.Parser.Generator
  fullName: Yoakke.SynKit.Parser.Generator
  nameWithType: Yoakke.SynKit.Parser.Generator
- uid: Yoakke.SynKit.Parser.Generator.ParserSourceGenerator
  name: ParserSourceGenerator
  href: api/Yoakke.SynKit.Parser.Generator.ParserSourceGenerator.html
  commentId: T:Yoakke.SynKit.Parser.Generator.ParserSourceGenerator
  fullName: Yoakke.SynKit.Parser.Generator.ParserSourceGenerator
  nameWithType: ParserSourceGenerator
- uid: Yoakke.SynKit.Parser.Generator.ParserSourceGenerator.Initialize(IncrementalGeneratorInitializationContext)
  name: Initialize(IncrementalGeneratorInitializationContext)
  href: api/Yoakke.SynKit.Parser.Generator.ParserSourceGenerator.html#Yoakke_SynKit_Parser_Generator_ParserSourceGenerator_Initialize_IncrementalGeneratorInitializationContext_
  commentId: M:Yoakke.SynKit.Parser.Generator.ParserSourceGenerator.Initialize(IncrementalGeneratorInitializationContext)
  fullName: Yoakke.SynKit.Parser.Generator.ParserSourceGenerator.Initialize(IncrementalGeneratorInitializationContext)
  nameWithType: ParserSourceGenerator.Initialize(IncrementalGeneratorInitializationContext)
- uid: Yoakke.SynKit.Parser.Generator.ParserSourceGenerator.Initialize*
  name: Initialize
  href: api/Yoakke.SynKit.Parser.Generator.ParserSourceGenerator.html#Yoakke_SynKit_Parser_Generator_ParserSourceGenerator_Initialize_
  commentId: Overload:Yoakke.SynKit.Parser.Generator.ParserSourceGenerator.Initialize
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.Generator.ParserSourceGenerator.Initialize
  nameWithType: ParserSourceGenerator.Initialize
- uid: Yoakke.SynKit.Parser.ParseError
  name: ParseError
  href: api/Yoakke.SynKit.Parser.ParseError.html
  commentId: T:Yoakke.SynKit.Parser.ParseError
  fullName: Yoakke.SynKit.Parser.ParseError
  nameWithType: ParseError
- uid: Yoakke.SynKit.Parser.ParseError.#ctor(System.Object,System.Nullable{System.Object},IComparable,System.String)
  name: ParseError(Object, Nullable<Object>, IComparable, String)
  href: api/Yoakke.SynKit.Parser.ParseError.html#Yoakke_SynKit_Parser_ParseError__ctor_System_Object_System_Nullable_System_Object__IComparable_System_String_
  commentId: M:Yoakke.SynKit.Parser.ParseError.#ctor(System.Object,System.Nullable{System.Object},IComparable,System.String)
  name.vb: ParseError(Object, Nullable(Of Object), IComparable, String)
  fullName: Yoakke.SynKit.Parser.ParseError.ParseError(System.Object, System.Nullable<System.Object>, IComparable, System.String)
  fullName.vb: Yoakke.SynKit.Parser.ParseError.ParseError(System.Object, System.Nullable(Of System.Object), IComparable, System.String)
  nameWithType: ParseError.ParseError(Object, Nullable<Object>, IComparable, String)
  nameWithType.vb: ParseError.ParseError(Object, Nullable(Of Object), IComparable, String)
- uid: Yoakke.SynKit.Parser.ParseError.#ctor*
  name: ParseError
  href: api/Yoakke.SynKit.Parser.ParseError.html#Yoakke_SynKit_Parser_ParseError__ctor_
  commentId: Overload:Yoakke.SynKit.Parser.ParseError.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.ParseError.ParseError
  nameWithType: ParseError.ParseError
- uid: Yoakke.SynKit.Parser.ParseError.Elements
  name: Elements
  href: api/Yoakke.SynKit.Parser.ParseError.html#Yoakke_SynKit_Parser_ParseError_Elements
  commentId: P:Yoakke.SynKit.Parser.ParseError.Elements
  fullName: Yoakke.SynKit.Parser.ParseError.Elements
  nameWithType: ParseError.Elements
- uid: Yoakke.SynKit.Parser.ParseError.Elements*
  name: Elements
  href: api/Yoakke.SynKit.Parser.ParseError.html#Yoakke_SynKit_Parser_ParseError_Elements_
  commentId: Overload:Yoakke.SynKit.Parser.ParseError.Elements
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.ParseError.Elements
  nameWithType: ParseError.Elements
- uid: Yoakke.SynKit.Parser.ParseError.Got
  name: Got
  href: api/Yoakke.SynKit.Parser.ParseError.html#Yoakke_SynKit_Parser_ParseError_Got
  commentId: P:Yoakke.SynKit.Parser.ParseError.Got
  fullName: Yoakke.SynKit.Parser.ParseError.Got
  nameWithType: ParseError.Got
- uid: Yoakke.SynKit.Parser.ParseError.Got*
  name: Got
  href: api/Yoakke.SynKit.Parser.ParseError.html#Yoakke_SynKit_Parser_ParseError_Got_
  commentId: Overload:Yoakke.SynKit.Parser.ParseError.Got
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.ParseError.Got
  nameWithType: ParseError.Got
- uid: Yoakke.SynKit.Parser.ParseError.op_BitwiseOr(Yoakke.SynKit.Parser.ParseError,Yoakke.SynKit.Parser.ParseError)
  name: BitwiseOr(ParseError, ParseError)
  href: api/Yoakke.SynKit.Parser.ParseError.html#Yoakke_SynKit_Parser_ParseError_op_BitwiseOr_Yoakke_SynKit_Parser_ParseError_Yoakke_SynKit_Parser_ParseError_
  commentId: M:Yoakke.SynKit.Parser.ParseError.op_BitwiseOr(Yoakke.SynKit.Parser.ParseError,Yoakke.SynKit.Parser.ParseError)
  fullName: Yoakke.SynKit.Parser.ParseError.BitwiseOr(Yoakke.SynKit.Parser.ParseError, Yoakke.SynKit.Parser.ParseError)
  nameWithType: ParseError.BitwiseOr(ParseError, ParseError)
- uid: Yoakke.SynKit.Parser.ParseError.op_BitwiseOr*
  name: BitwiseOr
  href: api/Yoakke.SynKit.Parser.ParseError.html#Yoakke_SynKit_Parser_ParseError_op_BitwiseOr_
  commentId: Overload:Yoakke.SynKit.Parser.ParseError.op_BitwiseOr
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.ParseError.BitwiseOr
  nameWithType: ParseError.BitwiseOr
- uid: Yoakke.SynKit.Parser.ParseError.Position
  name: Position
  href: api/Yoakke.SynKit.Parser.ParseError.html#Yoakke_SynKit_Parser_ParseError_Position
  commentId: P:Yoakke.SynKit.Parser.ParseError.Position
  fullName: Yoakke.SynKit.Parser.ParseError.Position
  nameWithType: ParseError.Position
- uid: Yoakke.SynKit.Parser.ParseError.Position*
  name: Position
  href: api/Yoakke.SynKit.Parser.ParseError.html#Yoakke_SynKit_Parser_ParseError_Position_
  commentId: Overload:Yoakke.SynKit.Parser.ParseError.Position
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.ParseError.Position
  nameWithType: ParseError.Position
- uid: Yoakke.SynKit.Parser.ParseErrorElement
  name: ParseErrorElement
  href: api/Yoakke.SynKit.Parser.ParseErrorElement.html
  commentId: T:Yoakke.SynKit.Parser.ParseErrorElement
  fullName: Yoakke.SynKit.Parser.ParseErrorElement
  nameWithType: ParseErrorElement
- uid: Yoakke.SynKit.Parser.ParseErrorElement.#ctor(ISet{System.Object},System.String)
  name: ParseErrorElement(ISet<Object>, String)
  href: api/Yoakke.SynKit.Parser.ParseErrorElement.html#Yoakke_SynKit_Parser_ParseErrorElement__ctor_ISet_System_Object__System_String_
  commentId: M:Yoakke.SynKit.Parser.ParseErrorElement.#ctor(ISet{System.Object},System.String)
  name.vb: ParseErrorElement(ISet(Of Object), String)
  fullName: Yoakke.SynKit.Parser.ParseErrorElement.ParseErrorElement(ISet<System.Object>, System.String)
  fullName.vb: Yoakke.SynKit.Parser.ParseErrorElement.ParseErrorElement(ISet(Of System.Object), System.String)
  nameWithType: ParseErrorElement.ParseErrorElement(ISet<Object>, String)
  nameWithType.vb: ParseErrorElement.ParseErrorElement(ISet(Of Object), String)
- uid: Yoakke.SynKit.Parser.ParseErrorElement.#ctor(System.Object,System.String)
  name: ParseErrorElement(Object, String)
  href: api/Yoakke.SynKit.Parser.ParseErrorElement.html#Yoakke_SynKit_Parser_ParseErrorElement__ctor_System_Object_System_String_
  commentId: M:Yoakke.SynKit.Parser.ParseErrorElement.#ctor(System.Object,System.String)
  fullName: Yoakke.SynKit.Parser.ParseErrorElement.ParseErrorElement(System.Object, System.String)
  nameWithType: ParseErrorElement.ParseErrorElement(Object, String)
- uid: Yoakke.SynKit.Parser.ParseErrorElement.#ctor*
  name: ParseErrorElement
  href: api/Yoakke.SynKit.Parser.ParseErrorElement.html#Yoakke_SynKit_Parser_ParseErrorElement__ctor_
  commentId: Overload:Yoakke.SynKit.Parser.ParseErrorElement.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.ParseErrorElement.ParseErrorElement
  nameWithType: ParseErrorElement.ParseErrorElement
- uid: Yoakke.SynKit.Parser.ParseErrorElement.Context
  name: Context
  href: api/Yoakke.SynKit.Parser.ParseErrorElement.html#Yoakke_SynKit_Parser_ParseErrorElement_Context
  commentId: P:Yoakke.SynKit.Parser.ParseErrorElement.Context
  fullName: Yoakke.SynKit.Parser.ParseErrorElement.Context
  nameWithType: ParseErrorElement.Context
- uid: Yoakke.SynKit.Parser.ParseErrorElement.Context*
  name: Context
  href: api/Yoakke.SynKit.Parser.ParseErrorElement.html#Yoakke_SynKit_Parser_ParseErrorElement_Context_
  commentId: Overload:Yoakke.SynKit.Parser.ParseErrorElement.Context
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.ParseErrorElement.Context
  nameWithType: ParseErrorElement.Context
- uid: Yoakke.SynKit.Parser.ParseErrorElement.Expected
  name: Expected
  href: api/Yoakke.SynKit.Parser.ParseErrorElement.html#Yoakke_SynKit_Parser_ParseErrorElement_Expected
  commentId: P:Yoakke.SynKit.Parser.ParseErrorElement.Expected
  fullName: Yoakke.SynKit.Parser.ParseErrorElement.Expected
  nameWithType: ParseErrorElement.Expected
- uid: Yoakke.SynKit.Parser.ParseErrorElement.Expected*
  name: Expected
  href: api/Yoakke.SynKit.Parser.ParseErrorElement.html#Yoakke_SynKit_Parser_ParseErrorElement_Expected_
  commentId: Overload:Yoakke.SynKit.Parser.ParseErrorElement.Expected
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.ParseErrorElement.Expected
  nameWithType: ParseErrorElement.Expected
- uid: Yoakke.SynKit.Parser.ParseOk`1
  name: ParseOk<T>
  href: api/Yoakke.SynKit.Parser.ParseOk-1.html
  commentId: T:Yoakke.SynKit.Parser.ParseOk`1
  name.vb: ParseOk(Of T)
  fullName: Yoakke.SynKit.Parser.ParseOk<T>
  fullName.vb: Yoakke.SynKit.Parser.ParseOk(Of T)
  nameWithType: ParseOk<T>
  nameWithType.vb: ParseOk(Of T)
- uid: Yoakke.SynKit.Parser.ParseOk`1.#ctor(`0,System.Int32,Yoakke.SynKit.Parser.ParseError)
  name: ParseOk(T, Int32, ParseError)
  href: api/Yoakke.SynKit.Parser.ParseOk-1.html#Yoakke_SynKit_Parser_ParseOk_1__ctor__0_System_Int32_Yoakke_SynKit_Parser_ParseError_
  commentId: M:Yoakke.SynKit.Parser.ParseOk`1.#ctor(`0,System.Int32,Yoakke.SynKit.Parser.ParseError)
  fullName: Yoakke.SynKit.Parser.ParseOk<T>.ParseOk(T, System.Int32, Yoakke.SynKit.Parser.ParseError)
  fullName.vb: Yoakke.SynKit.Parser.ParseOk(Of T).ParseOk(T, System.Int32, Yoakke.SynKit.Parser.ParseError)
  nameWithType: ParseOk<T>.ParseOk(T, Int32, ParseError)
  nameWithType.vb: ParseOk(Of T).ParseOk(T, Int32, ParseError)
- uid: Yoakke.SynKit.Parser.ParseOk`1.#ctor*
  name: ParseOk
  href: api/Yoakke.SynKit.Parser.ParseOk-1.html#Yoakke_SynKit_Parser_ParseOk_1__ctor_
  commentId: Overload:Yoakke.SynKit.Parser.ParseOk`1.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.ParseOk<T>.ParseOk
  fullName.vb: Yoakke.SynKit.Parser.ParseOk(Of T).ParseOk
  nameWithType: ParseOk<T>.ParseOk
  nameWithType.vb: ParseOk(Of T).ParseOk
- uid: Yoakke.SynKit.Parser.ParseOk`1.FurthestError
  name: FurthestError
  href: api/Yoakke.SynKit.Parser.ParseOk-1.html#Yoakke_SynKit_Parser_ParseOk_1_FurthestError
  commentId: F:Yoakke.SynKit.Parser.ParseOk`1.FurthestError
  fullName: Yoakke.SynKit.Parser.ParseOk<T>.FurthestError
  fullName.vb: Yoakke.SynKit.Parser.ParseOk(Of T).FurthestError
  nameWithType: ParseOk<T>.FurthestError
  nameWithType.vb: ParseOk(Of T).FurthestError
- uid: Yoakke.SynKit.Parser.ParseOk`1.Offset
  name: Offset
  href: api/Yoakke.SynKit.Parser.ParseOk-1.html#Yoakke_SynKit_Parser_ParseOk_1_Offset
  commentId: F:Yoakke.SynKit.Parser.ParseOk`1.Offset
  fullName: Yoakke.SynKit.Parser.ParseOk<T>.Offset
  fullName.vb: Yoakke.SynKit.Parser.ParseOk(Of T).Offset
  nameWithType: ParseOk<T>.Offset
  nameWithType.vb: ParseOk(Of T).Offset
- uid: Yoakke.SynKit.Parser.ParseOk`1.op_BitwiseOr(Yoakke.SynKit.Parser.ParseError,Yoakke.SynKit.Parser.ParseOk{`0})
  name: BitwiseOr(ParseError, ParseOk<T>)
  href: api/Yoakke.SynKit.Parser.ParseOk-1.html#Yoakke_SynKit_Parser_ParseOk_1_op_BitwiseOr_Yoakke_SynKit_Parser_ParseError_Yoakke_SynKit_Parser_ParseOk__0__
  commentId: M:Yoakke.SynKit.Parser.ParseOk`1.op_BitwiseOr(Yoakke.SynKit.Parser.ParseError,Yoakke.SynKit.Parser.ParseOk{`0})
  name.vb: BitwiseOr(ParseError, ParseOk(Of T))
  fullName: Yoakke.SynKit.Parser.ParseOk<T>.BitwiseOr(Yoakke.SynKit.Parser.ParseError, Yoakke.SynKit.Parser.ParseOk<T>)
  fullName.vb: Yoakke.SynKit.Parser.ParseOk(Of T).BitwiseOr(Yoakke.SynKit.Parser.ParseError, Yoakke.SynKit.Parser.ParseOk(Of T))
  nameWithType: ParseOk<T>.BitwiseOr(ParseError, ParseOk<T>)
  nameWithType.vb: ParseOk(Of T).BitwiseOr(ParseError, ParseOk(Of T))
- uid: Yoakke.SynKit.Parser.ParseOk`1.op_BitwiseOr(Yoakke.SynKit.Parser.ParseOk{`0},Yoakke.SynKit.Parser.ParseError)
  name: BitwiseOr(ParseOk<T>, ParseError)
  href: api/Yoakke.SynKit.Parser.ParseOk-1.html#Yoakke_SynKit_Parser_ParseOk_1_op_BitwiseOr_Yoakke_SynKit_Parser_ParseOk__0__Yoakke_SynKit_Parser_ParseError_
  commentId: M:Yoakke.SynKit.Parser.ParseOk`1.op_BitwiseOr(Yoakke.SynKit.Parser.ParseOk{`0},Yoakke.SynKit.Parser.ParseError)
  name.vb: BitwiseOr(ParseOk(Of T), ParseError)
  fullName: Yoakke.SynKit.Parser.ParseOk<T>.BitwiseOr(Yoakke.SynKit.Parser.ParseOk<T>, Yoakke.SynKit.Parser.ParseError)
  fullName.vb: Yoakke.SynKit.Parser.ParseOk(Of T).BitwiseOr(Yoakke.SynKit.Parser.ParseOk(Of T), Yoakke.SynKit.Parser.ParseError)
  nameWithType: ParseOk<T>.BitwiseOr(ParseOk<T>, ParseError)
  nameWithType.vb: ParseOk(Of T).BitwiseOr(ParseOk(Of T), ParseError)
- uid: Yoakke.SynKit.Parser.ParseOk`1.op_BitwiseOr(Yoakke.SynKit.Parser.ParseOk{`0},Yoakke.SynKit.Parser.ParseOk{`0})
  name: BitwiseOr(ParseOk<T>, ParseOk<T>)
  href: api/Yoakke.SynKit.Parser.ParseOk-1.html#Yoakke_SynKit_Parser_ParseOk_1_op_BitwiseOr_Yoakke_SynKit_Parser_ParseOk__0__Yoakke_SynKit_Parser_ParseOk__0__
  commentId: M:Yoakke.SynKit.Parser.ParseOk`1.op_BitwiseOr(Yoakke.SynKit.Parser.ParseOk{`0},Yoakke.SynKit.Parser.ParseOk{`0})
  name.vb: BitwiseOr(ParseOk(Of T), ParseOk(Of T))
  fullName: Yoakke.SynKit.Parser.ParseOk<T>.BitwiseOr(Yoakke.SynKit.Parser.ParseOk<T>, Yoakke.SynKit.Parser.ParseOk<T>)
  fullName.vb: Yoakke.SynKit.Parser.ParseOk(Of T).BitwiseOr(Yoakke.SynKit.Parser.ParseOk(Of T), Yoakke.SynKit.Parser.ParseOk(Of T))
  nameWithType: ParseOk<T>.BitwiseOr(ParseOk<T>, ParseOk<T>)
  nameWithType.vb: ParseOk(Of T).BitwiseOr(ParseOk(Of T), ParseOk(Of T))
- uid: Yoakke.SynKit.Parser.ParseOk`1.op_BitwiseOr*
  name: BitwiseOr
  href: api/Yoakke.SynKit.Parser.ParseOk-1.html#Yoakke_SynKit_Parser_ParseOk_1_op_BitwiseOr_
  commentId: Overload:Yoakke.SynKit.Parser.ParseOk`1.op_BitwiseOr
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.ParseOk<T>.BitwiseOr
  fullName.vb: Yoakke.SynKit.Parser.ParseOk(Of T).BitwiseOr
  nameWithType: ParseOk<T>.BitwiseOr
  nameWithType.vb: ParseOk(Of T).BitwiseOr
- uid: Yoakke.SynKit.Parser.ParseOk`1.op_Implicit(Yoakke.SynKit.Parser.ParseOk{`0})~`0
  name: Implicit(ParseOk<T> to T)
  href: api/Yoakke.SynKit.Parser.ParseOk-1.html#Yoakke_SynKit_Parser_ParseOk_1_op_Implicit_Yoakke_SynKit_Parser_ParseOk__0____0
  commentId: M:Yoakke.SynKit.Parser.ParseOk`1.op_Implicit(Yoakke.SynKit.Parser.ParseOk{`0})~`0
  name.vb: Widening(ParseOk(Of T) to T)
  fullName: Yoakke.SynKit.Parser.ParseOk<T>.Implicit(Yoakke.SynKit.Parser.ParseOk<T> to T)
  fullName.vb: Yoakke.SynKit.Parser.ParseOk(Of T).Widening(Yoakke.SynKit.Parser.ParseOk(Of T) to T)
  nameWithType: ParseOk<T>.Implicit(ParseOk<T> to T)
  nameWithType.vb: ParseOk(Of T).Widening(ParseOk(Of T) to T)
- uid: Yoakke.SynKit.Parser.ParseOk`1.op_Implicit*
  name: Implicit
  href: api/Yoakke.SynKit.Parser.ParseOk-1.html#Yoakke_SynKit_Parser_ParseOk_1_op_Implicit_
  commentId: Overload:Yoakke.SynKit.Parser.ParseOk`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Yoakke.SynKit.Parser.ParseOk<T>.Implicit
  fullName.vb: Yoakke.SynKit.Parser.ParseOk(Of T).Widening
  nameWithType: ParseOk<T>.Implicit
  nameWithType.vb: ParseOk(Of T).Widening
- uid: Yoakke.SynKit.Parser.ParseOk`1.Value
  name: Value
  href: api/Yoakke.SynKit.Parser.ParseOk-1.html#Yoakke_SynKit_Parser_ParseOk_1_Value
  commentId: F:Yoakke.SynKit.Parser.ParseOk`1.Value
  fullName: Yoakke.SynKit.Parser.ParseOk<T>.Value
  fullName.vb: Yoakke.SynKit.Parser.ParseOk(Of T).Value
  nameWithType: ParseOk<T>.Value
  nameWithType.vb: ParseOk(Of T).Value
- uid: Yoakke.SynKit.Parser.ParseResult
  name: ParseResult
  href: api/Yoakke.SynKit.Parser.ParseResult.html
  commentId: T:Yoakke.SynKit.Parser.ParseResult
  fullName: Yoakke.SynKit.Parser.ParseResult
  nameWithType: ParseResult
- uid: Yoakke.SynKit.Parser.ParseResult.Error(System.Object,System.Nullable{System.Object},IComparable,System.String)
  name: Error(Object, Nullable<Object>, IComparable, String)
  href: api/Yoakke.SynKit.Parser.ParseResult.html#Yoakke_SynKit_Parser_ParseResult_Error_System_Object_System_Nullable_System_Object__IComparable_System_String_
  commentId: M:Yoakke.SynKit.Parser.ParseResult.Error(System.Object,System.Nullable{System.Object},IComparable,System.String)
  name.vb: Error(Object, Nullable(Of Object), IComparable, String)
  fullName: Yoakke.SynKit.Parser.ParseResult.Error(System.Object, System.Nullable<System.Object>, IComparable, System.String)
  fullName.vb: Yoakke.SynKit.Parser.ParseResult.Error(System.Object, System.Nullable(Of System.Object), IComparable, System.String)
  nameWithType: ParseResult.Error(Object, Nullable<Object>, IComparable, String)
  nameWithType.vb: ParseResult.Error(Object, Nullable(Of Object), IComparable, String)
- uid: Yoakke.SynKit.Parser.ParseResult.Error*
  name: Error
  href: api/Yoakke.SynKit.Parser.ParseResult.html#Yoakke_SynKit_Parser_ParseResult_Error_
  commentId: Overload:Yoakke.SynKit.Parser.ParseResult.Error
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.ParseResult.Error
  nameWithType: ParseResult.Error
- uid: Yoakke.SynKit.Parser.ParseResult.Ok*
  name: Ok
  href: api/Yoakke.SynKit.Parser.ParseResult.html#Yoakke_SynKit_Parser_ParseResult_Ok_
  commentId: Overload:Yoakke.SynKit.Parser.ParseResult.Ok
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.ParseResult.Ok
  nameWithType: ParseResult.Ok
- uid: Yoakke.SynKit.Parser.ParseResult.Ok``1(``0,System.Int32,Yoakke.SynKit.Parser.ParseError)
  name: Ok<T>(T, Int32, ParseError)
  href: api/Yoakke.SynKit.Parser.ParseResult.html#Yoakke_SynKit_Parser_ParseResult_Ok__1___0_System_Int32_Yoakke_SynKit_Parser_ParseError_
  commentId: M:Yoakke.SynKit.Parser.ParseResult.Ok``1(``0,System.Int32,Yoakke.SynKit.Parser.ParseError)
  name.vb: Ok(Of T)(T, Int32, ParseError)
  fullName: Yoakke.SynKit.Parser.ParseResult.Ok<T>(T, System.Int32, Yoakke.SynKit.Parser.ParseError)
  fullName.vb: Yoakke.SynKit.Parser.ParseResult.Ok(Of T)(T, System.Int32, Yoakke.SynKit.Parser.ParseError)
  nameWithType: ParseResult.Ok<T>(T, Int32, ParseError)
  nameWithType.vb: ParseResult.Ok(Of T)(T, Int32, ParseError)
- uid: Yoakke.SynKit.Parser.ParseResult`1
  name: ParseResult<T>
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html
  commentId: T:Yoakke.SynKit.Parser.ParseResult`1
  name.vb: ParseResult(Of T)
  fullName: Yoakke.SynKit.Parser.ParseResult<T>
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T)
  nameWithType: ParseResult<T>
  nameWithType.vb: ParseResult(Of T)
- uid: Yoakke.SynKit.Parser.ParseResult`1.#ctor(Yoakke.SynKit.Parser.ParseError)
  name: ParseResult(ParseError)
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html#Yoakke_SynKit_Parser_ParseResult_1__ctor_Yoakke_SynKit_Parser_ParseError_
  commentId: M:Yoakke.SynKit.Parser.ParseResult`1.#ctor(Yoakke.SynKit.Parser.ParseError)
  fullName: Yoakke.SynKit.Parser.ParseResult<T>.ParseResult(Yoakke.SynKit.Parser.ParseError)
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T).ParseResult(Yoakke.SynKit.Parser.ParseError)
  nameWithType: ParseResult<T>.ParseResult(ParseError)
  nameWithType.vb: ParseResult(Of T).ParseResult(ParseError)
- uid: Yoakke.SynKit.Parser.ParseResult`1.#ctor(Yoakke.SynKit.Parser.ParseOk{`0})
  name: ParseResult(ParseOk<T>)
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html#Yoakke_SynKit_Parser_ParseResult_1__ctor_Yoakke_SynKit_Parser_ParseOk__0__
  commentId: M:Yoakke.SynKit.Parser.ParseResult`1.#ctor(Yoakke.SynKit.Parser.ParseOk{`0})
  name.vb: ParseResult(ParseOk(Of T))
  fullName: Yoakke.SynKit.Parser.ParseResult<T>.ParseResult(Yoakke.SynKit.Parser.ParseOk<T>)
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T).ParseResult(Yoakke.SynKit.Parser.ParseOk(Of T))
  nameWithType: ParseResult<T>.ParseResult(ParseOk<T>)
  nameWithType.vb: ParseResult(Of T).ParseResult(ParseOk(Of T))
- uid: Yoakke.SynKit.Parser.ParseResult`1.#ctor*
  name: ParseResult
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html#Yoakke_SynKit_Parser_ParseResult_1__ctor_
  commentId: Overload:Yoakke.SynKit.Parser.ParseResult`1.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.ParseResult<T>.ParseResult
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T).ParseResult
  nameWithType: ParseResult<T>.ParseResult
  nameWithType.vb: ParseResult(Of T).ParseResult
- uid: Yoakke.SynKit.Parser.ParseResult`1.Error
  name: Error
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html#Yoakke_SynKit_Parser_ParseResult_1_Error
  commentId: P:Yoakke.SynKit.Parser.ParseResult`1.Error
  fullName: Yoakke.SynKit.Parser.ParseResult<T>.Error
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T).Error
  nameWithType: ParseResult<T>.Error
  nameWithType.vb: ParseResult(Of T).Error
- uid: Yoakke.SynKit.Parser.ParseResult`1.Error*
  name: Error
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html#Yoakke_SynKit_Parser_ParseResult_1_Error_
  commentId: Overload:Yoakke.SynKit.Parser.ParseResult`1.Error
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.ParseResult<T>.Error
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T).Error
  nameWithType: ParseResult<T>.Error
  nameWithType.vb: ParseResult(Of T).Error
- uid: Yoakke.SynKit.Parser.ParseResult`1.FurthestError
  name: FurthestError
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html#Yoakke_SynKit_Parser_ParseResult_1_FurthestError
  commentId: P:Yoakke.SynKit.Parser.ParseResult`1.FurthestError
  fullName: Yoakke.SynKit.Parser.ParseResult<T>.FurthestError
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T).FurthestError
  nameWithType: ParseResult<T>.FurthestError
  nameWithType.vb: ParseResult(Of T).FurthestError
- uid: Yoakke.SynKit.Parser.ParseResult`1.FurthestError*
  name: FurthestError
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html#Yoakke_SynKit_Parser_ParseResult_1_FurthestError_
  commentId: Overload:Yoakke.SynKit.Parser.ParseResult`1.FurthestError
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.ParseResult<T>.FurthestError
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T).FurthestError
  nameWithType: ParseResult<T>.FurthestError
  nameWithType.vb: ParseResult(Of T).FurthestError
- uid: Yoakke.SynKit.Parser.ParseResult`1.IsError
  name: IsError
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html#Yoakke_SynKit_Parser_ParseResult_1_IsError
  commentId: P:Yoakke.SynKit.Parser.ParseResult`1.IsError
  fullName: Yoakke.SynKit.Parser.ParseResult<T>.IsError
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T).IsError
  nameWithType: ParseResult<T>.IsError
  nameWithType.vb: ParseResult(Of T).IsError
- uid: Yoakke.SynKit.Parser.ParseResult`1.IsError*
  name: IsError
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html#Yoakke_SynKit_Parser_ParseResult_1_IsError_
  commentId: Overload:Yoakke.SynKit.Parser.ParseResult`1.IsError
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.ParseResult<T>.IsError
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T).IsError
  nameWithType: ParseResult<T>.IsError
  nameWithType.vb: ParseResult(Of T).IsError
- uid: Yoakke.SynKit.Parser.ParseResult`1.IsOk
  name: IsOk
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html#Yoakke_SynKit_Parser_ParseResult_1_IsOk
  commentId: P:Yoakke.SynKit.Parser.ParseResult`1.IsOk
  fullName: Yoakke.SynKit.Parser.ParseResult<T>.IsOk
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T).IsOk
  nameWithType: ParseResult<T>.IsOk
  nameWithType.vb: ParseResult(Of T).IsOk
- uid: Yoakke.SynKit.Parser.ParseResult`1.IsOk*
  name: IsOk
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html#Yoakke_SynKit_Parser_ParseResult_1_IsOk_
  commentId: Overload:Yoakke.SynKit.Parser.ParseResult`1.IsOk
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.ParseResult<T>.IsOk
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T).IsOk
  nameWithType: ParseResult<T>.IsOk
  nameWithType.vb: ParseResult(Of T).IsOk
- uid: Yoakke.SynKit.Parser.ParseResult`1.Ok
  name: Ok
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html#Yoakke_SynKit_Parser_ParseResult_1_Ok
  commentId: P:Yoakke.SynKit.Parser.ParseResult`1.Ok
  fullName: Yoakke.SynKit.Parser.ParseResult<T>.Ok
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T).Ok
  nameWithType: ParseResult<T>.Ok
  nameWithType.vb: ParseResult(Of T).Ok
- uid: Yoakke.SynKit.Parser.ParseResult`1.Ok*
  name: Ok
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html#Yoakke_SynKit_Parser_ParseResult_1_Ok_
  commentId: Overload:Yoakke.SynKit.Parser.ParseResult`1.Ok
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.ParseResult<T>.Ok
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T).Ok
  nameWithType: ParseResult<T>.Ok
  nameWithType.vb: ParseResult(Of T).Ok
- uid: Yoakke.SynKit.Parser.ParseResult`1.op_BitwiseOr(Yoakke.SynKit.Parser.ParseError,Yoakke.SynKit.Parser.ParseResult{`0})
  name: BitwiseOr(ParseError, ParseResult<T>)
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html#Yoakke_SynKit_Parser_ParseResult_1_op_BitwiseOr_Yoakke_SynKit_Parser_ParseError_Yoakke_SynKit_Parser_ParseResult__0__
  commentId: M:Yoakke.SynKit.Parser.ParseResult`1.op_BitwiseOr(Yoakke.SynKit.Parser.ParseError,Yoakke.SynKit.Parser.ParseResult{`0})
  name.vb: BitwiseOr(ParseError, ParseResult(Of T))
  fullName: Yoakke.SynKit.Parser.ParseResult<T>.BitwiseOr(Yoakke.SynKit.Parser.ParseError, Yoakke.SynKit.Parser.ParseResult<T>)
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T).BitwiseOr(Yoakke.SynKit.Parser.ParseError, Yoakke.SynKit.Parser.ParseResult(Of T))
  nameWithType: ParseResult<T>.BitwiseOr(ParseError, ParseResult<T>)
  nameWithType.vb: ParseResult(Of T).BitwiseOr(ParseError, ParseResult(Of T))
- uid: Yoakke.SynKit.Parser.ParseResult`1.op_BitwiseOr(Yoakke.SynKit.Parser.ParseOk{`0},Yoakke.SynKit.Parser.ParseResult{`0})
  name: BitwiseOr(ParseOk<T>, ParseResult<T>)
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html#Yoakke_SynKit_Parser_ParseResult_1_op_BitwiseOr_Yoakke_SynKit_Parser_ParseOk__0__Yoakke_SynKit_Parser_ParseResult__0__
  commentId: M:Yoakke.SynKit.Parser.ParseResult`1.op_BitwiseOr(Yoakke.SynKit.Parser.ParseOk{`0},Yoakke.SynKit.Parser.ParseResult{`0})
  name.vb: BitwiseOr(ParseOk(Of T), ParseResult(Of T))
  fullName: Yoakke.SynKit.Parser.ParseResult<T>.BitwiseOr(Yoakke.SynKit.Parser.ParseOk<T>, Yoakke.SynKit.Parser.ParseResult<T>)
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T).BitwiseOr(Yoakke.SynKit.Parser.ParseOk(Of T), Yoakke.SynKit.Parser.ParseResult(Of T))
  nameWithType: ParseResult<T>.BitwiseOr(ParseOk<T>, ParseResult<T>)
  nameWithType.vb: ParseResult(Of T).BitwiseOr(ParseOk(Of T), ParseResult(Of T))
- uid: Yoakke.SynKit.Parser.ParseResult`1.op_BitwiseOr(Yoakke.SynKit.Parser.ParseResult{`0},Yoakke.SynKit.Parser.ParseError)
  name: BitwiseOr(ParseResult<T>, ParseError)
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html#Yoakke_SynKit_Parser_ParseResult_1_op_BitwiseOr_Yoakke_SynKit_Parser_ParseResult__0__Yoakke_SynKit_Parser_ParseError_
  commentId: M:Yoakke.SynKit.Parser.ParseResult`1.op_BitwiseOr(Yoakke.SynKit.Parser.ParseResult{`0},Yoakke.SynKit.Parser.ParseError)
  name.vb: BitwiseOr(ParseResult(Of T), ParseError)
  fullName: Yoakke.SynKit.Parser.ParseResult<T>.BitwiseOr(Yoakke.SynKit.Parser.ParseResult<T>, Yoakke.SynKit.Parser.ParseError)
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T).BitwiseOr(Yoakke.SynKit.Parser.ParseResult(Of T), Yoakke.SynKit.Parser.ParseError)
  nameWithType: ParseResult<T>.BitwiseOr(ParseResult<T>, ParseError)
  nameWithType.vb: ParseResult(Of T).BitwiseOr(ParseResult(Of T), ParseError)
- uid: Yoakke.SynKit.Parser.ParseResult`1.op_BitwiseOr(Yoakke.SynKit.Parser.ParseResult{`0},Yoakke.SynKit.Parser.ParseOk{`0})
  name: BitwiseOr(ParseResult<T>, ParseOk<T>)
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html#Yoakke_SynKit_Parser_ParseResult_1_op_BitwiseOr_Yoakke_SynKit_Parser_ParseResult__0__Yoakke_SynKit_Parser_ParseOk__0__
  commentId: M:Yoakke.SynKit.Parser.ParseResult`1.op_BitwiseOr(Yoakke.SynKit.Parser.ParseResult{`0},Yoakke.SynKit.Parser.ParseOk{`0})
  name.vb: BitwiseOr(ParseResult(Of T), ParseOk(Of T))
  fullName: Yoakke.SynKit.Parser.ParseResult<T>.BitwiseOr(Yoakke.SynKit.Parser.ParseResult<T>, Yoakke.SynKit.Parser.ParseOk<T>)
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T).BitwiseOr(Yoakke.SynKit.Parser.ParseResult(Of T), Yoakke.SynKit.Parser.ParseOk(Of T))
  nameWithType: ParseResult<T>.BitwiseOr(ParseResult<T>, ParseOk<T>)
  nameWithType.vb: ParseResult(Of T).BitwiseOr(ParseResult(Of T), ParseOk(Of T))
- uid: Yoakke.SynKit.Parser.ParseResult`1.op_BitwiseOr(Yoakke.SynKit.Parser.ParseResult{`0},Yoakke.SynKit.Parser.ParseResult{`0})
  name: BitwiseOr(ParseResult<T>, ParseResult<T>)
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html#Yoakke_SynKit_Parser_ParseResult_1_op_BitwiseOr_Yoakke_SynKit_Parser_ParseResult__0__Yoakke_SynKit_Parser_ParseResult__0__
  commentId: M:Yoakke.SynKit.Parser.ParseResult`1.op_BitwiseOr(Yoakke.SynKit.Parser.ParseResult{`0},Yoakke.SynKit.Parser.ParseResult{`0})
  name.vb: BitwiseOr(ParseResult(Of T), ParseResult(Of T))
  fullName: Yoakke.SynKit.Parser.ParseResult<T>.BitwiseOr(Yoakke.SynKit.Parser.ParseResult<T>, Yoakke.SynKit.Parser.ParseResult<T>)
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T).BitwiseOr(Yoakke.SynKit.Parser.ParseResult(Of T), Yoakke.SynKit.Parser.ParseResult(Of T))
  nameWithType: ParseResult<T>.BitwiseOr(ParseResult<T>, ParseResult<T>)
  nameWithType.vb: ParseResult(Of T).BitwiseOr(ParseResult(Of T), ParseResult(Of T))
- uid: Yoakke.SynKit.Parser.ParseResult`1.op_BitwiseOr*
  name: BitwiseOr
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html#Yoakke_SynKit_Parser_ParseResult_1_op_BitwiseOr_
  commentId: Overload:Yoakke.SynKit.Parser.ParseResult`1.op_BitwiseOr
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.ParseResult<T>.BitwiseOr
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T).BitwiseOr
  nameWithType: ParseResult<T>.BitwiseOr
  nameWithType.vb: ParseResult(Of T).BitwiseOr
- uid: Yoakke.SynKit.Parser.ParseResult`1.op_Implicit(Yoakke.SynKit.Parser.ParseError)~Yoakke.SynKit.Parser.ParseResult{`0}
  name: Implicit(ParseError to ParseResult<T>)
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html#Yoakke_SynKit_Parser_ParseResult_1_op_Implicit_Yoakke_SynKit_Parser_ParseError__Yoakke_SynKit_Parser_ParseResult__0_
  commentId: M:Yoakke.SynKit.Parser.ParseResult`1.op_Implicit(Yoakke.SynKit.Parser.ParseError)~Yoakke.SynKit.Parser.ParseResult{`0}
  name.vb: Widening(ParseError to ParseResult(Of T))
  fullName: Yoakke.SynKit.Parser.ParseResult<T>.Implicit(Yoakke.SynKit.Parser.ParseError to Yoakke.SynKit.Parser.ParseResult<T>)
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T).Widening(Yoakke.SynKit.Parser.ParseError to Yoakke.SynKit.Parser.ParseResult(Of T))
  nameWithType: ParseResult<T>.Implicit(ParseError to ParseResult<T>)
  nameWithType.vb: ParseResult(Of T).Widening(ParseError to ParseResult(Of T))
- uid: Yoakke.SynKit.Parser.ParseResult`1.op_Implicit(Yoakke.SynKit.Parser.ParseOk{`0})~Yoakke.SynKit.Parser.ParseResult{`0}
  name: Implicit(ParseOk<T> to ParseResult<T>)
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html#Yoakke_SynKit_Parser_ParseResult_1_op_Implicit_Yoakke_SynKit_Parser_ParseOk__0___Yoakke_SynKit_Parser_ParseResult__0_
  commentId: M:Yoakke.SynKit.Parser.ParseResult`1.op_Implicit(Yoakke.SynKit.Parser.ParseOk{`0})~Yoakke.SynKit.Parser.ParseResult{`0}
  name.vb: Widening(ParseOk(Of T) to ParseResult(Of T))
  fullName: Yoakke.SynKit.Parser.ParseResult<T>.Implicit(Yoakke.SynKit.Parser.ParseOk<T> to Yoakke.SynKit.Parser.ParseResult<T>)
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T).Widening(Yoakke.SynKit.Parser.ParseOk(Of T) to Yoakke.SynKit.Parser.ParseResult(Of T))
  nameWithType: ParseResult<T>.Implicit(ParseOk<T> to ParseResult<T>)
  nameWithType.vb: ParseResult(Of T).Widening(ParseOk(Of T) to ParseResult(Of T))
- uid: Yoakke.SynKit.Parser.ParseResult`1.op_Implicit*
  name: Implicit
  href: api/Yoakke.SynKit.Parser.ParseResult-1.html#Yoakke_SynKit_Parser_ParseResult_1_op_Implicit_
  commentId: Overload:Yoakke.SynKit.Parser.ParseResult`1.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Yoakke.SynKit.Parser.ParseResult<T>.Implicit
  fullName.vb: Yoakke.SynKit.Parser.ParseResult(Of T).Widening
  nameWithType: ParseResult<T>.Implicit
  nameWithType.vb: ParseResult(Of T).Widening
- uid: Yoakke.SynKit.Parser.Punctuated`2
  name: Punctuated<TValue, TPunct>
  href: api/Yoakke.SynKit.Parser.Punctuated-2.html
  commentId: T:Yoakke.SynKit.Parser.Punctuated`2
  name.vb: Punctuated(Of TValue, TPunct)
  fullName: Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>
  fullName.vb: Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct)
  nameWithType: Punctuated<TValue, TPunct>
  nameWithType.vb: Punctuated(Of TValue, TPunct)
- uid: Yoakke.SynKit.Parser.Punctuated`2.#ctor
  name: Punctuated()
  href: api/Yoakke.SynKit.Parser.Punctuated-2.html#Yoakke_SynKit_Parser_Punctuated_2__ctor
  commentId: M:Yoakke.SynKit.Parser.Punctuated`2.#ctor
  fullName: Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>.Punctuated()
  fullName.vb: Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct).Punctuated()
  nameWithType: Punctuated<TValue, TPunct>.Punctuated()
  nameWithType.vb: Punctuated(Of TValue, TPunct).Punctuated()
- uid: Yoakke.SynKit.Parser.Punctuated`2.#ctor(IEnumerable{Yoakke.SynKit.Parser.PunctuatedValue{`0,`1}})
  name: Punctuated(IEnumerable<PunctuatedValue<TValue, TPunct>>)
  href: api/Yoakke.SynKit.Parser.Punctuated-2.html#Yoakke_SynKit_Parser_Punctuated_2__ctor_IEnumerable_Yoakke_SynKit_Parser_PunctuatedValue__0__1___
  commentId: M:Yoakke.SynKit.Parser.Punctuated`2.#ctor(IEnumerable{Yoakke.SynKit.Parser.PunctuatedValue{`0,`1}})
  name.vb: Punctuated(IEnumerable(Of PunctuatedValue(Of TValue, TPunct)))
  fullName: Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>.Punctuated(IEnumerable<Yoakke.SynKit.Parser.PunctuatedValue<TValue, TPunct>>)
  fullName.vb: Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct).Punctuated(IEnumerable(Of Yoakke.SynKit.Parser.PunctuatedValue(Of TValue, TPunct)))
  nameWithType: Punctuated<TValue, TPunct>.Punctuated(IEnumerable<PunctuatedValue<TValue, TPunct>>)
  nameWithType.vb: Punctuated(Of TValue, TPunct).Punctuated(IEnumerable(Of PunctuatedValue(Of TValue, TPunct)))
- uid: Yoakke.SynKit.Parser.Punctuated`2.#ctor(IReadOnlyList{Yoakke.SynKit.Parser.PunctuatedValue{`0,`1}})
  name: Punctuated(IReadOnlyList<PunctuatedValue<TValue, TPunct>>)
  href: api/Yoakke.SynKit.Parser.Punctuated-2.html#Yoakke_SynKit_Parser_Punctuated_2__ctor_IReadOnlyList_Yoakke_SynKit_Parser_PunctuatedValue__0__1___
  commentId: M:Yoakke.SynKit.Parser.Punctuated`2.#ctor(IReadOnlyList{Yoakke.SynKit.Parser.PunctuatedValue{`0,`1}})
  name.vb: Punctuated(IReadOnlyList(Of PunctuatedValue(Of TValue, TPunct)))
  fullName: Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>.Punctuated(IReadOnlyList<Yoakke.SynKit.Parser.PunctuatedValue<TValue, TPunct>>)
  fullName.vb: Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct).Punctuated(IReadOnlyList(Of Yoakke.SynKit.Parser.PunctuatedValue(Of TValue, TPunct)))
  nameWithType: Punctuated<TValue, TPunct>.Punctuated(IReadOnlyList<PunctuatedValue<TValue, TPunct>>)
  nameWithType.vb: Punctuated(Of TValue, TPunct).Punctuated(IReadOnlyList(Of PunctuatedValue(Of TValue, TPunct)))
- uid: Yoakke.SynKit.Parser.Punctuated`2.#ctor*
  name: Punctuated
  href: api/Yoakke.SynKit.Parser.Punctuated-2.html#Yoakke_SynKit_Parser_Punctuated_2__ctor_
  commentId: Overload:Yoakke.SynKit.Parser.Punctuated`2.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>.Punctuated
  fullName.vb: Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct).Punctuated
  nameWithType: Punctuated<TValue, TPunct>.Punctuated
  nameWithType.vb: Punctuated(Of TValue, TPunct).Punctuated
- uid: Yoakke.SynKit.Parser.Punctuated`2.Count
  name: Count
  href: api/Yoakke.SynKit.Parser.Punctuated-2.html#Yoakke_SynKit_Parser_Punctuated_2_Count
  commentId: P:Yoakke.SynKit.Parser.Punctuated`2.Count
  fullName: Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>.Count
  fullName.vb: Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct).Count
  nameWithType: Punctuated<TValue, TPunct>.Count
  nameWithType.vb: Punctuated(Of TValue, TPunct).Count
- uid: Yoakke.SynKit.Parser.Punctuated`2.Count*
  name: Count
  href: api/Yoakke.SynKit.Parser.Punctuated-2.html#Yoakke_SynKit_Parser_Punctuated_2_Count_
  commentId: Overload:Yoakke.SynKit.Parser.Punctuated`2.Count
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>.Count
  fullName.vb: Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct).Count
  nameWithType: Punctuated<TValue, TPunct>.Count
  nameWithType.vb: Punctuated(Of TValue, TPunct).Count
- uid: Yoakke.SynKit.Parser.Punctuated`2.GetEnumerator
  name: GetEnumerator()
  href: api/Yoakke.SynKit.Parser.Punctuated-2.html#Yoakke_SynKit_Parser_Punctuated_2_GetEnumerator
  commentId: M:Yoakke.SynKit.Parser.Punctuated`2.GetEnumerator
  fullName: Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>.GetEnumerator()
  fullName.vb: Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct).GetEnumerator()
  nameWithType: Punctuated<TValue, TPunct>.GetEnumerator()
  nameWithType.vb: Punctuated(Of TValue, TPunct).GetEnumerator()
- uid: Yoakke.SynKit.Parser.Punctuated`2.GetEnumerator*
  name: GetEnumerator
  href: api/Yoakke.SynKit.Parser.Punctuated-2.html#Yoakke_SynKit_Parser_Punctuated_2_GetEnumerator_
  commentId: Overload:Yoakke.SynKit.Parser.Punctuated`2.GetEnumerator
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>.GetEnumerator
  fullName.vb: Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct).GetEnumerator
  nameWithType: Punctuated<TValue, TPunct>.GetEnumerator
  nameWithType.vb: Punctuated(Of TValue, TPunct).GetEnumerator
- uid: Yoakke.SynKit.Parser.Punctuated`2.Item(System.Int32)
  name: Item[Int32]
  href: api/Yoakke.SynKit.Parser.Punctuated-2.html#Yoakke_SynKit_Parser_Punctuated_2_Item_System_Int32_
  commentId: P:Yoakke.SynKit.Parser.Punctuated`2.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>.Item[System.Int32]
  fullName.vb: Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct).Item(System.Int32)
  nameWithType: Punctuated<TValue, TPunct>.Item[Int32]
  nameWithType.vb: Punctuated(Of TValue, TPunct).Item(Int32)
- uid: Yoakke.SynKit.Parser.Punctuated`2.Item*
  name: Item
  href: api/Yoakke.SynKit.Parser.Punctuated-2.html#Yoakke_SynKit_Parser_Punctuated_2_Item_
  commentId: Overload:Yoakke.SynKit.Parser.Punctuated`2.Item
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>.Item
  fullName.vb: Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct).Item
  nameWithType: Punctuated<TValue, TPunct>.Item
  nameWithType.vb: Punctuated(Of TValue, TPunct).Item
- uid: Yoakke.SynKit.Parser.Punctuated`2.op_Implicit(System.Nullable{System.ValueTuple{`0,IReadOnlyList{System.ValueTuple{`1,`0}},`1}})~Yoakke.SynKit.Parser.Punctuated{`0,`1}
  name: Implicit(Nullable<(TValue, IReadOnlyList<(TPunct, TValue)>, TPunct)> to Punctuated<TValue, TPunct>)
  href: api/Yoakke.SynKit.Parser.Punctuated-2.html#Yoakke_SynKit_Parser_Punctuated_2_op_Implicit_System_Nullable_System_ValueTuple__0_IReadOnlyList_System_ValueTuple__1__0____1____Yoakke_SynKit_Parser_Punctuated__0__1_
  commentId: M:Yoakke.SynKit.Parser.Punctuated`2.op_Implicit(System.Nullable{System.ValueTuple{`0,IReadOnlyList{System.ValueTuple{`1,`0}},`1}})~Yoakke.SynKit.Parser.Punctuated{`0,`1}
  name.vb: Widening(Nullable(Of (TValue, IReadOnlyList(Of (TPunct, TValue)), TPunct)) to Punctuated(Of TValue, TPunct))
  fullName: Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>.Implicit(System.Nullable<System.ValueTuple<TValue, IReadOnlyList<System.ValueTuple<TPunct, TValue>>, TPunct>> to Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>)
  fullName.vb: Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct).Widening(System.Nullable(Of System.ValueTuple(Of TValue, IReadOnlyList(Of System.ValueTuple(Of TPunct, TValue)), TPunct)) to Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct))
  nameWithType: Punctuated<TValue, TPunct>.Implicit(Nullable<(TValue, IReadOnlyList<(TPunct, TValue)>, TPunct)> to Punctuated<TValue, TPunct>)
  nameWithType.vb: Punctuated(Of TValue, TPunct).Widening(Nullable(Of (TValue, IReadOnlyList(Of (TPunct, TValue)), TPunct)) to Punctuated(Of TValue, TPunct))
- uid: Yoakke.SynKit.Parser.Punctuated`2.op_Implicit(System.Nullable{System.ValueTuple{`0,IReadOnlyList{System.ValueTuple{`1,`0}}}})~Yoakke.SynKit.Parser.Punctuated{`0,`1}
  name: Implicit(Nullable<(TValue, IReadOnlyList<(TPunct, TValue)>)> to Punctuated<TValue, TPunct>)
  href: api/Yoakke.SynKit.Parser.Punctuated-2.html#Yoakke_SynKit_Parser_Punctuated_2_op_Implicit_System_Nullable_System_ValueTuple__0_IReadOnlyList_System_ValueTuple__1__0______Yoakke_SynKit_Parser_Punctuated__0__1_
  commentId: M:Yoakke.SynKit.Parser.Punctuated`2.op_Implicit(System.Nullable{System.ValueTuple{`0,IReadOnlyList{System.ValueTuple{`1,`0}}}})~Yoakke.SynKit.Parser.Punctuated{`0,`1}
  name.vb: Widening(Nullable(Of (TValue, IReadOnlyList(Of (TPunct, TValue)))) to Punctuated(Of TValue, TPunct))
  fullName: Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>.Implicit(System.Nullable<System.ValueTuple<TValue, IReadOnlyList<System.ValueTuple<TPunct, TValue>>>> to Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>)
  fullName.vb: Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct).Widening(System.Nullable(Of System.ValueTuple(Of TValue, IReadOnlyList(Of System.ValueTuple(Of TPunct, TValue)))) to Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct))
  nameWithType: Punctuated<TValue, TPunct>.Implicit(Nullable<(TValue, IReadOnlyList<(TPunct, TValue)>)> to Punctuated<TValue, TPunct>)
  nameWithType.vb: Punctuated(Of TValue, TPunct).Widening(Nullable(Of (TValue, IReadOnlyList(Of (TPunct, TValue)))) to Punctuated(Of TValue, TPunct))
- uid: Yoakke.SynKit.Parser.Punctuated`2.op_Implicit(System.ValueTuple{`0,IReadOnlyList{System.ValueTuple{`1,`0}},`1})~Yoakke.SynKit.Parser.Punctuated{`0,`1}
  name: Implicit((TValue, IReadOnlyList<(TPunct, TValue)>, TPunct) to Punctuated<TValue, TPunct>)
  href: api/Yoakke.SynKit.Parser.Punctuated-2.html#Yoakke_SynKit_Parser_Punctuated_2_op_Implicit_System_ValueTuple__0_IReadOnlyList_System_ValueTuple__1__0____1___Yoakke_SynKit_Parser_Punctuated__0__1_
  commentId: M:Yoakke.SynKit.Parser.Punctuated`2.op_Implicit(System.ValueTuple{`0,IReadOnlyList{System.ValueTuple{`1,`0}},`1})~Yoakke.SynKit.Parser.Punctuated{`0,`1}
  name.vb: Widening((TValue, IReadOnlyList(Of (TPunct, TValue)), TPunct) to Punctuated(Of TValue, TPunct))
  fullName: Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>.Implicit(System.ValueTuple<TValue, IReadOnlyList<System.ValueTuple<TPunct, TValue>>, TPunct> to Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>)
  fullName.vb: Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct).Widening(System.ValueTuple(Of TValue, IReadOnlyList(Of System.ValueTuple(Of TPunct, TValue)), TPunct) to Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct))
  nameWithType: Punctuated<TValue, TPunct>.Implicit((TValue, IReadOnlyList<(TPunct, TValue)>, TPunct) to Punctuated<TValue, TPunct>)
  nameWithType.vb: Punctuated(Of TValue, TPunct).Widening((TValue, IReadOnlyList(Of (TPunct, TValue)), TPunct) to Punctuated(Of TValue, TPunct))
- uid: Yoakke.SynKit.Parser.Punctuated`2.op_Implicit(System.ValueTuple{`0,IReadOnlyList{System.ValueTuple{`1,`0}}})~Yoakke.SynKit.Parser.Punctuated{`0,`1}
  name: Implicit((TValue, IReadOnlyList<(TPunct, TValue)>) to Punctuated<TValue, TPunct>)
  href: api/Yoakke.SynKit.Parser.Punctuated-2.html#Yoakke_SynKit_Parser_Punctuated_2_op_Implicit_System_ValueTuple__0_IReadOnlyList_System_ValueTuple__1__0_____Yoakke_SynKit_Parser_Punctuated__0__1_
  commentId: M:Yoakke.SynKit.Parser.Punctuated`2.op_Implicit(System.ValueTuple{`0,IReadOnlyList{System.ValueTuple{`1,`0}}})~Yoakke.SynKit.Parser.Punctuated{`0,`1}
  name.vb: Widening((TValue, IReadOnlyList(Of (TPunct, TValue))) to Punctuated(Of TValue, TPunct))
  fullName: Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>.Implicit(System.ValueTuple<TValue, IReadOnlyList<System.ValueTuple<TPunct, TValue>>> to Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>)
  fullName.vb: Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct).Widening(System.ValueTuple(Of TValue, IReadOnlyList(Of System.ValueTuple(Of TPunct, TValue))) to Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct))
  nameWithType: Punctuated<TValue, TPunct>.Implicit((TValue, IReadOnlyList<(TPunct, TValue)>) to Punctuated<TValue, TPunct>)
  nameWithType.vb: Punctuated(Of TValue, TPunct).Widening((TValue, IReadOnlyList(Of (TPunct, TValue))) to Punctuated(Of TValue, TPunct))
- uid: Yoakke.SynKit.Parser.Punctuated`2.op_Implicit*
  name: Implicit
  href: api/Yoakke.SynKit.Parser.Punctuated-2.html#Yoakke_SynKit_Parser_Punctuated_2_op_Implicit_
  commentId: Overload:Yoakke.SynKit.Parser.Punctuated`2.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>.Implicit
  fullName.vb: Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct).Widening
  nameWithType: Punctuated<TValue, TPunct>.Implicit
  nameWithType.vb: Punctuated(Of TValue, TPunct).Widening
- uid: Yoakke.SynKit.Parser.Punctuated`2.Punctuations
  name: Punctuations
  href: api/Yoakke.SynKit.Parser.Punctuated-2.html#Yoakke_SynKit_Parser_Punctuated_2_Punctuations
  commentId: P:Yoakke.SynKit.Parser.Punctuated`2.Punctuations
  fullName: Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>.Punctuations
  fullName.vb: Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct).Punctuations
  nameWithType: Punctuated<TValue, TPunct>.Punctuations
  nameWithType.vb: Punctuated(Of TValue, TPunct).Punctuations
- uid: Yoakke.SynKit.Parser.Punctuated`2.Punctuations*
  name: Punctuations
  href: api/Yoakke.SynKit.Parser.Punctuated-2.html#Yoakke_SynKit_Parser_Punctuated_2_Punctuations_
  commentId: Overload:Yoakke.SynKit.Parser.Punctuated`2.Punctuations
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>.Punctuations
  fullName.vb: Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct).Punctuations
  nameWithType: Punctuated<TValue, TPunct>.Punctuations
  nameWithType.vb: Punctuated(Of TValue, TPunct).Punctuations
- uid: Yoakke.SynKit.Parser.Punctuated`2.Values
  name: Values
  href: api/Yoakke.SynKit.Parser.Punctuated-2.html#Yoakke_SynKit_Parser_Punctuated_2_Values
  commentId: P:Yoakke.SynKit.Parser.Punctuated`2.Values
  fullName: Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>.Values
  fullName.vb: Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct).Values
  nameWithType: Punctuated<TValue, TPunct>.Values
  nameWithType.vb: Punctuated(Of TValue, TPunct).Values
- uid: Yoakke.SynKit.Parser.Punctuated`2.Values*
  name: Values
  href: api/Yoakke.SynKit.Parser.Punctuated-2.html#Yoakke_SynKit_Parser_Punctuated_2_Values_
  commentId: Overload:Yoakke.SynKit.Parser.Punctuated`2.Values
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.Punctuated<TValue, TPunct>.Values
  fullName.vb: Yoakke.SynKit.Parser.Punctuated(Of TValue, TPunct).Values
  nameWithType: Punctuated<TValue, TPunct>.Values
  nameWithType.vb: Punctuated(Of TValue, TPunct).Values
- uid: Yoakke.SynKit.Parser.PunctuatedValue`2
  name: PunctuatedValue<TValue, TPunct>
  href: api/Yoakke.SynKit.Parser.PunctuatedValue-2.html
  commentId: T:Yoakke.SynKit.Parser.PunctuatedValue`2
  name.vb: PunctuatedValue(Of TValue, TPunct)
  fullName: Yoakke.SynKit.Parser.PunctuatedValue<TValue, TPunct>
  fullName.vb: Yoakke.SynKit.Parser.PunctuatedValue(Of TValue, TPunct)
  nameWithType: PunctuatedValue<TValue, TPunct>
  nameWithType.vb: PunctuatedValue(Of TValue, TPunct)
- uid: Yoakke.SynKit.Parser.PunctuatedValue`2.#ctor(`0,`1)
  name: PunctuatedValue(TValue, TPunct)
  href: api/Yoakke.SynKit.Parser.PunctuatedValue-2.html#Yoakke_SynKit_Parser_PunctuatedValue_2__ctor__0__1_
  commentId: M:Yoakke.SynKit.Parser.PunctuatedValue`2.#ctor(`0,`1)
  fullName: Yoakke.SynKit.Parser.PunctuatedValue<TValue, TPunct>.PunctuatedValue(TValue, TPunct)
  fullName.vb: Yoakke.SynKit.Parser.PunctuatedValue(Of TValue, TPunct).PunctuatedValue(TValue, TPunct)
  nameWithType: PunctuatedValue<TValue, TPunct>.PunctuatedValue(TValue, TPunct)
  nameWithType.vb: PunctuatedValue(Of TValue, TPunct).PunctuatedValue(TValue, TPunct)
- uid: Yoakke.SynKit.Parser.PunctuatedValue`2.#ctor*
  name: PunctuatedValue
  href: api/Yoakke.SynKit.Parser.PunctuatedValue-2.html#Yoakke_SynKit_Parser_PunctuatedValue_2__ctor_
  commentId: Overload:Yoakke.SynKit.Parser.PunctuatedValue`2.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.PunctuatedValue<TValue, TPunct>.PunctuatedValue
  fullName.vb: Yoakke.SynKit.Parser.PunctuatedValue(Of TValue, TPunct).PunctuatedValue
  nameWithType: PunctuatedValue<TValue, TPunct>.PunctuatedValue
  nameWithType.vb: PunctuatedValue(Of TValue, TPunct).PunctuatedValue
- uid: Yoakke.SynKit.Parser.PunctuatedValue`2.Deconstruct(`0@,`1@)
  name: Deconstruct(out TValue, out TPunct)
  href: api/Yoakke.SynKit.Parser.PunctuatedValue-2.html#Yoakke_SynKit_Parser_PunctuatedValue_2_Deconstruct__0___1__
  commentId: M:Yoakke.SynKit.Parser.PunctuatedValue`2.Deconstruct(`0@,`1@)
  name.vb: Deconstruct(ByRef TValue, ByRef TPunct)
  fullName: Yoakke.SynKit.Parser.PunctuatedValue<TValue, TPunct>.Deconstruct(out TValue, out TPunct)
  fullName.vb: Yoakke.SynKit.Parser.PunctuatedValue(Of TValue, TPunct).Deconstruct(ByRef TValue, ByRef TPunct)
  nameWithType: PunctuatedValue<TValue, TPunct>.Deconstruct(out TValue, out TPunct)
  nameWithType.vb: PunctuatedValue(Of TValue, TPunct).Deconstruct(ByRef TValue, ByRef TPunct)
- uid: Yoakke.SynKit.Parser.PunctuatedValue`2.Deconstruct*
  name: Deconstruct
  href: api/Yoakke.SynKit.Parser.PunctuatedValue-2.html#Yoakke_SynKit_Parser_PunctuatedValue_2_Deconstruct_
  commentId: Overload:Yoakke.SynKit.Parser.PunctuatedValue`2.Deconstruct
  isSpec: "True"
  fullName: Yoakke.SynKit.Parser.PunctuatedValue<TValue, TPunct>.Deconstruct
  fullName.vb: Yoakke.SynKit.Parser.PunctuatedValue(Of TValue, TPunct).Deconstruct
  nameWithType: PunctuatedValue<TValue, TPunct>.Deconstruct
  nameWithType.vb: PunctuatedValue(Of TValue, TPunct).Deconstruct
- uid: Yoakke.SynKit.Parser.PunctuatedValue`2.Punctuation
  name: Punctuation
  href: api/Yoakke.SynKit.Parser.PunctuatedValue-2.html#Yoakke_SynKit_Parser_PunctuatedValue_2_Punctuation
  commentId: F:Yoakke.SynKit.Parser.PunctuatedValue`2.Punctuation
  fullName: Yoakke.SynKit.Parser.PunctuatedValue<TValue, TPunct>.Punctuation
  fullName.vb: Yoakke.SynKit.Parser.PunctuatedValue(Of TValue, TPunct).Punctuation
  nameWithType: PunctuatedValue<TValue, TPunct>.Punctuation
  nameWithType.vb: PunctuatedValue(Of TValue, TPunct).Punctuation
- uid: Yoakke.SynKit.Parser.PunctuatedValue`2.Value
  name: Value
  href: api/Yoakke.SynKit.Parser.PunctuatedValue-2.html#Yoakke_SynKit_Parser_PunctuatedValue_2_Value
  commentId: F:Yoakke.SynKit.Parser.PunctuatedValue`2.Value
  fullName: Yoakke.SynKit.Parser.PunctuatedValue<TValue, TPunct>.Value
  fullName.vb: Yoakke.SynKit.Parser.PunctuatedValue(Of TValue, TPunct).Value
  nameWithType: PunctuatedValue<TValue, TPunct>.Value
  nameWithType.vb: PunctuatedValue(Of TValue, TPunct).Value
- uid: Yoakke.SynKit.Reporting
  name: Yoakke.SynKit.Reporting
  href: api/Yoakke.SynKit.Reporting.html
  commentId: N:Yoakke.SynKit.Reporting
  fullName: Yoakke.SynKit.Reporting
  nameWithType: Yoakke.SynKit.Reporting
- uid: Yoakke.SynKit.Reporting.Diagnostics
  name: Diagnostics
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html
  commentId: T:Yoakke.SynKit.Reporting.Diagnostics
  fullName: Yoakke.SynKit.Reporting.Diagnostics
  nameWithType: Diagnostics
- uid: Yoakke.SynKit.Reporting.Diagnostics.Code
  name: Code
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_Code
  commentId: P:Yoakke.SynKit.Reporting.Diagnostics.Code
  fullName: Yoakke.SynKit.Reporting.Diagnostics.Code
  nameWithType: Diagnostics.Code
- uid: Yoakke.SynKit.Reporting.Diagnostics.Code*
  name: Code
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_Code_
  commentId: Overload:Yoakke.SynKit.Reporting.Diagnostics.Code
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Diagnostics.Code
  nameWithType: Diagnostics.Code
- uid: Yoakke.SynKit.Reporting.Diagnostics.Information
  name: Information
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_Information
  commentId: P:Yoakke.SynKit.Reporting.Diagnostics.Information
  fullName: Yoakke.SynKit.Reporting.Diagnostics.Information
  nameWithType: Diagnostics.Information
- uid: Yoakke.SynKit.Reporting.Diagnostics.Information*
  name: Information
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_Information_
  commentId: Overload:Yoakke.SynKit.Reporting.Diagnostics.Information
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Diagnostics.Information
  nameWithType: Diagnostics.Information
- uid: Yoakke.SynKit.Reporting.Diagnostics.Message
  name: Message
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_Message
  commentId: P:Yoakke.SynKit.Reporting.Diagnostics.Message
  fullName: Yoakke.SynKit.Reporting.Diagnostics.Message
  nameWithType: Diagnostics.Message
- uid: Yoakke.SynKit.Reporting.Diagnostics.Message*
  name: Message
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_Message_
  commentId: Overload:Yoakke.SynKit.Reporting.Diagnostics.Message
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Diagnostics.Message
  nameWithType: Diagnostics.Message
- uid: Yoakke.SynKit.Reporting.Diagnostics.Severity
  name: Severity
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_Severity
  commentId: P:Yoakke.SynKit.Reporting.Diagnostics.Severity
  fullName: Yoakke.SynKit.Reporting.Diagnostics.Severity
  nameWithType: Diagnostics.Severity
- uid: Yoakke.SynKit.Reporting.Diagnostics.Severity*
  name: Severity
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_Severity_
  commentId: Overload:Yoakke.SynKit.Reporting.Diagnostics.Severity
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Diagnostics.Severity
  nameWithType: Diagnostics.Severity
- uid: Yoakke.SynKit.Reporting.Diagnostics.WithCode(System.String)
  name: WithCode(String)
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_WithCode_System_String_
  commentId: M:Yoakke.SynKit.Reporting.Diagnostics.WithCode(System.String)
  fullName: Yoakke.SynKit.Reporting.Diagnostics.WithCode(System.String)
  nameWithType: Diagnostics.WithCode(String)
- uid: Yoakke.SynKit.Reporting.Diagnostics.WithCode*
  name: WithCode
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_WithCode_
  commentId: Overload:Yoakke.SynKit.Reporting.Diagnostics.WithCode
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Diagnostics.WithCode
  nameWithType: Diagnostics.WithCode
- uid: Yoakke.SynKit.Reporting.Diagnostics.WithFootnoteInfo(System.String)
  name: WithFootnoteInfo(String)
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_WithFootnoteInfo_System_String_
  commentId: M:Yoakke.SynKit.Reporting.Diagnostics.WithFootnoteInfo(System.String)
  fullName: Yoakke.SynKit.Reporting.Diagnostics.WithFootnoteInfo(System.String)
  nameWithType: Diagnostics.WithFootnoteInfo(String)
- uid: Yoakke.SynKit.Reporting.Diagnostics.WithFootnoteInfo(Yoakke.SynKit.Reporting.Severity,System.String)
  name: WithFootnoteInfo(Severity, String)
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_WithFootnoteInfo_Yoakke_SynKit_Reporting_Severity_System_String_
  commentId: M:Yoakke.SynKit.Reporting.Diagnostics.WithFootnoteInfo(Yoakke.SynKit.Reporting.Severity,System.String)
  fullName: Yoakke.SynKit.Reporting.Diagnostics.WithFootnoteInfo(Yoakke.SynKit.Reporting.Severity, System.String)
  nameWithType: Diagnostics.WithFootnoteInfo(Severity, String)
- uid: Yoakke.SynKit.Reporting.Diagnostics.WithFootnoteInfo*
  name: WithFootnoteInfo
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_WithFootnoteInfo_
  commentId: Overload:Yoakke.SynKit.Reporting.Diagnostics.WithFootnoteInfo
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Diagnostics.WithFootnoteInfo
  nameWithType: Diagnostics.WithFootnoteInfo
- uid: Yoakke.SynKit.Reporting.Diagnostics.WithInfo(Yoakke.SynKit.Reporting.IDiagnosticInfo)
  name: WithInfo(IDiagnosticInfo)
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_WithInfo_Yoakke_SynKit_Reporting_IDiagnosticInfo_
  commentId: M:Yoakke.SynKit.Reporting.Diagnostics.WithInfo(Yoakke.SynKit.Reporting.IDiagnosticInfo)
  fullName: Yoakke.SynKit.Reporting.Diagnostics.WithInfo(Yoakke.SynKit.Reporting.IDiagnosticInfo)
  nameWithType: Diagnostics.WithInfo(IDiagnosticInfo)
- uid: Yoakke.SynKit.Reporting.Diagnostics.WithInfo*
  name: WithInfo
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_WithInfo_
  commentId: Overload:Yoakke.SynKit.Reporting.Diagnostics.WithInfo
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Diagnostics.WithInfo
  nameWithType: Diagnostics.WithInfo
- uid: Yoakke.SynKit.Reporting.Diagnostics.WithMessage(System.String)
  name: WithMessage(String)
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_WithMessage_System_String_
  commentId: M:Yoakke.SynKit.Reporting.Diagnostics.WithMessage(System.String)
  fullName: Yoakke.SynKit.Reporting.Diagnostics.WithMessage(System.String)
  nameWithType: Diagnostics.WithMessage(String)
- uid: Yoakke.SynKit.Reporting.Diagnostics.WithMessage*
  name: WithMessage
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_WithMessage_
  commentId: Overload:Yoakke.SynKit.Reporting.Diagnostics.WithMessage
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Diagnostics.WithMessage
  nameWithType: Diagnostics.WithMessage
- uid: Yoakke.SynKit.Reporting.Diagnostics.WithSeverity(Yoakke.SynKit.Reporting.Severity)
  name: WithSeverity(Severity)
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_WithSeverity_Yoakke_SynKit_Reporting_Severity_
  commentId: M:Yoakke.SynKit.Reporting.Diagnostics.WithSeverity(Yoakke.SynKit.Reporting.Severity)
  fullName: Yoakke.SynKit.Reporting.Diagnostics.WithSeverity(Yoakke.SynKit.Reporting.Severity)
  nameWithType: Diagnostics.WithSeverity(Severity)
- uid: Yoakke.SynKit.Reporting.Diagnostics.WithSeverity*
  name: WithSeverity
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_WithSeverity_
  commentId: Overload:Yoakke.SynKit.Reporting.Diagnostics.WithSeverity
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Diagnostics.WithSeverity
  nameWithType: Diagnostics.WithSeverity
- uid: Yoakke.SynKit.Reporting.Diagnostics.WithSourceInfo(Yoakke.SynKit.Text.Location)
  name: WithSourceInfo(Location)
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_WithSourceInfo_Yoakke_SynKit_Text_Location_
  commentId: M:Yoakke.SynKit.Reporting.Diagnostics.WithSourceInfo(Yoakke.SynKit.Text.Location)
  fullName: Yoakke.SynKit.Reporting.Diagnostics.WithSourceInfo(Yoakke.SynKit.Text.Location)
  nameWithType: Diagnostics.WithSourceInfo(Location)
- uid: Yoakke.SynKit.Reporting.Diagnostics.WithSourceInfo(Yoakke.SynKit.Text.Location,System.String)
  name: WithSourceInfo(Location, String)
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_WithSourceInfo_Yoakke_SynKit_Text_Location_System_String_
  commentId: M:Yoakke.SynKit.Reporting.Diagnostics.WithSourceInfo(Yoakke.SynKit.Text.Location,System.String)
  fullName: Yoakke.SynKit.Reporting.Diagnostics.WithSourceInfo(Yoakke.SynKit.Text.Location, System.String)
  nameWithType: Diagnostics.WithSourceInfo(Location, String)
- uid: Yoakke.SynKit.Reporting.Diagnostics.WithSourceInfo(Yoakke.SynKit.Text.Location,Yoakke.SynKit.Reporting.Severity)
  name: WithSourceInfo(Location, Severity)
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_WithSourceInfo_Yoakke_SynKit_Text_Location_Yoakke_SynKit_Reporting_Severity_
  commentId: M:Yoakke.SynKit.Reporting.Diagnostics.WithSourceInfo(Yoakke.SynKit.Text.Location,Yoakke.SynKit.Reporting.Severity)
  fullName: Yoakke.SynKit.Reporting.Diagnostics.WithSourceInfo(Yoakke.SynKit.Text.Location, Yoakke.SynKit.Reporting.Severity)
  nameWithType: Diagnostics.WithSourceInfo(Location, Severity)
- uid: Yoakke.SynKit.Reporting.Diagnostics.WithSourceInfo(Yoakke.SynKit.Text.Location,Yoakke.SynKit.Reporting.Severity,System.String)
  name: WithSourceInfo(Location, Severity, String)
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_WithSourceInfo_Yoakke_SynKit_Text_Location_Yoakke_SynKit_Reporting_Severity_System_String_
  commentId: M:Yoakke.SynKit.Reporting.Diagnostics.WithSourceInfo(Yoakke.SynKit.Text.Location,Yoakke.SynKit.Reporting.Severity,System.String)
  fullName: Yoakke.SynKit.Reporting.Diagnostics.WithSourceInfo(Yoakke.SynKit.Text.Location, Yoakke.SynKit.Reporting.Severity, System.String)
  nameWithType: Diagnostics.WithSourceInfo(Location, Severity, String)
- uid: Yoakke.SynKit.Reporting.Diagnostics.WithSourceInfo*
  name: WithSourceInfo
  href: api/Yoakke.SynKit.Reporting.Diagnostics.html#Yoakke_SynKit_Reporting_Diagnostics_WithSourceInfo_
  commentId: Overload:Yoakke.SynKit.Reporting.Diagnostics.WithSourceInfo
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Diagnostics.WithSourceInfo
  nameWithType: Diagnostics.WithSourceInfo
- uid: Yoakke.SynKit.Reporting.FootnoteDiagnosticInfo
  name: FootnoteDiagnosticInfo
  href: api/Yoakke.SynKit.Reporting.FootnoteDiagnosticInfo.html
  commentId: T:Yoakke.SynKit.Reporting.FootnoteDiagnosticInfo
  fullName: Yoakke.SynKit.Reporting.FootnoteDiagnosticInfo
  nameWithType: FootnoteDiagnosticInfo
- uid: Yoakke.SynKit.Reporting.FootnoteDiagnosticInfo.Message
  name: Message
  href: api/Yoakke.SynKit.Reporting.FootnoteDiagnosticInfo.html#Yoakke_SynKit_Reporting_FootnoteDiagnosticInfo_Message
  commentId: P:Yoakke.SynKit.Reporting.FootnoteDiagnosticInfo.Message
  fullName: Yoakke.SynKit.Reporting.FootnoteDiagnosticInfo.Message
  nameWithType: FootnoteDiagnosticInfo.Message
- uid: Yoakke.SynKit.Reporting.FootnoteDiagnosticInfo.Message*
  name: Message
  href: api/Yoakke.SynKit.Reporting.FootnoteDiagnosticInfo.html#Yoakke_SynKit_Reporting_FootnoteDiagnosticInfo_Message_
  commentId: Overload:Yoakke.SynKit.Reporting.FootnoteDiagnosticInfo.Message
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.FootnoteDiagnosticInfo.Message
  nameWithType: FootnoteDiagnosticInfo.Message
- uid: Yoakke.SynKit.Reporting.FootnoteDiagnosticInfo.Severity
  name: Severity
  href: api/Yoakke.SynKit.Reporting.FootnoteDiagnosticInfo.html#Yoakke_SynKit_Reporting_FootnoteDiagnosticInfo_Severity
  commentId: P:Yoakke.SynKit.Reporting.FootnoteDiagnosticInfo.Severity
  fullName: Yoakke.SynKit.Reporting.FootnoteDiagnosticInfo.Severity
  nameWithType: FootnoteDiagnosticInfo.Severity
- uid: Yoakke.SynKit.Reporting.FootnoteDiagnosticInfo.Severity*
  name: Severity
  href: api/Yoakke.SynKit.Reporting.FootnoteDiagnosticInfo.html#Yoakke_SynKit_Reporting_FootnoteDiagnosticInfo_Severity_
  commentId: Overload:Yoakke.SynKit.Reporting.FootnoteDiagnosticInfo.Severity
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.FootnoteDiagnosticInfo.Severity
  nameWithType: FootnoteDiagnosticInfo.Severity
- uid: Yoakke.SynKit.Reporting.IDiagnosticInfo
  name: IDiagnosticInfo
  href: api/Yoakke.SynKit.Reporting.IDiagnosticInfo.html
  commentId: T:Yoakke.SynKit.Reporting.IDiagnosticInfo
  fullName: Yoakke.SynKit.Reporting.IDiagnosticInfo
  nameWithType: IDiagnosticInfo
- uid: Yoakke.SynKit.Reporting.IDiagnosticInfo.Message
  name: Message
  href: api/Yoakke.SynKit.Reporting.IDiagnosticInfo.html#Yoakke_SynKit_Reporting_IDiagnosticInfo_Message
  commentId: P:Yoakke.SynKit.Reporting.IDiagnosticInfo.Message
  fullName: Yoakke.SynKit.Reporting.IDiagnosticInfo.Message
  nameWithType: IDiagnosticInfo.Message
- uid: Yoakke.SynKit.Reporting.IDiagnosticInfo.Message*
  name: Message
  href: api/Yoakke.SynKit.Reporting.IDiagnosticInfo.html#Yoakke_SynKit_Reporting_IDiagnosticInfo_Message_
  commentId: Overload:Yoakke.SynKit.Reporting.IDiagnosticInfo.Message
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.IDiagnosticInfo.Message
  nameWithType: IDiagnosticInfo.Message
- uid: Yoakke.SynKit.Reporting.IDiagnosticInfo.Severity
  name: Severity
  href: api/Yoakke.SynKit.Reporting.IDiagnosticInfo.html#Yoakke_SynKit_Reporting_IDiagnosticInfo_Severity
  commentId: P:Yoakke.SynKit.Reporting.IDiagnosticInfo.Severity
  fullName: Yoakke.SynKit.Reporting.IDiagnosticInfo.Severity
  nameWithType: IDiagnosticInfo.Severity
- uid: Yoakke.SynKit.Reporting.IDiagnosticInfo.Severity*
  name: Severity
  href: api/Yoakke.SynKit.Reporting.IDiagnosticInfo.html#Yoakke_SynKit_Reporting_IDiagnosticInfo_Severity_
  commentId: Overload:Yoakke.SynKit.Reporting.IDiagnosticInfo.Severity
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.IDiagnosticInfo.Severity
  nameWithType: IDiagnosticInfo.Severity
- uid: Yoakke.SynKit.Reporting.Present
  name: Yoakke.SynKit.Reporting.Present
  href: api/Yoakke.SynKit.Reporting.Present.html
  commentId: N:Yoakke.SynKit.Reporting.Present
  fullName: Yoakke.SynKit.Reporting.Present
  nameWithType: Yoakke.SynKit.Reporting.Present
- uid: Yoakke.SynKit.Reporting.Present.ColoredToken
  name: ColoredToken
  href: api/Yoakke.SynKit.Reporting.Present.ColoredToken.html
  commentId: T:Yoakke.SynKit.Reporting.Present.ColoredToken
  fullName: Yoakke.SynKit.Reporting.Present.ColoredToken
  nameWithType: ColoredToken
- uid: Yoakke.SynKit.Reporting.Present.ColoredToken.#ctor(System.Int32,System.Int32,Yoakke.SynKit.Reporting.Present.TokenKind)
  name: ColoredToken(Int32, Int32, TokenKind)
  href: api/Yoakke.SynKit.Reporting.Present.ColoredToken.html#Yoakke_SynKit_Reporting_Present_ColoredToken__ctor_System_Int32_System_Int32_Yoakke_SynKit_Reporting_Present_TokenKind_
  commentId: M:Yoakke.SynKit.Reporting.Present.ColoredToken.#ctor(System.Int32,System.Int32,Yoakke.SynKit.Reporting.Present.TokenKind)
  fullName: Yoakke.SynKit.Reporting.Present.ColoredToken.ColoredToken(System.Int32, System.Int32, Yoakke.SynKit.Reporting.Present.TokenKind)
  nameWithType: ColoredToken.ColoredToken(Int32, Int32, TokenKind)
- uid: Yoakke.SynKit.Reporting.Present.ColoredToken.#ctor*
  name: ColoredToken
  href: api/Yoakke.SynKit.Reporting.Present.ColoredToken.html#Yoakke_SynKit_Reporting_Present_ColoredToken__ctor_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.ColoredToken.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.ColoredToken.ColoredToken
  nameWithType: ColoredToken.ColoredToken
- uid: Yoakke.SynKit.Reporting.Present.ColoredToken.Kind
  name: Kind
  href: api/Yoakke.SynKit.Reporting.Present.ColoredToken.html#Yoakke_SynKit_Reporting_Present_ColoredToken_Kind
  commentId: F:Yoakke.SynKit.Reporting.Present.ColoredToken.Kind
  fullName: Yoakke.SynKit.Reporting.Present.ColoredToken.Kind
  nameWithType: ColoredToken.Kind
- uid: Yoakke.SynKit.Reporting.Present.ColoredToken.Length
  name: Length
  href: api/Yoakke.SynKit.Reporting.Present.ColoredToken.html#Yoakke_SynKit_Reporting_Present_ColoredToken_Length
  commentId: F:Yoakke.SynKit.Reporting.Present.ColoredToken.Length
  fullName: Yoakke.SynKit.Reporting.Present.ColoredToken.Length
  nameWithType: ColoredToken.Length
- uid: Yoakke.SynKit.Reporting.Present.ColoredToken.Start
  name: Start
  href: api/Yoakke.SynKit.Reporting.Present.ColoredToken.html#Yoakke_SynKit_Reporting_Present_ColoredToken_Start
  commentId: F:Yoakke.SynKit.Reporting.Present.ColoredToken.Start
  fullName: Yoakke.SynKit.Reporting.Present.ColoredToken.Start
  nameWithType: ColoredToken.Start
- uid: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle
  name: DiagnosticsStyle
  href: api/Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.html
  commentId: T:Yoakke.SynKit.Reporting.Present.DiagnosticsStyle
  fullName: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle
  nameWithType: DiagnosticsStyle
- uid: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.ConnectUpLines
  name: ConnectUpLines
  href: api/Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.html#Yoakke_SynKit_Reporting_Present_DiagnosticsStyle_ConnectUpLines
  commentId: P:Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.ConnectUpLines
  fullName: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.ConnectUpLines
  nameWithType: DiagnosticsStyle.ConnectUpLines
- uid: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.ConnectUpLines*
  name: ConnectUpLines
  href: api/Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.html#Yoakke_SynKit_Reporting_Present_DiagnosticsStyle_ConnectUpLines_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.ConnectUpLines
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.ConnectUpLines
  nameWithType: DiagnosticsStyle.ConnectUpLines
- uid: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.Default
  name: Default
  href: api/Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.html#Yoakke_SynKit_Reporting_Present_DiagnosticsStyle_Default
  commentId: F:Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.Default
  fullName: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.Default
  nameWithType: DiagnosticsStyle.Default
- uid: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.DefaultColor
  name: DefaultColor
  href: api/Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.html#Yoakke_SynKit_Reporting_Present_DiagnosticsStyle_DefaultColor
  commentId: P:Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.DefaultColor
  fullName: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.DefaultColor
  nameWithType: DiagnosticsStyle.DefaultColor
- uid: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.DefaultColor*
  name: DefaultColor
  href: api/Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.html#Yoakke_SynKit_Reporting_Present_DiagnosticsStyle_DefaultColor_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.DefaultColor
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.DefaultColor
  nameWithType: DiagnosticsStyle.DefaultColor
- uid: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.GetSeverityColor(Yoakke.SynKit.Reporting.Severity)
  name: GetSeverityColor(Severity)
  href: api/Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.html#Yoakke_SynKit_Reporting_Present_DiagnosticsStyle_GetSeverityColor_Yoakke_SynKit_Reporting_Severity_
  commentId: M:Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.GetSeverityColor(Yoakke.SynKit.Reporting.Severity)
  fullName: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.GetSeverityColor(Yoakke.SynKit.Reporting.Severity)
  nameWithType: DiagnosticsStyle.GetSeverityColor(Severity)
- uid: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.GetSeverityColor*
  name: GetSeverityColor
  href: api/Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.html#Yoakke_SynKit_Reporting_Present_DiagnosticsStyle_GetSeverityColor_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.GetSeverityColor
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.GetSeverityColor
  nameWithType: DiagnosticsStyle.GetSeverityColor
- uid: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.LineNumberColor
  name: LineNumberColor
  href: api/Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.html#Yoakke_SynKit_Reporting_Present_DiagnosticsStyle_LineNumberColor
  commentId: P:Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.LineNumberColor
  fullName: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.LineNumberColor
  nameWithType: DiagnosticsStyle.LineNumberColor
- uid: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.LineNumberColor*
  name: LineNumberColor
  href: api/Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.html#Yoakke_SynKit_Reporting_Present_DiagnosticsStyle_LineNumberColor_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.LineNumberColor
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.LineNumberColor
  nameWithType: DiagnosticsStyle.LineNumberColor
- uid: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.LineNumberPadding
  name: LineNumberPadding
  href: api/Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.html#Yoakke_SynKit_Reporting_Present_DiagnosticsStyle_LineNumberPadding
  commentId: P:Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.LineNumberPadding
  fullName: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.LineNumberPadding
  nameWithType: DiagnosticsStyle.LineNumberPadding
- uid: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.LineNumberPadding*
  name: LineNumberPadding
  href: api/Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.html#Yoakke_SynKit_Reporting_Present_DiagnosticsStyle_LineNumberPadding_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.LineNumberPadding
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.LineNumberPadding
  nameWithType: DiagnosticsStyle.LineNumberPadding
- uid: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.SeverityColors
  name: SeverityColors
  href: api/Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.html#Yoakke_SynKit_Reporting_Present_DiagnosticsStyle_SeverityColors
  commentId: P:Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.SeverityColors
  fullName: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.SeverityColors
  nameWithType: DiagnosticsStyle.SeverityColors
- uid: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.SeverityColors*
  name: SeverityColors
  href: api/Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.html#Yoakke_SynKit_Reporting_Present_DiagnosticsStyle_SeverityColors_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.SeverityColors
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.SeverityColors
  nameWithType: DiagnosticsStyle.SeverityColors
- uid: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.SurroundingLines
  name: SurroundingLines
  href: api/Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.html#Yoakke_SynKit_Reporting_Present_DiagnosticsStyle_SurroundingLines
  commentId: P:Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.SurroundingLines
  fullName: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.SurroundingLines
  nameWithType: DiagnosticsStyle.SurroundingLines
- uid: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.SurroundingLines*
  name: SurroundingLines
  href: api/Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.html#Yoakke_SynKit_Reporting_Present_DiagnosticsStyle_SurroundingLines_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.SurroundingLines
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.SurroundingLines
  nameWithType: DiagnosticsStyle.SurroundingLines
- uid: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.TabSize
  name: TabSize
  href: api/Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.html#Yoakke_SynKit_Reporting_Present_DiagnosticsStyle_TabSize
  commentId: P:Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.TabSize
  fullName: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.TabSize
  nameWithType: DiagnosticsStyle.TabSize
- uid: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.TabSize*
  name: TabSize
  href: api/Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.html#Yoakke_SynKit_Reporting_Present_DiagnosticsStyle_TabSize_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.TabSize
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.TabSize
  nameWithType: DiagnosticsStyle.TabSize
- uid: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.TrimEmptySourceLinesAtEdges
  name: TrimEmptySourceLinesAtEdges
  href: api/Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.html#Yoakke_SynKit_Reporting_Present_DiagnosticsStyle_TrimEmptySourceLinesAtEdges
  commentId: P:Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.TrimEmptySourceLinesAtEdges
  fullName: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.TrimEmptySourceLinesAtEdges
  nameWithType: DiagnosticsStyle.TrimEmptySourceLinesAtEdges
- uid: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.TrimEmptySourceLinesAtEdges*
  name: TrimEmptySourceLinesAtEdges
  href: api/Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.html#Yoakke_SynKit_Reporting_Present_DiagnosticsStyle_TrimEmptySourceLinesAtEdges_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.TrimEmptySourceLinesAtEdges
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.DiagnosticsStyle.TrimEmptySourceLinesAtEdges
  nameWithType: DiagnosticsStyle.TrimEmptySourceLinesAtEdges
- uid: Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter
  name: IDiagnosticsPresenter
  href: api/Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.html
  commentId: T:Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter
  fullName: Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter
  nameWithType: IDiagnosticsPresenter
- uid: Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.Present(Yoakke.SynKit.Reporting.Diagnostics)
  name: Present(Diagnostics)
  href: api/Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.html#Yoakke_SynKit_Reporting_Present_IDiagnosticsPresenter_Present_Yoakke_SynKit_Reporting_Diagnostics_
  commentId: M:Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.Present(Yoakke.SynKit.Reporting.Diagnostics)
  fullName: Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.Present(Yoakke.SynKit.Reporting.Diagnostics)
  nameWithType: IDiagnosticsPresenter.Present(Diagnostics)
- uid: Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.Present*
  name: Present
  href: api/Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.html#Yoakke_SynKit_Reporting_Present_IDiagnosticsPresenter_Present_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.Present
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.Present
  nameWithType: IDiagnosticsPresenter.Present
- uid: Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.Style
  name: Style
  href: api/Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.html#Yoakke_SynKit_Reporting_Present_IDiagnosticsPresenter_Style
  commentId: P:Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.Style
  fullName: Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.Style
  nameWithType: IDiagnosticsPresenter.Style
- uid: Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.Style*
  name: Style
  href: api/Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.html#Yoakke_SynKit_Reporting_Present_IDiagnosticsPresenter_Style_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.Style
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.Style
  nameWithType: IDiagnosticsPresenter.Style
- uid: Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.SyntaxHighlighter
  name: SyntaxHighlighter
  href: api/Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.html#Yoakke_SynKit_Reporting_Present_IDiagnosticsPresenter_SyntaxHighlighter
  commentId: P:Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.SyntaxHighlighter
  fullName: Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.SyntaxHighlighter
  nameWithType: IDiagnosticsPresenter.SyntaxHighlighter
- uid: Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.SyntaxHighlighter*
  name: SyntaxHighlighter
  href: api/Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.html#Yoakke_SynKit_Reporting_Present_IDiagnosticsPresenter_SyntaxHighlighter_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.SyntaxHighlighter
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.IDiagnosticsPresenter.SyntaxHighlighter
  nameWithType: IDiagnosticsPresenter.SyntaxHighlighter
- uid: Yoakke.SynKit.Reporting.Present.ISyntaxHighlighter
  name: ISyntaxHighlighter
  href: api/Yoakke.SynKit.Reporting.Present.ISyntaxHighlighter.html
  commentId: T:Yoakke.SynKit.Reporting.Present.ISyntaxHighlighter
  fullName: Yoakke.SynKit.Reporting.Present.ISyntaxHighlighter
  nameWithType: ISyntaxHighlighter
- uid: Yoakke.SynKit.Reporting.Present.ISyntaxHighlighter.GetHighlightingForLine(Yoakke.SynKit.Text.ISourceFile,System.Int32)
  name: GetHighlightingForLine(ISourceFile, Int32)
  href: api/Yoakke.SynKit.Reporting.Present.ISyntaxHighlighter.html#Yoakke_SynKit_Reporting_Present_ISyntaxHighlighter_GetHighlightingForLine_Yoakke_SynKit_Text_ISourceFile_System_Int32_
  commentId: M:Yoakke.SynKit.Reporting.Present.ISyntaxHighlighter.GetHighlightingForLine(Yoakke.SynKit.Text.ISourceFile,System.Int32)
  fullName: Yoakke.SynKit.Reporting.Present.ISyntaxHighlighter.GetHighlightingForLine(Yoakke.SynKit.Text.ISourceFile, System.Int32)
  nameWithType: ISyntaxHighlighter.GetHighlightingForLine(ISourceFile, Int32)
- uid: Yoakke.SynKit.Reporting.Present.ISyntaxHighlighter.GetHighlightingForLine*
  name: GetHighlightingForLine
  href: api/Yoakke.SynKit.Reporting.Present.ISyntaxHighlighter.html#Yoakke_SynKit_Reporting_Present_ISyntaxHighlighter_GetHighlightingForLine_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.ISyntaxHighlighter.GetHighlightingForLine
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.ISyntaxHighlighter.GetHighlightingForLine
  nameWithType: ISyntaxHighlighter.GetHighlightingForLine
- uid: Yoakke.SynKit.Reporting.Present.ISyntaxHighlighter.Style
  name: Style
  href: api/Yoakke.SynKit.Reporting.Present.ISyntaxHighlighter.html#Yoakke_SynKit_Reporting_Present_ISyntaxHighlighter_Style
  commentId: P:Yoakke.SynKit.Reporting.Present.ISyntaxHighlighter.Style
  fullName: Yoakke.SynKit.Reporting.Present.ISyntaxHighlighter.Style
  nameWithType: ISyntaxHighlighter.Style
- uid: Yoakke.SynKit.Reporting.Present.ISyntaxHighlighter.Style*
  name: Style
  href: api/Yoakke.SynKit.Reporting.Present.ISyntaxHighlighter.html#Yoakke_SynKit_Reporting_Present_ISyntaxHighlighter_Style_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.ISyntaxHighlighter.Style
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.ISyntaxHighlighter.Style
  nameWithType: ISyntaxHighlighter.Style
- uid: Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter
  name: NullSyntaxHighlighter
  href: api/Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter.html
  commentId: T:Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter
  fullName: Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter
  nameWithType: NullSyntaxHighlighter
- uid: Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter.GetHighlightingForLine(Yoakke.SynKit.Text.ISourceFile,System.Int32)
  name: GetHighlightingForLine(ISourceFile, Int32)
  href: api/Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter.html#Yoakke_SynKit_Reporting_Present_NullSyntaxHighlighter_GetHighlightingForLine_Yoakke_SynKit_Text_ISourceFile_System_Int32_
  commentId: M:Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter.GetHighlightingForLine(Yoakke.SynKit.Text.ISourceFile,System.Int32)
  fullName: Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter.GetHighlightingForLine(Yoakke.SynKit.Text.ISourceFile, System.Int32)
  nameWithType: NullSyntaxHighlighter.GetHighlightingForLine(ISourceFile, Int32)
- uid: Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter.GetHighlightingForLine*
  name: GetHighlightingForLine
  href: api/Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter.html#Yoakke_SynKit_Reporting_Present_NullSyntaxHighlighter_GetHighlightingForLine_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter.GetHighlightingForLine
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter.GetHighlightingForLine
  nameWithType: NullSyntaxHighlighter.GetHighlightingForLine
- uid: Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter.Instance
  name: Instance
  href: api/Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter.html#Yoakke_SynKit_Reporting_Present_NullSyntaxHighlighter_Instance
  commentId: F:Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter.Instance
  fullName: Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter.Instance
  nameWithType: NullSyntaxHighlighter.Instance
- uid: Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter.Style
  name: Style
  href: api/Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter.html#Yoakke_SynKit_Reporting_Present_NullSyntaxHighlighter_Style
  commentId: P:Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter.Style
  fullName: Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter.Style
  nameWithType: NullSyntaxHighlighter.Style
- uid: Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter.Style*
  name: Style
  href: api/Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter.html#Yoakke_SynKit_Reporting_Present_NullSyntaxHighlighter_Style_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter.Style
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.NullSyntaxHighlighter.Style
  nameWithType: NullSyntaxHighlighter.Style
- uid: Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle
  name: SyntaxHighlightStyle
  href: api/Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.html
  commentId: T:Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle
  fullName: Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle
  nameWithType: SyntaxHighlightStyle
- uid: Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.Default
  name: Default
  href: api/Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.html#Yoakke_SynKit_Reporting_Present_SyntaxHighlightStyle_Default
  commentId: F:Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.Default
  fullName: Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.Default
  nameWithType: SyntaxHighlightStyle.Default
- uid: Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.DefaultColor
  name: DefaultColor
  href: api/Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.html#Yoakke_SynKit_Reporting_Present_SyntaxHighlightStyle_DefaultColor
  commentId: P:Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.DefaultColor
  fullName: Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.DefaultColor
  nameWithType: SyntaxHighlightStyle.DefaultColor
- uid: Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.DefaultColor*
  name: DefaultColor
  href: api/Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.html#Yoakke_SynKit_Reporting_Present_SyntaxHighlightStyle_DefaultColor_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.DefaultColor
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.DefaultColor
  nameWithType: SyntaxHighlightStyle.DefaultColor
- uid: Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.GetTokenColor(Yoakke.SynKit.Reporting.Present.TokenKind)
  name: GetTokenColor(TokenKind)
  href: api/Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.html#Yoakke_SynKit_Reporting_Present_SyntaxHighlightStyle_GetTokenColor_Yoakke_SynKit_Reporting_Present_TokenKind_
  commentId: M:Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.GetTokenColor(Yoakke.SynKit.Reporting.Present.TokenKind)
  fullName: Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.GetTokenColor(Yoakke.SynKit.Reporting.Present.TokenKind)
  nameWithType: SyntaxHighlightStyle.GetTokenColor(TokenKind)
- uid: Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.GetTokenColor*
  name: GetTokenColor
  href: api/Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.html#Yoakke_SynKit_Reporting_Present_SyntaxHighlightStyle_GetTokenColor_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.GetTokenColor
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.GetTokenColor
  nameWithType: SyntaxHighlightStyle.GetTokenColor
- uid: Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.TokenColors
  name: TokenColors
  href: api/Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.html#Yoakke_SynKit_Reporting_Present_SyntaxHighlightStyle_TokenColors
  commentId: P:Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.TokenColors
  fullName: Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.TokenColors
  nameWithType: SyntaxHighlightStyle.TokenColors
- uid: Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.TokenColors*
  name: TokenColors
  href: api/Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.html#Yoakke_SynKit_Reporting_Present_SyntaxHighlightStyle_TokenColors_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.TokenColors
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.SyntaxHighlightStyle.TokenColors
  nameWithType: SyntaxHighlightStyle.TokenColors
- uid: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter
  name: TextDiagnosticsPresenter
  href: api/Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.html
  commentId: T:Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter
  fullName: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter
  nameWithType: TextDiagnosticsPresenter
- uid: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.#ctor(TextWriter)
  name: TextDiagnosticsPresenter(TextWriter)
  href: api/Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.html#Yoakke_SynKit_Reporting_Present_TextDiagnosticsPresenter__ctor_TextWriter_
  commentId: M:Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.#ctor(TextWriter)
  fullName: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.TextDiagnosticsPresenter(TextWriter)
  nameWithType: TextDiagnosticsPresenter.TextDiagnosticsPresenter(TextWriter)
- uid: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.#ctor*
  name: TextDiagnosticsPresenter
  href: api/Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.html#Yoakke_SynKit_Reporting_Present_TextDiagnosticsPresenter__ctor_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.TextDiagnosticsPresenter
  nameWithType: TextDiagnosticsPresenter.TextDiagnosticsPresenter
- uid: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.Default
  name: Default
  href: api/Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.html#Yoakke_SynKit_Reporting_Present_TextDiagnosticsPresenter_Default
  commentId: F:Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.Default
  fullName: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.Default
  nameWithType: TextDiagnosticsPresenter.Default
- uid: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.Present(Yoakke.SynKit.Reporting.Diagnostics)
  name: Present(Diagnostics)
  href: api/Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.html#Yoakke_SynKit_Reporting_Present_TextDiagnosticsPresenter_Present_Yoakke_SynKit_Reporting_Diagnostics_
  commentId: M:Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.Present(Yoakke.SynKit.Reporting.Diagnostics)
  fullName: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.Present(Yoakke.SynKit.Reporting.Diagnostics)
  nameWithType: TextDiagnosticsPresenter.Present(Diagnostics)
- uid: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.Present*
  name: Present
  href: api/Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.html#Yoakke_SynKit_Reporting_Present_TextDiagnosticsPresenter_Present_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.Present
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.Present
  nameWithType: TextDiagnosticsPresenter.Present
- uid: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.Style
  name: Style
  href: api/Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.html#Yoakke_SynKit_Reporting_Present_TextDiagnosticsPresenter_Style
  commentId: P:Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.Style
  fullName: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.Style
  nameWithType: TextDiagnosticsPresenter.Style
- uid: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.Style*
  name: Style
  href: api/Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.html#Yoakke_SynKit_Reporting_Present_TextDiagnosticsPresenter_Style_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.Style
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.Style
  nameWithType: TextDiagnosticsPresenter.Style
- uid: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.SyntaxHighlighter
  name: SyntaxHighlighter
  href: api/Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.html#Yoakke_SynKit_Reporting_Present_TextDiagnosticsPresenter_SyntaxHighlighter
  commentId: P:Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.SyntaxHighlighter
  fullName: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.SyntaxHighlighter
  nameWithType: TextDiagnosticsPresenter.SyntaxHighlighter
- uid: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.SyntaxHighlighter*
  name: SyntaxHighlighter
  href: api/Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.html#Yoakke_SynKit_Reporting_Present_TextDiagnosticsPresenter_SyntaxHighlighter_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.SyntaxHighlighter
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.SyntaxHighlighter
  nameWithType: TextDiagnosticsPresenter.SyntaxHighlighter
- uid: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.Writer
  name: Writer
  href: api/Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.html#Yoakke_SynKit_Reporting_Present_TextDiagnosticsPresenter_Writer
  commentId: P:Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.Writer
  fullName: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.Writer
  nameWithType: TextDiagnosticsPresenter.Writer
- uid: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.Writer*
  name: Writer
  href: api/Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.html#Yoakke_SynKit_Reporting_Present_TextDiagnosticsPresenter_Writer_
  commentId: Overload:Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.Writer
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Present.TextDiagnosticsPresenter.Writer
  nameWithType: TextDiagnosticsPresenter.Writer
- uid: Yoakke.SynKit.Reporting.Present.TokenKind
  name: TokenKind
  href: api/Yoakke.SynKit.Reporting.Present.TokenKind.html
  commentId: T:Yoakke.SynKit.Reporting.Present.TokenKind
  fullName: Yoakke.SynKit.Reporting.Present.TokenKind
  nameWithType: TokenKind
- uid: Yoakke.SynKit.Reporting.Present.TokenKind.Comment
  name: Comment
  href: api/Yoakke.SynKit.Reporting.Present.TokenKind.html#Yoakke_SynKit_Reporting_Present_TokenKind_Comment
  commentId: F:Yoakke.SynKit.Reporting.Present.TokenKind.Comment
  fullName: Yoakke.SynKit.Reporting.Present.TokenKind.Comment
  nameWithType: TokenKind.Comment
- uid: Yoakke.SynKit.Reporting.Present.TokenKind.Keyword
  name: Keyword
  href: api/Yoakke.SynKit.Reporting.Present.TokenKind.html#Yoakke_SynKit_Reporting_Present_TokenKind_Keyword
  commentId: F:Yoakke.SynKit.Reporting.Present.TokenKind.Keyword
  fullName: Yoakke.SynKit.Reporting.Present.TokenKind.Keyword
  nameWithType: TokenKind.Keyword
- uid: Yoakke.SynKit.Reporting.Present.TokenKind.Literal
  name: Literal
  href: api/Yoakke.SynKit.Reporting.Present.TokenKind.html#Yoakke_SynKit_Reporting_Present_TokenKind_Literal
  commentId: F:Yoakke.SynKit.Reporting.Present.TokenKind.Literal
  fullName: Yoakke.SynKit.Reporting.Present.TokenKind.Literal
  nameWithType: TokenKind.Literal
- uid: Yoakke.SynKit.Reporting.Present.TokenKind.Name
  name: Name
  href: api/Yoakke.SynKit.Reporting.Present.TokenKind.html#Yoakke_SynKit_Reporting_Present_TokenKind_Name
  commentId: F:Yoakke.SynKit.Reporting.Present.TokenKind.Name
  fullName: Yoakke.SynKit.Reporting.Present.TokenKind.Name
  nameWithType: TokenKind.Name
- uid: Yoakke.SynKit.Reporting.Present.TokenKind.Operator
  name: Operator
  href: api/Yoakke.SynKit.Reporting.Present.TokenKind.html#Yoakke_SynKit_Reporting_Present_TokenKind_Operator
  commentId: F:Yoakke.SynKit.Reporting.Present.TokenKind.Operator
  fullName: Yoakke.SynKit.Reporting.Present.TokenKind.Operator
  nameWithType: TokenKind.Operator
- uid: Yoakke.SynKit.Reporting.Present.TokenKind.Other
  name: Other
  href: api/Yoakke.SynKit.Reporting.Present.TokenKind.html#Yoakke_SynKit_Reporting_Present_TokenKind_Other
  commentId: F:Yoakke.SynKit.Reporting.Present.TokenKind.Other
  fullName: Yoakke.SynKit.Reporting.Present.TokenKind.Other
  nameWithType: TokenKind.Other
- uid: Yoakke.SynKit.Reporting.Present.TokenKind.Punctuation
  name: Punctuation
  href: api/Yoakke.SynKit.Reporting.Present.TokenKind.html#Yoakke_SynKit_Reporting_Present_TokenKind_Punctuation
  commentId: F:Yoakke.SynKit.Reporting.Present.TokenKind.Punctuation
  fullName: Yoakke.SynKit.Reporting.Present.TokenKind.Punctuation
  nameWithType: TokenKind.Punctuation
- uid: Yoakke.SynKit.Reporting.Severity
  name: Severity
  href: api/Yoakke.SynKit.Reporting.Severity.html
  commentId: T:Yoakke.SynKit.Reporting.Severity
  fullName: Yoakke.SynKit.Reporting.Severity
  nameWithType: Severity
- uid: Yoakke.SynKit.Reporting.Severity.
  name: ''
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_
  commentId: F:Yoakke.SynKit.Reporting.Severity.
  fullName: Yoakke.SynKit.Reporting.Severity.
  nameWithType: Severity.
- uid: Yoakke.SynKit.Reporting.Severity.#ctor(System.String,System.Int32)
  name: Severity(String, Int32)
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity__ctor_System_String_System_Int32_
  commentId: M:Yoakke.SynKit.Reporting.Severity.#ctor(System.String,System.Int32)
  fullName: Yoakke.SynKit.Reporting.Severity.Severity(System.String, System.Int32)
  nameWithType: Severity.Severity(String, Int32)
- uid: Yoakke.SynKit.Reporting.Severity.#ctor*
  name: Severity
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity__ctor_
  commentId: Overload:Yoakke.SynKit.Reporting.Severity.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Severity.Severity
  nameWithType: Severity.Severity
- uid: Yoakke.SynKit.Reporting.Severity.CompareTo(Yoakke.SynKit.Reporting.Severity)
  name: CompareTo(Severity)
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_CompareTo_Yoakke_SynKit_Reporting_Severity_
  commentId: M:Yoakke.SynKit.Reporting.Severity.CompareTo(Yoakke.SynKit.Reporting.Severity)
  fullName: Yoakke.SynKit.Reporting.Severity.CompareTo(Yoakke.SynKit.Reporting.Severity)
  nameWithType: Severity.CompareTo(Severity)
- uid: Yoakke.SynKit.Reporting.Severity.CompareTo*
  name: CompareTo
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_CompareTo_
  commentId: Overload:Yoakke.SynKit.Reporting.Severity.CompareTo
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Severity.CompareTo
  nameWithType: Severity.CompareTo
- uid: Yoakke.SynKit.Reporting.Severity.Equals(System.Nullable{System.Object})
  name: Equals(Nullable<Object>)
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_Equals_System_Nullable_System_Object__
  commentId: M:Yoakke.SynKit.Reporting.Severity.Equals(System.Nullable{System.Object})
  name.vb: Equals(Nullable(Of Object))
  fullName: Yoakke.SynKit.Reporting.Severity.Equals(System.Nullable<System.Object>)
  fullName.vb: Yoakke.SynKit.Reporting.Severity.Equals(System.Nullable(Of System.Object))
  nameWithType: Severity.Equals(Nullable<Object>)
  nameWithType.vb: Severity.Equals(Nullable(Of Object))
- uid: Yoakke.SynKit.Reporting.Severity.Equals(Yoakke.SynKit.Reporting.Severity)
  name: Equals(Severity)
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_Equals_Yoakke_SynKit_Reporting_Severity_
  commentId: M:Yoakke.SynKit.Reporting.Severity.Equals(Yoakke.SynKit.Reporting.Severity)
  fullName: Yoakke.SynKit.Reporting.Severity.Equals(Yoakke.SynKit.Reporting.Severity)
  nameWithType: Severity.Equals(Severity)
- uid: Yoakke.SynKit.Reporting.Severity.Equals*
  name: Equals
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_Equals_
  commentId: Overload:Yoakke.SynKit.Reporting.Severity.Equals
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Severity.Equals
  nameWithType: Severity.Equals
- uid: Yoakke.SynKit.Reporting.Severity.Error
  name: Error
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_Error
  commentId: F:Yoakke.SynKit.Reporting.Severity.Error
  fullName: Yoakke.SynKit.Reporting.Severity.Error
  nameWithType: Severity.Error
- uid: Yoakke.SynKit.Reporting.Severity.GetHashCode
  name: GetHashCode()
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_GetHashCode
  commentId: M:Yoakke.SynKit.Reporting.Severity.GetHashCode
  fullName: Yoakke.SynKit.Reporting.Severity.GetHashCode()
  nameWithType: Severity.GetHashCode()
- uid: Yoakke.SynKit.Reporting.Severity.GetHashCode*
  name: GetHashCode
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_GetHashCode_
  commentId: Overload:Yoakke.SynKit.Reporting.Severity.GetHashCode
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Severity.GetHashCode
  nameWithType: Severity.GetHashCode
- uid: Yoakke.SynKit.Reporting.Severity.Help
  name: Help
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_Help
  commentId: F:Yoakke.SynKit.Reporting.Severity.Help
  fullName: Yoakke.SynKit.Reporting.Severity.Help
  nameWithType: Severity.Help
- uid: Yoakke.SynKit.Reporting.Severity.InternalError
  name: InternalError
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_InternalError
  commentId: F:Yoakke.SynKit.Reporting.Severity.InternalError
  fullName: Yoakke.SynKit.Reporting.Severity.InternalError
  nameWithType: Severity.InternalError
- uid: Yoakke.SynKit.Reporting.Severity.Name
  name: Name
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_Name
  commentId: F:Yoakke.SynKit.Reporting.Severity.Name
  fullName: Yoakke.SynKit.Reporting.Severity.Name
  nameWithType: Severity.Name
- uid: Yoakke.SynKit.Reporting.Severity.Note
  name: Note
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_Note
  commentId: F:Yoakke.SynKit.Reporting.Severity.Note
  fullName: Yoakke.SynKit.Reporting.Severity.Note
  nameWithType: Severity.Note
- uid: Yoakke.SynKit.Reporting.Severity.op_Equality(Yoakke.SynKit.Reporting.Severity,Yoakke.SynKit.Reporting.Severity)
  name: Equality(Severity, Severity)
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_op_Equality_Yoakke_SynKit_Reporting_Severity_Yoakke_SynKit_Reporting_Severity_
  commentId: M:Yoakke.SynKit.Reporting.Severity.op_Equality(Yoakke.SynKit.Reporting.Severity,Yoakke.SynKit.Reporting.Severity)
  fullName: Yoakke.SynKit.Reporting.Severity.Equality(Yoakke.SynKit.Reporting.Severity, Yoakke.SynKit.Reporting.Severity)
  nameWithType: Severity.Equality(Severity, Severity)
- uid: Yoakke.SynKit.Reporting.Severity.op_Equality*
  name: Equality
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_op_Equality_
  commentId: Overload:Yoakke.SynKit.Reporting.Severity.op_Equality
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Severity.Equality
  nameWithType: Severity.Equality
- uid: Yoakke.SynKit.Reporting.Severity.op_GreaterThan(Yoakke.SynKit.Reporting.Severity,Yoakke.SynKit.Reporting.Severity)
  name: GreaterThan(Severity, Severity)
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_op_GreaterThan_Yoakke_SynKit_Reporting_Severity_Yoakke_SynKit_Reporting_Severity_
  commentId: M:Yoakke.SynKit.Reporting.Severity.op_GreaterThan(Yoakke.SynKit.Reporting.Severity,Yoakke.SynKit.Reporting.Severity)
  fullName: Yoakke.SynKit.Reporting.Severity.GreaterThan(Yoakke.SynKit.Reporting.Severity, Yoakke.SynKit.Reporting.Severity)
  nameWithType: Severity.GreaterThan(Severity, Severity)
- uid: Yoakke.SynKit.Reporting.Severity.op_GreaterThan*
  name: GreaterThan
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_op_GreaterThan_
  commentId: Overload:Yoakke.SynKit.Reporting.Severity.op_GreaterThan
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Severity.GreaterThan
  nameWithType: Severity.GreaterThan
- uid: Yoakke.SynKit.Reporting.Severity.op_GreaterThanOrEqual(Yoakke.SynKit.Reporting.Severity,Yoakke.SynKit.Reporting.Severity)
  name: GreaterThanOrEqual(Severity, Severity)
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_op_GreaterThanOrEqual_Yoakke_SynKit_Reporting_Severity_Yoakke_SynKit_Reporting_Severity_
  commentId: M:Yoakke.SynKit.Reporting.Severity.op_GreaterThanOrEqual(Yoakke.SynKit.Reporting.Severity,Yoakke.SynKit.Reporting.Severity)
  fullName: Yoakke.SynKit.Reporting.Severity.GreaterThanOrEqual(Yoakke.SynKit.Reporting.Severity, Yoakke.SynKit.Reporting.Severity)
  nameWithType: Severity.GreaterThanOrEqual(Severity, Severity)
- uid: Yoakke.SynKit.Reporting.Severity.op_GreaterThanOrEqual*
  name: GreaterThanOrEqual
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_op_GreaterThanOrEqual_
  commentId: Overload:Yoakke.SynKit.Reporting.Severity.op_GreaterThanOrEqual
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Severity.GreaterThanOrEqual
  nameWithType: Severity.GreaterThanOrEqual
- uid: Yoakke.SynKit.Reporting.Severity.op_Inequality(Yoakke.SynKit.Reporting.Severity,Yoakke.SynKit.Reporting.Severity)
  name: Inequality(Severity, Severity)
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_op_Inequality_Yoakke_SynKit_Reporting_Severity_Yoakke_SynKit_Reporting_Severity_
  commentId: M:Yoakke.SynKit.Reporting.Severity.op_Inequality(Yoakke.SynKit.Reporting.Severity,Yoakke.SynKit.Reporting.Severity)
  fullName: Yoakke.SynKit.Reporting.Severity.Inequality(Yoakke.SynKit.Reporting.Severity, Yoakke.SynKit.Reporting.Severity)
  nameWithType: Severity.Inequality(Severity, Severity)
- uid: Yoakke.SynKit.Reporting.Severity.op_Inequality*
  name: Inequality
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_op_Inequality_
  commentId: Overload:Yoakke.SynKit.Reporting.Severity.op_Inequality
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Severity.Inequality
  nameWithType: Severity.Inequality
- uid: Yoakke.SynKit.Reporting.Severity.op_LessThan(Yoakke.SynKit.Reporting.Severity,Yoakke.SynKit.Reporting.Severity)
  name: LessThan(Severity, Severity)
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_op_LessThan_Yoakke_SynKit_Reporting_Severity_Yoakke_SynKit_Reporting_Severity_
  commentId: M:Yoakke.SynKit.Reporting.Severity.op_LessThan(Yoakke.SynKit.Reporting.Severity,Yoakke.SynKit.Reporting.Severity)
  fullName: Yoakke.SynKit.Reporting.Severity.LessThan(Yoakke.SynKit.Reporting.Severity, Yoakke.SynKit.Reporting.Severity)
  nameWithType: Severity.LessThan(Severity, Severity)
- uid: Yoakke.SynKit.Reporting.Severity.op_LessThan*
  name: LessThan
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_op_LessThan_
  commentId: Overload:Yoakke.SynKit.Reporting.Severity.op_LessThan
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Severity.LessThan
  nameWithType: Severity.LessThan
- uid: Yoakke.SynKit.Reporting.Severity.op_LessThanOrEqual(Yoakke.SynKit.Reporting.Severity,Yoakke.SynKit.Reporting.Severity)
  name: LessThanOrEqual(Severity, Severity)
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_op_LessThanOrEqual_Yoakke_SynKit_Reporting_Severity_Yoakke_SynKit_Reporting_Severity_
  commentId: M:Yoakke.SynKit.Reporting.Severity.op_LessThanOrEqual(Yoakke.SynKit.Reporting.Severity,Yoakke.SynKit.Reporting.Severity)
  fullName: Yoakke.SynKit.Reporting.Severity.LessThanOrEqual(Yoakke.SynKit.Reporting.Severity, Yoakke.SynKit.Reporting.Severity)
  nameWithType: Severity.LessThanOrEqual(Severity, Severity)
- uid: Yoakke.SynKit.Reporting.Severity.op_LessThanOrEqual*
  name: LessThanOrEqual
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_op_LessThanOrEqual_
  commentId: Overload:Yoakke.SynKit.Reporting.Severity.op_LessThanOrEqual
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.Severity.LessThanOrEqual
  nameWithType: Severity.LessThanOrEqual
- uid: Yoakke.SynKit.Reporting.Severity.Priority
  name: Priority
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_Priority
  commentId: F:Yoakke.SynKit.Reporting.Severity.Priority
  fullName: Yoakke.SynKit.Reporting.Severity.Priority
  nameWithType: Severity.Priority
- uid: Yoakke.SynKit.Reporting.Severity.Warning
  name: Warning
  href: api/Yoakke.SynKit.Reporting.Severity.html#Yoakke_SynKit_Reporting_Severity_Warning
  commentId: F:Yoakke.SynKit.Reporting.Severity.Warning
  fullName: Yoakke.SynKit.Reporting.Severity.Warning
  nameWithType: Severity.Warning
- uid: Yoakke.SynKit.Reporting.SourceDiagnosticInfo
  name: SourceDiagnosticInfo
  href: api/Yoakke.SynKit.Reporting.SourceDiagnosticInfo.html
  commentId: T:Yoakke.SynKit.Reporting.SourceDiagnosticInfo
  fullName: Yoakke.SynKit.Reporting.SourceDiagnosticInfo
  nameWithType: SourceDiagnosticInfo
- uid: Yoakke.SynKit.Reporting.SourceDiagnosticInfo.Location
  name: Location
  href: api/Yoakke.SynKit.Reporting.SourceDiagnosticInfo.html#Yoakke_SynKit_Reporting_SourceDiagnosticInfo_Location
  commentId: P:Yoakke.SynKit.Reporting.SourceDiagnosticInfo.Location
  fullName: Yoakke.SynKit.Reporting.SourceDiagnosticInfo.Location
  nameWithType: SourceDiagnosticInfo.Location
- uid: Yoakke.SynKit.Reporting.SourceDiagnosticInfo.Location*
  name: Location
  href: api/Yoakke.SynKit.Reporting.SourceDiagnosticInfo.html#Yoakke_SynKit_Reporting_SourceDiagnosticInfo_Location_
  commentId: Overload:Yoakke.SynKit.Reporting.SourceDiagnosticInfo.Location
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.SourceDiagnosticInfo.Location
  nameWithType: SourceDiagnosticInfo.Location
- uid: Yoakke.SynKit.Reporting.SourceDiagnosticInfo.Message
  name: Message
  href: api/Yoakke.SynKit.Reporting.SourceDiagnosticInfo.html#Yoakke_SynKit_Reporting_SourceDiagnosticInfo_Message
  commentId: P:Yoakke.SynKit.Reporting.SourceDiagnosticInfo.Message
  fullName: Yoakke.SynKit.Reporting.SourceDiagnosticInfo.Message
  nameWithType: SourceDiagnosticInfo.Message
- uid: Yoakke.SynKit.Reporting.SourceDiagnosticInfo.Message*
  name: Message
  href: api/Yoakke.SynKit.Reporting.SourceDiagnosticInfo.html#Yoakke_SynKit_Reporting_SourceDiagnosticInfo_Message_
  commentId: Overload:Yoakke.SynKit.Reporting.SourceDiagnosticInfo.Message
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.SourceDiagnosticInfo.Message
  nameWithType: SourceDiagnosticInfo.Message
- uid: Yoakke.SynKit.Reporting.SourceDiagnosticInfo.Severity
  name: Severity
  href: api/Yoakke.SynKit.Reporting.SourceDiagnosticInfo.html#Yoakke_SynKit_Reporting_SourceDiagnosticInfo_Severity
  commentId: P:Yoakke.SynKit.Reporting.SourceDiagnosticInfo.Severity
  fullName: Yoakke.SynKit.Reporting.SourceDiagnosticInfo.Severity
  nameWithType: SourceDiagnosticInfo.Severity
- uid: Yoakke.SynKit.Reporting.SourceDiagnosticInfo.Severity*
  name: Severity
  href: api/Yoakke.SynKit.Reporting.SourceDiagnosticInfo.html#Yoakke_SynKit_Reporting_SourceDiagnosticInfo_Severity_
  commentId: Overload:Yoakke.SynKit.Reporting.SourceDiagnosticInfo.Severity
  isSpec: "True"
  fullName: Yoakke.SynKit.Reporting.SourceDiagnosticInfo.Severity
  nameWithType: SourceDiagnosticInfo.Severity
- uid: Yoakke.SynKit.Text
  name: Yoakke.SynKit.Text
  href: api/Yoakke.SynKit.Text.html
  commentId: N:Yoakke.SynKit.Text
  fullName: Yoakke.SynKit.Text
  nameWithType: Yoakke.SynKit.Text
- uid: Yoakke.SynKit.Text.ISourceFile
  name: ISourceFile
  href: api/Yoakke.SynKit.Text.ISourceFile.html
  commentId: T:Yoakke.SynKit.Text.ISourceFile
  fullName: Yoakke.SynKit.Text.ISourceFile
  nameWithType: ISourceFile
- uid: Yoakke.SynKit.Text.ISourceFile.AvailableLines
  name: AvailableLines
  href: api/Yoakke.SynKit.Text.ISourceFile.html#Yoakke_SynKit_Text_ISourceFile_AvailableLines
  commentId: P:Yoakke.SynKit.Text.ISourceFile.AvailableLines
  fullName: Yoakke.SynKit.Text.ISourceFile.AvailableLines
  nameWithType: ISourceFile.AvailableLines
- uid: Yoakke.SynKit.Text.ISourceFile.AvailableLines*
  name: AvailableLines
  href: api/Yoakke.SynKit.Text.ISourceFile.html#Yoakke_SynKit_Text_ISourceFile_AvailableLines_
  commentId: Overload:Yoakke.SynKit.Text.ISourceFile.AvailableLines
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.ISourceFile.AvailableLines
  nameWithType: ISourceFile.AvailableLines
- uid: Yoakke.SynKit.Text.ISourceFile.GetLine(System.Int32)
  name: GetLine(Int32)
  href: api/Yoakke.SynKit.Text.ISourceFile.html#Yoakke_SynKit_Text_ISourceFile_GetLine_System_Int32_
  commentId: M:Yoakke.SynKit.Text.ISourceFile.GetLine(System.Int32)
  fullName: Yoakke.SynKit.Text.ISourceFile.GetLine(System.Int32)
  nameWithType: ISourceFile.GetLine(Int32)
- uid: Yoakke.SynKit.Text.ISourceFile.GetLine*
  name: GetLine
  href: api/Yoakke.SynKit.Text.ISourceFile.html#Yoakke_SynKit_Text_ISourceFile_GetLine_
  commentId: Overload:Yoakke.SynKit.Text.ISourceFile.GetLine
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.ISourceFile.GetLine
  nameWithType: ISourceFile.GetLine
- uid: Yoakke.SynKit.Text.ISourceFile.Path
  name: Path
  href: api/Yoakke.SynKit.Text.ISourceFile.html#Yoakke_SynKit_Text_ISourceFile_Path
  commentId: P:Yoakke.SynKit.Text.ISourceFile.Path
  fullName: Yoakke.SynKit.Text.ISourceFile.Path
  nameWithType: ISourceFile.Path
- uid: Yoakke.SynKit.Text.ISourceFile.Path*
  name: Path
  href: api/Yoakke.SynKit.Text.ISourceFile.html#Yoakke_SynKit_Text_ISourceFile_Path_
  commentId: Overload:Yoakke.SynKit.Text.ISourceFile.Path
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.ISourceFile.Path
  nameWithType: ISourceFile.Path
- uid: Yoakke.SynKit.Text.ISourceFile.Reader
  name: Reader
  href: api/Yoakke.SynKit.Text.ISourceFile.html#Yoakke_SynKit_Text_ISourceFile_Reader
  commentId: P:Yoakke.SynKit.Text.ISourceFile.Reader
  fullName: Yoakke.SynKit.Text.ISourceFile.Reader
  nameWithType: ISourceFile.Reader
- uid: Yoakke.SynKit.Text.ISourceFile.Reader*
  name: Reader
  href: api/Yoakke.SynKit.Text.ISourceFile.html#Yoakke_SynKit_Text_ISourceFile_Reader_
  commentId: Overload:Yoakke.SynKit.Text.ISourceFile.Reader
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.ISourceFile.Reader
  nameWithType: ISourceFile.Reader
- uid: Yoakke.SynKit.Text.Metrics
  name: Yoakke.SynKit.Text.Metrics
  href: api/Yoakke.SynKit.Text.Metrics.html
  commentId: N:Yoakke.SynKit.Text.Metrics
  fullName: Yoakke.SynKit.Text.Metrics
  nameWithType: Yoakke.SynKit.Text.Metrics
- uid: Yoakke.SynKit.Text.Metrics.IStringMetric
  name: IStringMetric
  href: api/Yoakke.SynKit.Text.Metrics.IStringMetric.html
  commentId: T:Yoakke.SynKit.Text.Metrics.IStringMetric
  fullName: Yoakke.SynKit.Text.Metrics.IStringMetric
  nameWithType: IStringMetric
- uid: Yoakke.SynKit.Text.Metrics.IStringMetric.Distance(ReadOnlySpan{System.Char},ReadOnlySpan{System.Char})
  name: Distance(ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  href: api/Yoakke.SynKit.Text.Metrics.IStringMetric.html#Yoakke_SynKit_Text_Metrics_IStringMetric_Distance_ReadOnlySpan_System_Char__ReadOnlySpan_System_Char__
  commentId: M:Yoakke.SynKit.Text.Metrics.IStringMetric.Distance(ReadOnlySpan{System.Char},ReadOnlySpan{System.Char})
  name.vb: Distance(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
  fullName: Yoakke.SynKit.Text.Metrics.IStringMetric.Distance(ReadOnlySpan<System.Char>, ReadOnlySpan<System.Char>)
  fullName.vb: Yoakke.SynKit.Text.Metrics.IStringMetric.Distance(ReadOnlySpan(Of System.Char), ReadOnlySpan(Of System.Char))
  nameWithType: IStringMetric.Distance(ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: IStringMetric.Distance(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
- uid: Yoakke.SynKit.Text.Metrics.IStringMetric.Distance*
  name: Distance
  href: api/Yoakke.SynKit.Text.Metrics.IStringMetric.html#Yoakke_SynKit_Text_Metrics_IStringMetric_Distance_
  commentId: Overload:Yoakke.SynKit.Text.Metrics.IStringMetric.Distance
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.Metrics.IStringMetric.Distance
  nameWithType: IStringMetric.Distance
- uid: Yoakke.SynKit.Text.Metrics.LevenshteinDistance
  name: LevenshteinDistance
  href: api/Yoakke.SynKit.Text.Metrics.LevenshteinDistance.html
  commentId: T:Yoakke.SynKit.Text.Metrics.LevenshteinDistance
  fullName: Yoakke.SynKit.Text.Metrics.LevenshteinDistance
  nameWithType: LevenshteinDistance
- uid: Yoakke.SynKit.Text.Metrics.LevenshteinDistance.Distance(ReadOnlySpan{System.Char},ReadOnlySpan{System.Char})
  name: Distance(ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  href: api/Yoakke.SynKit.Text.Metrics.LevenshteinDistance.html#Yoakke_SynKit_Text_Metrics_LevenshteinDistance_Distance_ReadOnlySpan_System_Char__ReadOnlySpan_System_Char__
  commentId: M:Yoakke.SynKit.Text.Metrics.LevenshteinDistance.Distance(ReadOnlySpan{System.Char},ReadOnlySpan{System.Char})
  name.vb: Distance(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
  fullName: Yoakke.SynKit.Text.Metrics.LevenshteinDistance.Distance(ReadOnlySpan<System.Char>, ReadOnlySpan<System.Char>)
  fullName.vb: Yoakke.SynKit.Text.Metrics.LevenshteinDistance.Distance(ReadOnlySpan(Of System.Char), ReadOnlySpan(Of System.Char))
  nameWithType: LevenshteinDistance.Distance(ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: LevenshteinDistance.Distance(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
- uid: Yoakke.SynKit.Text.Metrics.LevenshteinDistance.Distance*
  name: Distance
  href: api/Yoakke.SynKit.Text.Metrics.LevenshteinDistance.html#Yoakke_SynKit_Text_Metrics_LevenshteinDistance_Distance_
  commentId: Overload:Yoakke.SynKit.Text.Metrics.LevenshteinDistance.Distance
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.Metrics.LevenshteinDistance.Distance
  nameWithType: LevenshteinDistance.Distance
- uid: Yoakke.SynKit.Text.Metrics.LevenshteinDistance.Instance
  name: Instance
  href: api/Yoakke.SynKit.Text.Metrics.LevenshteinDistance.html#Yoakke_SynKit_Text_Metrics_LevenshteinDistance_Instance
  commentId: F:Yoakke.SynKit.Text.Metrics.LevenshteinDistance.Instance
  fullName: Yoakke.SynKit.Text.Metrics.LevenshteinDistance.Instance
  nameWithType: LevenshteinDistance.Instance
- uid: Yoakke.SynKit.Text.Metrics.OptimalStringAlignmentDistance
  name: OptimalStringAlignmentDistance
  href: api/Yoakke.SynKit.Text.Metrics.OptimalStringAlignmentDistance.html
  commentId: T:Yoakke.SynKit.Text.Metrics.OptimalStringAlignmentDistance
  fullName: Yoakke.SynKit.Text.Metrics.OptimalStringAlignmentDistance
  nameWithType: OptimalStringAlignmentDistance
- uid: Yoakke.SynKit.Text.Metrics.OptimalStringAlignmentDistance.Distance(ReadOnlySpan{System.Char},ReadOnlySpan{System.Char})
  name: Distance(ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  href: api/Yoakke.SynKit.Text.Metrics.OptimalStringAlignmentDistance.html#Yoakke_SynKit_Text_Metrics_OptimalStringAlignmentDistance_Distance_ReadOnlySpan_System_Char__ReadOnlySpan_System_Char__
  commentId: M:Yoakke.SynKit.Text.Metrics.OptimalStringAlignmentDistance.Distance(ReadOnlySpan{System.Char},ReadOnlySpan{System.Char})
  name.vb: Distance(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
  fullName: Yoakke.SynKit.Text.Metrics.OptimalStringAlignmentDistance.Distance(ReadOnlySpan<System.Char>, ReadOnlySpan<System.Char>)
  fullName.vb: Yoakke.SynKit.Text.Metrics.OptimalStringAlignmentDistance.Distance(ReadOnlySpan(Of System.Char), ReadOnlySpan(Of System.Char))
  nameWithType: OptimalStringAlignmentDistance.Distance(ReadOnlySpan<Char>, ReadOnlySpan<Char>)
  nameWithType.vb: OptimalStringAlignmentDistance.Distance(ReadOnlySpan(Of Char), ReadOnlySpan(Of Char))
- uid: Yoakke.SynKit.Text.Metrics.OptimalStringAlignmentDistance.Distance*
  name: Distance
  href: api/Yoakke.SynKit.Text.Metrics.OptimalStringAlignmentDistance.html#Yoakke_SynKit_Text_Metrics_OptimalStringAlignmentDistance_Distance_
  commentId: Overload:Yoakke.SynKit.Text.Metrics.OptimalStringAlignmentDistance.Distance
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.Metrics.OptimalStringAlignmentDistance.Distance
  nameWithType: OptimalStringAlignmentDistance.Distance
- uid: Yoakke.SynKit.Text.Metrics.OptimalStringAlignmentDistance.Instance
  name: Instance
  href: api/Yoakke.SynKit.Text.Metrics.OptimalStringAlignmentDistance.html#Yoakke_SynKit_Text_Metrics_OptimalStringAlignmentDistance_Instance
  commentId: F:Yoakke.SynKit.Text.Metrics.OptimalStringAlignmentDistance.Instance
  fullName: Yoakke.SynKit.Text.Metrics.OptimalStringAlignmentDistance.Instance
  nameWithType: OptimalStringAlignmentDistance.Instance
- uid: Yoakke.SynKit.Text.SourceFile
  name: SourceFile
  href: api/Yoakke.SynKit.Text.SourceFile.html
  commentId: T:Yoakke.SynKit.Text.SourceFile
  fullName: Yoakke.SynKit.Text.SourceFile
  nameWithType: SourceFile
- uid: Yoakke.SynKit.Text.SourceFile.#ctor(System.String,System.String)
  name: SourceFile(String, String)
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile__ctor_System_String_System_String_
  commentId: M:Yoakke.SynKit.Text.SourceFile.#ctor(System.String,System.String)
  fullName: Yoakke.SynKit.Text.SourceFile.SourceFile(System.String, System.String)
  nameWithType: SourceFile.SourceFile(String, String)
- uid: Yoakke.SynKit.Text.SourceFile.#ctor(System.String,TextReader)
  name: SourceFile(String, TextReader)
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile__ctor_System_String_TextReader_
  commentId: M:Yoakke.SynKit.Text.SourceFile.#ctor(System.String,TextReader)
  fullName: Yoakke.SynKit.Text.SourceFile.SourceFile(System.String, TextReader)
  nameWithType: SourceFile.SourceFile(String, TextReader)
- uid: Yoakke.SynKit.Text.SourceFile.#ctor*
  name: SourceFile
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile__ctor_
  commentId: Overload:Yoakke.SynKit.Text.SourceFile.#ctor
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.SourceFile.SourceFile
  nameWithType: SourceFile.SourceFile
- uid: Yoakke.SynKit.Text.SourceFile.AvailableLines
  name: AvailableLines
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_AvailableLines
  commentId: P:Yoakke.SynKit.Text.SourceFile.AvailableLines
  fullName: Yoakke.SynKit.Text.SourceFile.AvailableLines
  nameWithType: SourceFile.AvailableLines
- uid: Yoakke.SynKit.Text.SourceFile.AvailableLines*
  name: AvailableLines
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_AvailableLines_
  commentId: Overload:Yoakke.SynKit.Text.SourceFile.AvailableLines
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.SourceFile.AvailableLines
  nameWithType: SourceFile.AvailableLines
- uid: Yoakke.SynKit.Text.SourceFile.Close
  name: Close()
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_Close
  commentId: M:Yoakke.SynKit.Text.SourceFile.Close
  fullName: Yoakke.SynKit.Text.SourceFile.Close()
  nameWithType: SourceFile.Close()
- uid: Yoakke.SynKit.Text.SourceFile.Close*
  name: Close
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_Close_
  commentId: Overload:Yoakke.SynKit.Text.SourceFile.Close
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.SourceFile.Close
  nameWithType: SourceFile.Close
- uid: Yoakke.SynKit.Text.SourceFile.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_Dispose_System_Boolean_
  commentId: M:Yoakke.SynKit.Text.SourceFile.Dispose(System.Boolean)
  fullName: Yoakke.SynKit.Text.SourceFile.Dispose(System.Boolean)
  nameWithType: SourceFile.Dispose(Boolean)
- uid: Yoakke.SynKit.Text.SourceFile.Dispose*
  name: Dispose
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_Dispose_
  commentId: Overload:Yoakke.SynKit.Text.SourceFile.Dispose
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.SourceFile.Dispose
  nameWithType: SourceFile.Dispose
- uid: Yoakke.SynKit.Text.SourceFile.GetLine(System.Int32)
  name: GetLine(Int32)
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_GetLine_System_Int32_
  commentId: M:Yoakke.SynKit.Text.SourceFile.GetLine(System.Int32)
  fullName: Yoakke.SynKit.Text.SourceFile.GetLine(System.Int32)
  nameWithType: SourceFile.GetLine(Int32)
- uid: Yoakke.SynKit.Text.SourceFile.GetLine*
  name: GetLine
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_GetLine_
  commentId: Overload:Yoakke.SynKit.Text.SourceFile.GetLine
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.SourceFile.GetLine
  nameWithType: SourceFile.GetLine
- uid: Yoakke.SynKit.Text.SourceFile.Path
  name: Path
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_Path
  commentId: P:Yoakke.SynKit.Text.SourceFile.Path
  fullName: Yoakke.SynKit.Text.SourceFile.Path
  nameWithType: SourceFile.Path
- uid: Yoakke.SynKit.Text.SourceFile.Path*
  name: Path
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_Path_
  commentId: Overload:Yoakke.SynKit.Text.SourceFile.Path
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.SourceFile.Path
  nameWithType: SourceFile.Path
- uid: Yoakke.SynKit.Text.SourceFile.Peek
  name: Peek()
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_Peek
  commentId: M:Yoakke.SynKit.Text.SourceFile.Peek
  fullName: Yoakke.SynKit.Text.SourceFile.Peek()
  nameWithType: SourceFile.Peek()
- uid: Yoakke.SynKit.Text.SourceFile.Peek*
  name: Peek
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_Peek_
  commentId: Overload:Yoakke.SynKit.Text.SourceFile.Peek
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.SourceFile.Peek
  nameWithType: SourceFile.Peek
- uid: Yoakke.SynKit.Text.SourceFile.Read
  name: Read()
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_Read
  commentId: M:Yoakke.SynKit.Text.SourceFile.Read
  fullName: Yoakke.SynKit.Text.SourceFile.Read()
  nameWithType: SourceFile.Read()
- uid: Yoakke.SynKit.Text.SourceFile.Read(System.Char[],System.Int32,System.Int32)
  name: Read(Char[], Int32, Int32)
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_Read_System_Char___System_Int32_System_Int32_
  commentId: M:Yoakke.SynKit.Text.SourceFile.Read(System.Char[],System.Int32,System.Int32)
  name.vb: Read(Char(), Int32, Int32)
  fullName: Yoakke.SynKit.Text.SourceFile.Read(System.Char[], System.Int32, System.Int32)
  fullName.vb: Yoakke.SynKit.Text.SourceFile.Read(System.Char(), System.Int32, System.Int32)
  nameWithType: SourceFile.Read(Char[], Int32, Int32)
  nameWithType.vb: SourceFile.Read(Char(), Int32, Int32)
- uid: Yoakke.SynKit.Text.SourceFile.Read*
  name: Read
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_Read_
  commentId: Overload:Yoakke.SynKit.Text.SourceFile.Read
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.SourceFile.Read
  nameWithType: SourceFile.Read
- uid: Yoakke.SynKit.Text.SourceFile.ReadAsync(System.Char[],System.Int32,System.Int32)
  name: ReadAsync(Char[], Int32, Int32)
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_ReadAsync_System_Char___System_Int32_System_Int32_
  commentId: M:Yoakke.SynKit.Text.SourceFile.ReadAsync(System.Char[],System.Int32,System.Int32)
  name.vb: ReadAsync(Char(), Int32, Int32)
  fullName: Yoakke.SynKit.Text.SourceFile.ReadAsync(System.Char[], System.Int32, System.Int32)
  fullName.vb: Yoakke.SynKit.Text.SourceFile.ReadAsync(System.Char(), System.Int32, System.Int32)
  nameWithType: SourceFile.ReadAsync(Char[], Int32, Int32)
  nameWithType.vb: SourceFile.ReadAsync(Char(), Int32, Int32)
- uid: Yoakke.SynKit.Text.SourceFile.ReadAsync*
  name: ReadAsync
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_ReadAsync_
  commentId: Overload:Yoakke.SynKit.Text.SourceFile.ReadAsync
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.SourceFile.ReadAsync
  nameWithType: SourceFile.ReadAsync
- uid: Yoakke.SynKit.Text.SourceFile.ReadBlock(System.Char[],System.Int32,System.Int32)
  name: ReadBlock(Char[], Int32, Int32)
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_ReadBlock_System_Char___System_Int32_System_Int32_
  commentId: M:Yoakke.SynKit.Text.SourceFile.ReadBlock(System.Char[],System.Int32,System.Int32)
  name.vb: ReadBlock(Char(), Int32, Int32)
  fullName: Yoakke.SynKit.Text.SourceFile.ReadBlock(System.Char[], System.Int32, System.Int32)
  fullName.vb: Yoakke.SynKit.Text.SourceFile.ReadBlock(System.Char(), System.Int32, System.Int32)
  nameWithType: SourceFile.ReadBlock(Char[], Int32, Int32)
  nameWithType.vb: SourceFile.ReadBlock(Char(), Int32, Int32)
- uid: Yoakke.SynKit.Text.SourceFile.ReadBlock*
  name: ReadBlock
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_ReadBlock_
  commentId: Overload:Yoakke.SynKit.Text.SourceFile.ReadBlock
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.SourceFile.ReadBlock
  nameWithType: SourceFile.ReadBlock
- uid: Yoakke.SynKit.Text.SourceFile.ReadBlockAsync(System.Char[],System.Int32,System.Int32)
  name: ReadBlockAsync(Char[], Int32, Int32)
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_ReadBlockAsync_System_Char___System_Int32_System_Int32_
  commentId: M:Yoakke.SynKit.Text.SourceFile.ReadBlockAsync(System.Char[],System.Int32,System.Int32)
  name.vb: ReadBlockAsync(Char(), Int32, Int32)
  fullName: Yoakke.SynKit.Text.SourceFile.ReadBlockAsync(System.Char[], System.Int32, System.Int32)
  fullName.vb: Yoakke.SynKit.Text.SourceFile.ReadBlockAsync(System.Char(), System.Int32, System.Int32)
  nameWithType: SourceFile.ReadBlockAsync(Char[], Int32, Int32)
  nameWithType.vb: SourceFile.ReadBlockAsync(Char(), Int32, Int32)
- uid: Yoakke.SynKit.Text.SourceFile.ReadBlockAsync*
  name: ReadBlockAsync
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_ReadBlockAsync_
  commentId: Overload:Yoakke.SynKit.Text.SourceFile.ReadBlockAsync
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.SourceFile.ReadBlockAsync
  nameWithType: SourceFile.ReadBlockAsync
- uid: Yoakke.SynKit.Text.SourceFile.Reader
  name: Reader
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_Reader
  commentId: P:Yoakke.SynKit.Text.SourceFile.Reader
  fullName: Yoakke.SynKit.Text.SourceFile.Reader
  nameWithType: SourceFile.Reader
- uid: Yoakke.SynKit.Text.SourceFile.Reader*
  name: Reader
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_Reader_
  commentId: Overload:Yoakke.SynKit.Text.SourceFile.Reader
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.SourceFile.Reader
  nameWithType: SourceFile.Reader
- uid: Yoakke.SynKit.Text.SourceFile.ReadLine
  name: ReadLine()
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_ReadLine
  commentId: M:Yoakke.SynKit.Text.SourceFile.ReadLine
  fullName: Yoakke.SynKit.Text.SourceFile.ReadLine()
  nameWithType: SourceFile.ReadLine()
- uid: Yoakke.SynKit.Text.SourceFile.ReadLine*
  name: ReadLine
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_ReadLine_
  commentId: Overload:Yoakke.SynKit.Text.SourceFile.ReadLine
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.SourceFile.ReadLine
  nameWithType: SourceFile.ReadLine
- uid: Yoakke.SynKit.Text.SourceFile.ReadLineAsync
  name: ReadLineAsync()
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_ReadLineAsync
  commentId: M:Yoakke.SynKit.Text.SourceFile.ReadLineAsync
  fullName: Yoakke.SynKit.Text.SourceFile.ReadLineAsync()
  nameWithType: SourceFile.ReadLineAsync()
- uid: Yoakke.SynKit.Text.SourceFile.ReadLineAsync*
  name: ReadLineAsync
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_ReadLineAsync_
  commentId: Overload:Yoakke.SynKit.Text.SourceFile.ReadLineAsync
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.SourceFile.ReadLineAsync
  nameWithType: SourceFile.ReadLineAsync
- uid: Yoakke.SynKit.Text.SourceFile.ReadToEnd
  name: ReadToEnd()
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_ReadToEnd
  commentId: M:Yoakke.SynKit.Text.SourceFile.ReadToEnd
  fullName: Yoakke.SynKit.Text.SourceFile.ReadToEnd()
  nameWithType: SourceFile.ReadToEnd()
- uid: Yoakke.SynKit.Text.SourceFile.ReadToEnd*
  name: ReadToEnd
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_ReadToEnd_
  commentId: Overload:Yoakke.SynKit.Text.SourceFile.ReadToEnd
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.SourceFile.ReadToEnd
  nameWithType: SourceFile.ReadToEnd
- uid: Yoakke.SynKit.Text.SourceFile.ReadToEndAsync
  name: ReadToEndAsync()
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_ReadToEndAsync
  commentId: M:Yoakke.SynKit.Text.SourceFile.ReadToEndAsync
  fullName: Yoakke.SynKit.Text.SourceFile.ReadToEndAsync()
  nameWithType: SourceFile.ReadToEndAsync()
- uid: Yoakke.SynKit.Text.SourceFile.ReadToEndAsync*
  name: ReadToEndAsync
  href: api/Yoakke.SynKit.Text.SourceFile.html#Yoakke_SynKit_Text_SourceFile_ReadToEndAsync_
  commentId: Overload:Yoakke.SynKit.Text.SourceFile.ReadToEndAsync
  isSpec: "True"
  fullName: Yoakke.SynKit.Text.SourceFile.ReadToEndAsync
  nameWithType: SourceFile.ReadToEndAsync
