root = true

[*]
charset = utf-8
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true
indent_style = space

[*.{csproj,props}]
indent_size = 2

[*.cs]

indent_size = 4
file_header_template = Copyright (c) 2021-2022 Yoakke.\nLicensed under the Apache License, Version 2.0.\nSource repository: https://github.com/LanguageDev/Yoakke

# this. qualification
dotnet_style_qualification_for_field = true:warning
dotnet_style_qualification_for_method = true:warning
dotnet_style_qualification_for_property = true:warning
dotnet_style_qualification_for_event = true:warning

# Switch style
csharp_indent_case_contents = true
csharp_indent_switch_labels = false

# Sort System.* using directives alphabetically, and place them before other usings
dotnet_sort_system_directives_first = true

# Leave code block on single line
csharp_preserve_single_line_blocks = true
# Leave statements and member declarations on the same line
csharp_preserve_single_line_statements = true

# Prefer no curly braces if allowed
csharp_prefer_braces = false:suggestion

# Block preferences
csharp_style_expression_bodied_constructors = false:suggestion
csharp_style_expression_bodied_methods = true:suggestion
csharp_style_expression_bodied_operators = true:suggestion
csharp_style_expression_bodied_properties = true:suggestion

# Prefer out variables to be declared inline in the argument list of a method call when possible
csharp_style_inlined_variable_declaration = true:suggestion
# Prefer tuple names to ItemX properties
dotnet_style_explicit_tuple_names = true:suggestion
# Prefer the language keyword for member access expressions, instead of the type name, for types that have a keyword to represent them
dotnet_style_predefined_type_for_member_access = true:suggestion

# Prefer default over default(T)
csharp_prefer_simple_default_expression = true:suggestion
# Prefer objects to be initialized using object initializers when possible
dotnet_style_object_initializer = true:suggestion
# Prefer inferred tuple element names
dotnet_style_prefer_inferred_tuple_names = true:suggestion
# Prefer the language keyword for local variables, method parameters, and class members, instead of the type name, for types that have a keyword to represent them
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion

# Var preferences
csharp_style_var_elsewhere = true:suggestion
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion

# Prefer file scoped namespaces over braced namespaces
csharp_style_namespace_declarations = file_scoped:warning

# Prefer local functions over anonymous functions
csharp_style_pattern_local_over_anonymous_function = true:suggestion

# Prefer accessibility modifiers to be declared except for public interface members. This will currently not differ from always and will act as future proofing for if C# adds default interface methods.
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning

# When this rule is set to a list of modifiers, prefer the specified ordering.
csharp_preferred_modifier_order = public,private,protected,internal,static,readonly,override,abstract,new:suggestion

# Prefer pattern matching instead of is expression with type casts
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
